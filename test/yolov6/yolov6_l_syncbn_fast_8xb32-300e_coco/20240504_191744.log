2024/05/04 19:17:48 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.8.18 (default, Sep 11 2023, 13:40:15) [GCC 11.2.0]
    CUDA available: True
    numpy_random_seed: 792423326
    GPU 0,1: NVIDIA GeForce RTX 3080 Ti
    CUDA_HOME: /usr/local/cuda
    NVCC: Cuda compilation tools, release 11.4, V11.4.48
    GCC: gcc (Ubuntu 9.4.0-1ubuntu1~20.04.2) 9.4.0
    PyTorch: 1.11.0
    PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.5.2 (Git Hash a9302535553c73243c632ad3c4c80beec3d19a1e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.11.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.12.0
    OpenCV: 4.9.0
    MMEngine: 0.10.2

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 792423326
    Distributed launcher: pytorch
    Distributed training: True
    GPU number: 2
------------------------------------------------------------

2024/05/04 19:17:49 - mmengine - INFO - Config:
_backend_args = None
_multiscale_resize_transforms = [
    dict(
        transforms=[
            dict(scale=(
                640,
                640,
            ), type='YOLOv5KeepRatioResize'),
            dict(
                allow_scale_up=False,
                pad_val=dict(img=114),
                scale=(
                    640,
                    640,
                ),
                type='LetterResize'),
        ],
        type='Compose'),
    dict(
        transforms=[
            dict(scale=(
                320,
                320,
            ), type='YOLOv5KeepRatioResize'),
            dict(
                allow_scale_up=False,
                pad_val=dict(img=114),
                scale=(
                    320,
                    320,
                ),
                type='LetterResize'),
        ],
        type='Compose'),
    dict(
        transforms=[
            dict(scale=(
                960,
                960,
            ), type='YOLOv5KeepRatioResize'),
            dict(
                allow_scale_up=False,
                pad_val=dict(img=114),
                scale=(
                    960,
                    960,
                ),
                type='LetterResize'),
        ],
        type='Compose'),
]
affine_scale = 0.9
backend_args = None
base_lr = 0.01
batch_shapes_cfg = dict(
    batch_size=1,
    extra_pad_ratio=0.5,
    img_size=640,
    size_divisor=32,
    type='BatchShapePolicy')
custom_hooks = [
    dict(
        ema_type='ExpMomentumEMA',
        momentum=0.0001,
        priority=49,
        strict_load=False,
        type='EMAHook',
        update_buffers=True),
    dict(
        switch_epoch=21,
        switch_pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(scale=(
                640,
                640,
            ), type='YOLOv5KeepRatioResize'),
            dict(
                allow_scale_up=True,
                pad_val=dict(img=114),
                scale=(
                    640,
                    640,
                ),
                type='LetterResize'),
            dict(
                max_rotate_degree=0.0,
                max_shear_degree=0.0,
                max_translate_ratio=0.1,
                scaling_ratio_range=(
                    0.5,
                    1.5,
                ),
                type='YOLOv5RandomAffine'),
            dict(type='YOLOv5HSVRandomAug'),
            dict(prob=0.5, type='mmdet.RandomFlip'),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'flip',
                    'flip_direction',
                ),
                type='mmdet.PackDetInputs'),
        ],
        type='mmdet.PipelineSwitchHook'),
]
data_root = '/media/iris/새 볼륨/nonslip_patching_paper/coco_format/'
dataset_type = 'YOLOv5CocoDataset'
deepen_factor = 1
default_hooks = dict(
    checkpoint=dict(
        interval=1, max_keep_ckpts=3, save_best='auto', type='CheckpointHook'),
    logger=dict(interval=50, type='LoggerHook'),
    param_scheduler=dict(
        lr_factor=0.01,
        max_epochs=36,
        scheduler_type='cosine',
        type='YOLOv5ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='mmdet.DetVisualizationHook'))
default_scope = 'mmyolo'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_scale = (
    640,
    640,
)
img_scales = [
    (
        640,
        640,
    ),
    (
        320,
        320,
    ),
    (
        960,
        960,
    ),
]
launcher = 'pytorch'
load_from = None
log_level = 'INFO'
log_processor = dict(by_epoch=True, type='LogProcessor', window_size=50)
lr_factor = 0.01
max_epochs = 36
max_keep_ckpts = 3
model = dict(
    backbone=dict(
        act_cfg=dict(inplace=True, type='SiLU'),
        block_cfg=dict(
            norm_cfg=dict(eps=0.001, momentum=0.03, type='BN'),
            type='ConvWrapper'),
        deepen_factor=1,
        hidden_ratio=0.5,
        norm_cfg=dict(eps=0.001, momentum=0.03, type='BN'),
        type='YOLOv6CSPBep',
        widen_factor=1),
    bbox_head=dict(
        head_module=dict(
            act_cfg=dict(inplace=True, type='SiLU'),
            featmap_strides=[
                8,
                16,
                32,
            ],
            in_channels=[
                128,
                256,
                512,
            ],
            norm_cfg=dict(eps=0.001, momentum=0.03, type='BN'),
            num_classes=4,
            type='YOLOv6HeadModule',
            widen_factor=1),
        loss_bbox=dict(
            bbox_format='xyxy',
            iou_mode='giou',
            loss_weight=2.5,
            reduction='mean',
            return_iou=False,
            type='IoULoss'),
        type='YOLOv6Head'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            0.0,
            0.0,
            0.0,
        ],
        std=[
            255.0,
            255.0,
            255.0,
        ],
        type='YOLOv5DetDataPreprocessor'),
    neck=dict(
        act_cfg=dict(inplace=True, type='ReLU'),
        block_act_cfg=dict(inplace=True, type='SiLU'),
        block_cfg=dict(
            norm_cfg=dict(eps=0.001, momentum=0.03, type='BN'),
            type='ConvWrapper'),
        deepen_factor=1,
        hidden_ratio=0.5,
        in_channels=[
            256,
            512,
            1024,
        ],
        norm_cfg=dict(eps=0.001, momentum=0.03, type='BN'),
        num_csp_blocks=12,
        out_channels=[
            128,
            256,
            512,
        ],
        type='YOLOv6CSPRepPAFPN',
        widen_factor=1),
    test_cfg=dict(
        max_per_img=300,
        multi_label=True,
        nms=dict(iou_threshold=0.65, type='nms'),
        nms_pre=30000,
        score_thr=0.001),
    train_cfg=dict(
        assigner=dict(
            alpha=1,
            beta=6,
            num_classes=4,
            topk=13,
            type='BatchTaskAlignedAssigner'),
        initial_assigner=dict(
            iou_calculator=dict(type='mmdet.BboxOverlaps2D'),
            num_classes=4,
            topk=9,
            type='BatchATSSAssigner'),
        initial_epoch=4),
    type='YOLODetector')
mosaic_affine_pipeline = [
    dict(
        img_scale=(
            640,
            640,
        ),
        pad_val=114.0,
        pre_transform=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
        ],
        type='Mosaic'),
    dict(
        border=(
            -320,
            -320,
        ),
        border_val=(
            114,
            114,
            114,
        ),
        max_rotate_degree=0.0,
        max_shear_degree=0.0,
        scaling_ratio_range=(
            0.09999999999999998,
            1.9,
        ),
        type='YOLOv5RandomAffine'),
]
num_classes = 4
num_last_epochs = 15
optim_wrapper = dict(
    constructor='YOLOv5OptimizerConstructor',
    optimizer=dict(
        batch_size_per_gpu=16,
        lr=0.01,
        momentum=0.937,
        nesterov=True,
        type='SGD',
        weight_decay=0.0005),
    type='OptimWrapper')
persistent_workers = True
pre_transform = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
]
resume = False
save_epoch_intervals = 1
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        ann_file='annotations/instances_val2017.json',
        batch_shapes_cfg=dict(
            batch_size=1,
            extra_pad_ratio=0.5,
            img_size=640,
            size_divisor=32,
            type='BatchShapePolicy'),
        data_prefix=dict(img='val2017/'),
        data_root='/media/iris/새 볼륨/nonslip_patching_paper/coco_format/',
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(scale=(
                640,
                640,
            ), type='YOLOv5KeepRatioResize'),
            dict(
                allow_scale_up=False,
                pad_val=dict(img=114),
                scale=(
                    640,
                    640,
                ),
                type='LetterResize'),
            dict(_scope_='mmdet', type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                    'pad_param',
                ),
                type='mmdet.PackDetInputs'),
        ],
        test_mode=True,
        type='YOLOv5CocoDataset'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    pin_memory=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    ann_file=
    '/media/iris/새 볼륨/nonslip_patching_paper/coco_format/annotations/instances_val2017.json',
    metric='bbox',
    proposal_nums=(
        100,
        1,
        10,
    ),
    type='mmdet.CocoMetric')
test_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(scale=(
        640,
        640,
    ), type='YOLOv5KeepRatioResize'),
    dict(
        allow_scale_up=False,
        pad_val=dict(img=114),
        scale=(
            640,
            640,
        ),
        type='LetterResize'),
    dict(_scope_='mmdet', type='LoadAnnotations', with_bbox=True),
    dict(
        meta_keys=(
            'img_id',
            'img_path',
            'ori_shape',
            'img_shape',
            'scale_factor',
            'pad_param',
        ),
        type='mmdet.PackDetInputs'),
]
train_ann_file = 'annotations/instances_train2017.json'
train_batch_size_per_gpu = 8
train_cfg = dict(
    dynamic_intervals=[
        (
            21,
            1,
        ),
    ],
    max_epochs=36,
    type='EpochBasedTrainLoop',
    val_interval=1)
train_data_prefix = 'train2017/'
train_dataloader = dict(
    batch_size=8,
    collate_fn=dict(type='yolov5_collate'),
    dataset=dict(
        ann_file='annotations/instances_train2017.json',
        data_prefix=dict(img='train2017/'),
        data_root='/media/iris/새 볼륨/nonslip_patching_paper/coco_format/',
        filter_cfg=dict(filter_empty_gt=False, min_size=32),
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                img_scale=(
                    640,
                    640,
                ),
                pad_val=114.0,
                pre_transform=[
                    dict(backend_args=None, type='LoadImageFromFile'),
                    dict(type='LoadAnnotations', with_bbox=True),
                ],
                type='Mosaic'),
            dict(
                border=(
                    -320,
                    -320,
                ),
                border_val=(
                    114,
                    114,
                    114,
                ),
                max_rotate_degree=0.0,
                max_shear_degree=0.0,
                scaling_ratio_range=(
                    0.09999999999999998,
                    1.9,
                ),
                type='YOLOv5RandomAffine'),
            dict(
                pre_transform=[
                    dict(backend_args=None, type='LoadImageFromFile'),
                    dict(type='LoadAnnotations', with_bbox=True),
                    dict(
                        img_scale=(
                            640,
                            640,
                        ),
                        pad_val=114.0,
                        pre_transform=[
                            dict(backend_args=None, type='LoadImageFromFile'),
                            dict(type='LoadAnnotations', with_bbox=True),
                        ],
                        type='Mosaic'),
                    dict(
                        border=(
                            -320,
                            -320,
                        ),
                        border_val=(
                            114,
                            114,
                            114,
                        ),
                        max_rotate_degree=0.0,
                        max_shear_degree=0.0,
                        scaling_ratio_range=(
                            0.09999999999999998,
                            1.9,
                        ),
                        type='YOLOv5RandomAffine'),
                ],
                prob=0.1,
                type='YOLOv5MixUp'),
            dict(type='YOLOv5HSVRandomAug'),
            dict(prob=0.5, type='mmdet.RandomFlip'),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'flip',
                    'flip_direction',
                ),
                type='mmdet.PackDetInputs'),
        ],
        type='YOLOv5CocoDataset'),
    num_workers=8,
    persistent_workers=True,
    pin_memory=True,
    sampler=dict(shuffle=True, type='DefaultSampler'))
train_num_workers = 8
train_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(
        img_scale=(
            640,
            640,
        ),
        pad_val=114.0,
        pre_transform=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
        ],
        type='Mosaic'),
    dict(
        border=(
            -320,
            -320,
        ),
        border_val=(
            114,
            114,
            114,
        ),
        max_rotate_degree=0.0,
        max_shear_degree=0.0,
        scaling_ratio_range=(
            0.09999999999999998,
            1.9,
        ),
        type='YOLOv5RandomAffine'),
    dict(
        pre_transform=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                img_scale=(
                    640,
                    640,
                ),
                pad_val=114.0,
                pre_transform=[
                    dict(backend_args=None, type='LoadImageFromFile'),
                    dict(type='LoadAnnotations', with_bbox=True),
                ],
                type='Mosaic'),
            dict(
                border=(
                    -320,
                    -320,
                ),
                border_val=(
                    114,
                    114,
                    114,
                ),
                max_rotate_degree=0.0,
                max_shear_degree=0.0,
                scaling_ratio_range=(
                    0.09999999999999998,
                    1.9,
                ),
                type='YOLOv5RandomAffine'),
        ],
        prob=0.1,
        type='YOLOv5MixUp'),
    dict(type='YOLOv5HSVRandomAug'),
    dict(prob=0.5, type='mmdet.RandomFlip'),
    dict(
        meta_keys=(
            'img_id',
            'img_path',
            'ori_shape',
            'img_shape',
            'flip',
            'flip_direction',
        ),
        type='mmdet.PackDetInputs'),
]
train_pipeline_stage2 = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(scale=(
        640,
        640,
    ), type='YOLOv5KeepRatioResize'),
    dict(
        allow_scale_up=True,
        pad_val=dict(img=114),
        scale=(
            640,
            640,
        ),
        type='LetterResize'),
    dict(
        max_rotate_degree=0.0,
        max_shear_degree=0.0,
        max_translate_ratio=0.1,
        scaling_ratio_range=(
            0.5,
            1.5,
        ),
        type='YOLOv5RandomAffine'),
    dict(type='YOLOv5HSVRandomAug'),
    dict(prob=0.5, type='mmdet.RandomFlip'),
    dict(
        meta_keys=(
            'img_id',
            'img_path',
            'ori_shape',
            'img_shape',
            'flip',
            'flip_direction',
        ),
        type='mmdet.PackDetInputs'),
]
tta_model = dict(
    tta_cfg=dict(max_per_img=300, nms=dict(iou_threshold=0.65, type='nms')),
    type='mmdet.DetTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(
                    transforms=[
                        dict(scale=(
                            640,
                            640,
                        ), type='YOLOv5KeepRatioResize'),
                        dict(
                            allow_scale_up=False,
                            pad_val=dict(img=114),
                            scale=(
                                640,
                                640,
                            ),
                            type='LetterResize'),
                    ],
                    type='Compose'),
                dict(
                    transforms=[
                        dict(scale=(
                            320,
                            320,
                        ), type='YOLOv5KeepRatioResize'),
                        dict(
                            allow_scale_up=False,
                            pad_val=dict(img=114),
                            scale=(
                                320,
                                320,
                            ),
                            type='LetterResize'),
                    ],
                    type='Compose'),
                dict(
                    transforms=[
                        dict(scale=(
                            960,
                            960,
                        ), type='YOLOv5KeepRatioResize'),
                        dict(
                            allow_scale_up=False,
                            pad_val=dict(img=114),
                            scale=(
                                960,
                                960,
                            ),
                            type='LetterResize'),
                    ],
                    type='Compose'),
            ],
            [
                dict(prob=1.0, type='mmdet.RandomFlip'),
                dict(prob=0.0, type='mmdet.RandomFlip'),
            ],
            [
                dict(type='mmdet.LoadAnnotations', with_bbox=True),
            ],
            [
                dict(
                    meta_keys=(
                        'img_id',
                        'img_path',
                        'ori_shape',
                        'img_shape',
                        'scale_factor',
                        'pad_param',
                        'flip',
                        'flip_direction',
                    ),
                    type='mmdet.PackDetInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_ann_file = 'annotations/instances_val2017.json'
val_batch_size_per_gpu = 1
val_cfg = dict(type='ValLoop')
val_data_prefix = 'val2017/'
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        ann_file='annotations/instances_val2017.json',
        batch_shapes_cfg=dict(
            batch_size=1,
            extra_pad_ratio=0.5,
            img_size=640,
            size_divisor=32,
            type='BatchShapePolicy'),
        data_prefix=dict(img='val2017/'),
        data_root='/media/iris/새 볼륨/nonslip_patching_paper/coco_format/',
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(scale=(
                640,
                640,
            ), type='YOLOv5KeepRatioResize'),
            dict(
                allow_scale_up=False,
                pad_val=dict(img=114),
                scale=(
                    640,
                    640,
                ),
                type='LetterResize'),
            dict(_scope_='mmdet', type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                    'pad_param',
                ),
                type='mmdet.PackDetInputs'),
        ],
        test_mode=True,
        type='YOLOv5CocoDataset'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    pin_memory=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    ann_file=
    '/media/iris/새 볼륨/nonslip_patching_paper/coco_format/annotations/instances_val2017.json',
    metric='bbox',
    proposal_nums=(
        100,
        1,
        10,
    ),
    type='mmdet.CocoMetric')
val_num_workers = 2
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='mmdet.DetLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
weight_decay = 0.0005
widen_factor = 1
work_dir = 'yolov6_l_syncbn_fast_8xb32-300e_coco'

2024/05/04 19:17:50 - mmengine - INFO - Using SyncBatchNorm()
2024/05/04 19:17:50 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_load_checkpoint:
(49          ) EMAHook                            
 -------------------- 
before_train:
(9           ) YOLOv5ParamSchedulerHook           
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
(NORMAL      ) PipelineSwitchHook                 
 -------------------- 
before_train_iter:
(9           ) YOLOv5ParamSchedulerHook           
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(9           ) YOLOv5ParamSchedulerHook           
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(9           ) YOLOv5ParamSchedulerHook           
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(9           ) YOLOv5ParamSchedulerHook           
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_save_checkpoint:
(49          ) EMAHook                            
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
2024/05/04 19:17:51 - mmengine - INFO - Optimizer groups: 237 .bias, 142 conv.weight, 134 other
Name of parameter - Initialization information

backbone.stem.block.conv.weight - torch.Size([64, 3, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stem.block.conv.bias - torch.Size([64]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stem.block.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stem.block.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage1.0.0.block.conv.weight - torch.Size([128, 64, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage1.0.0.block.conv.bias - torch.Size([128]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage1.0.0.block.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage1.0.0.block.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage1.0.1.conv1.conv.weight - torch.Size([64, 128, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage1.0.1.conv1.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage1.0.1.conv1.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage1.0.1.conv2.conv.weight - torch.Size([64, 128, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage1.0.1.conv2.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage1.0.1.conv2.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage1.0.1.conv3.conv.weight - torch.Size([128, 128, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage1.0.1.conv3.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage1.0.1.conv3.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage1.0.1.block.conv1.alpha - torch.Size([1]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage1.0.1.block.conv1.conv1.block.conv.weight - torch.Size([64, 64, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage1.0.1.block.conv1.conv1.block.conv.bias - torch.Size([64]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage1.0.1.block.conv1.conv1.block.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage1.0.1.block.conv1.conv1.block.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage1.0.1.block.conv1.conv2.block.conv.weight - torch.Size([64, 64, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage1.0.1.block.conv1.conv2.block.conv.bias - torch.Size([64]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage1.0.1.block.conv1.conv2.block.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage1.0.1.block.conv1.conv2.block.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage1.0.1.block.block.0.alpha - torch.Size([1]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage1.0.1.block.block.0.conv1.block.conv.weight - torch.Size([64, 64, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage1.0.1.block.block.0.conv1.block.conv.bias - torch.Size([64]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage1.0.1.block.block.0.conv1.block.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage1.0.1.block.block.0.conv1.block.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage1.0.1.block.block.0.conv2.block.conv.weight - torch.Size([64, 64, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage1.0.1.block.block.0.conv2.block.conv.bias - torch.Size([64]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage1.0.1.block.block.0.conv2.block.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage1.0.1.block.block.0.conv2.block.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage1.0.1.block.block.1.alpha - torch.Size([1]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage1.0.1.block.block.1.conv1.block.conv.weight - torch.Size([64, 64, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage1.0.1.block.block.1.conv1.block.conv.bias - torch.Size([64]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage1.0.1.block.block.1.conv1.block.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage1.0.1.block.block.1.conv1.block.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage1.0.1.block.block.1.conv2.block.conv.weight - torch.Size([64, 64, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage1.0.1.block.block.1.conv2.block.conv.bias - torch.Size([64]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage1.0.1.block.block.1.conv2.block.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage1.0.1.block.block.1.conv2.block.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.0.block.conv.weight - torch.Size([256, 128, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage2.0.0.block.conv.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage2.0.0.block.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.0.block.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.conv1.conv.weight - torch.Size([128, 256, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage2.0.1.conv1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.conv1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.conv2.conv.weight - torch.Size([128, 256, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage2.0.1.conv2.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.conv2.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.conv3.conv.weight - torch.Size([256, 256, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage2.0.1.conv3.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.conv3.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.conv1.alpha - torch.Size([1]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.conv1.conv1.block.conv.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage2.0.1.block.conv1.conv1.block.conv.bias - torch.Size([128]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage2.0.1.block.conv1.conv1.block.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.conv1.conv1.block.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.conv1.conv2.block.conv.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage2.0.1.block.conv1.conv2.block.conv.bias - torch.Size([128]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage2.0.1.block.conv1.conv2.block.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.conv1.conv2.block.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.block.0.alpha - torch.Size([1]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.block.0.conv1.block.conv.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage2.0.1.block.block.0.conv1.block.conv.bias - torch.Size([128]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage2.0.1.block.block.0.conv1.block.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.block.0.conv1.block.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.block.0.conv2.block.conv.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage2.0.1.block.block.0.conv2.block.conv.bias - torch.Size([128]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage2.0.1.block.block.0.conv2.block.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.block.0.conv2.block.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.block.1.alpha - torch.Size([1]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.block.1.conv1.block.conv.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage2.0.1.block.block.1.conv1.block.conv.bias - torch.Size([128]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage2.0.1.block.block.1.conv1.block.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.block.1.conv1.block.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.block.1.conv2.block.conv.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage2.0.1.block.block.1.conv2.block.conv.bias - torch.Size([128]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage2.0.1.block.block.1.conv2.block.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.block.1.conv2.block.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.block.2.alpha - torch.Size([1]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.block.2.conv1.block.conv.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage2.0.1.block.block.2.conv1.block.conv.bias - torch.Size([128]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage2.0.1.block.block.2.conv1.block.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.block.2.conv1.block.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.block.2.conv2.block.conv.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage2.0.1.block.block.2.conv2.block.conv.bias - torch.Size([128]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage2.0.1.block.block.2.conv2.block.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.block.2.conv2.block.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.block.3.alpha - torch.Size([1]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.block.3.conv1.block.conv.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage2.0.1.block.block.3.conv1.block.conv.bias - torch.Size([128]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage2.0.1.block.block.3.conv1.block.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.block.3.conv1.block.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.block.3.conv2.block.conv.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage2.0.1.block.block.3.conv2.block.conv.bias - torch.Size([128]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage2.0.1.block.block.3.conv2.block.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.block.3.conv2.block.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.block.4.alpha - torch.Size([1]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.block.4.conv1.block.conv.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage2.0.1.block.block.4.conv1.block.conv.bias - torch.Size([128]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage2.0.1.block.block.4.conv1.block.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.block.4.conv1.block.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.block.4.conv2.block.conv.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage2.0.1.block.block.4.conv2.block.conv.bias - torch.Size([128]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage2.0.1.block.block.4.conv2.block.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.block.4.conv2.block.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.0.block.conv.weight - torch.Size([512, 256, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage3.0.0.block.conv.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage3.0.0.block.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.0.block.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.conv1.conv.weight - torch.Size([256, 512, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage3.0.1.conv1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.conv1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.conv2.conv.weight - torch.Size([256, 512, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage3.0.1.conv2.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.conv2.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.conv3.conv.weight - torch.Size([512, 512, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage3.0.1.conv3.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.conv3.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.conv1.alpha - torch.Size([1]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.conv1.conv1.block.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage3.0.1.block.conv1.conv1.block.conv.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage3.0.1.block.conv1.conv1.block.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.conv1.conv1.block.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.conv1.conv2.block.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage3.0.1.block.conv1.conv2.block.conv.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage3.0.1.block.conv1.conv2.block.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.conv1.conv2.block.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.0.alpha - torch.Size([1]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.0.conv1.block.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage3.0.1.block.block.0.conv1.block.conv.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage3.0.1.block.block.0.conv1.block.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.0.conv1.block.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.0.conv2.block.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage3.0.1.block.block.0.conv2.block.conv.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage3.0.1.block.block.0.conv2.block.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.0.conv2.block.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.1.alpha - torch.Size([1]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.1.conv1.block.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage3.0.1.block.block.1.conv1.block.conv.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage3.0.1.block.block.1.conv1.block.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.1.conv1.block.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.1.conv2.block.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage3.0.1.block.block.1.conv2.block.conv.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage3.0.1.block.block.1.conv2.block.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.1.conv2.block.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.2.alpha - torch.Size([1]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.2.conv1.block.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage3.0.1.block.block.2.conv1.block.conv.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage3.0.1.block.block.2.conv1.block.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.2.conv1.block.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.2.conv2.block.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage3.0.1.block.block.2.conv2.block.conv.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage3.0.1.block.block.2.conv2.block.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.2.conv2.block.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.3.alpha - torch.Size([1]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.3.conv1.block.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage3.0.1.block.block.3.conv1.block.conv.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage3.0.1.block.block.3.conv1.block.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.3.conv1.block.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.3.conv2.block.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage3.0.1.block.block.3.conv2.block.conv.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage3.0.1.block.block.3.conv2.block.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.3.conv2.block.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.4.alpha - torch.Size([1]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.4.conv1.block.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage3.0.1.block.block.4.conv1.block.conv.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage3.0.1.block.block.4.conv1.block.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.4.conv1.block.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.4.conv2.block.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage3.0.1.block.block.4.conv2.block.conv.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage3.0.1.block.block.4.conv2.block.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.4.conv2.block.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.5.alpha - torch.Size([1]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.5.conv1.block.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage3.0.1.block.block.5.conv1.block.conv.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage3.0.1.block.block.5.conv1.block.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.5.conv1.block.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.5.conv2.block.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage3.0.1.block.block.5.conv2.block.conv.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage3.0.1.block.block.5.conv2.block.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.5.conv2.block.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.6.alpha - torch.Size([1]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.6.conv1.block.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage3.0.1.block.block.6.conv1.block.conv.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage3.0.1.block.block.6.conv1.block.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.6.conv1.block.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.6.conv2.block.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage3.0.1.block.block.6.conv2.block.conv.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage3.0.1.block.block.6.conv2.block.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.6.conv2.block.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.7.alpha - torch.Size([1]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.7.conv1.block.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage3.0.1.block.block.7.conv1.block.conv.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage3.0.1.block.block.7.conv1.block.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.7.conv1.block.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.7.conv2.block.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage3.0.1.block.block.7.conv2.block.conv.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage3.0.1.block.block.7.conv2.block.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.7.conv2.block.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.0.0.block.conv.weight - torch.Size([1024, 512, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage4.0.0.block.conv.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage4.0.0.block.bn.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.0.0.block.bn.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.0.1.conv1.conv.weight - torch.Size([512, 1024, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage4.0.1.conv1.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.0.1.conv1.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.0.1.conv2.conv.weight - torch.Size([512, 1024, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage4.0.1.conv2.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.0.1.conv2.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.0.1.conv3.conv.weight - torch.Size([1024, 1024, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage4.0.1.conv3.bn.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.0.1.conv3.bn.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.0.1.block.conv1.alpha - torch.Size([1]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.0.1.block.conv1.conv1.block.conv.weight - torch.Size([512, 512, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage4.0.1.block.conv1.conv1.block.conv.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage4.0.1.block.conv1.conv1.block.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.0.1.block.conv1.conv1.block.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.0.1.block.conv1.conv2.block.conv.weight - torch.Size([512, 512, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage4.0.1.block.conv1.conv2.block.conv.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage4.0.1.block.conv1.conv2.block.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.0.1.block.conv1.conv2.block.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.0.1.block.block.0.alpha - torch.Size([1]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.0.1.block.block.0.conv1.block.conv.weight - torch.Size([512, 512, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage4.0.1.block.block.0.conv1.block.conv.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage4.0.1.block.block.0.conv1.block.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.0.1.block.block.0.conv1.block.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.0.1.block.block.0.conv2.block.conv.weight - torch.Size([512, 512, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage4.0.1.block.block.0.conv2.block.conv.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage4.0.1.block.block.0.conv2.block.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.0.1.block.block.0.conv2.block.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.0.1.block.block.1.alpha - torch.Size([1]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.0.1.block.block.1.conv1.block.conv.weight - torch.Size([512, 512, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage4.0.1.block.block.1.conv1.block.conv.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage4.0.1.block.block.1.conv1.block.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.0.1.block.block.1.conv1.block.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.0.1.block.block.1.conv2.block.conv.weight - torch.Size([512, 512, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage4.0.1.block.block.1.conv2.block.conv.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage4.0.1.block.block.1.conv2.block.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.0.1.block.block.1.conv2.block.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.1.conv1.conv.weight - torch.Size([512, 1024, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage4.1.conv1.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.1.conv1.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.1.conv2.conv.weight - torch.Size([1024, 2048, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage4.1.conv2.bn.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.1.conv2.bn.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.reduce_layers.2.conv.weight - torch.Size([256, 1024, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.reduce_layers.2.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.reduce_layers.2.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.upsample_layers.0.weight - torch.Size([256, 256, 2, 2]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.upsample_layers.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.upsample_layers.1.weight - torch.Size([128, 128, 2, 2]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.upsample_layers.1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.conv1.conv.weight - torch.Size([128, 768, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.0.0.conv1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.conv1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.conv2.conv.weight - torch.Size([128, 768, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.0.0.conv2.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.conv2.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.conv3.conv.weight - torch.Size([256, 256, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.0.0.conv3.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.conv3.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.conv1.alpha - torch.Size([1]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.conv1.conv1.block.conv.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.0.0.block.conv1.conv1.block.conv.bias - torch.Size([128]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.0.0.block.conv1.conv1.block.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.conv1.conv1.block.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.conv1.conv2.block.conv.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.0.0.block.conv1.conv2.block.conv.bias - torch.Size([128]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.0.0.block.conv1.conv2.block.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.conv1.conv2.block.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.block.0.alpha - torch.Size([1]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.block.0.conv1.block.conv.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.0.0.block.block.0.conv1.block.conv.bias - torch.Size([128]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.0.0.block.block.0.conv1.block.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.block.0.conv1.block.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.block.0.conv2.block.conv.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.0.0.block.block.0.conv2.block.conv.bias - torch.Size([128]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.0.0.block.block.0.conv2.block.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.block.0.conv2.block.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.block.1.alpha - torch.Size([1]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.block.1.conv1.block.conv.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.0.0.block.block.1.conv1.block.conv.bias - torch.Size([128]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.0.0.block.block.1.conv1.block.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.block.1.conv1.block.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.block.1.conv2.block.conv.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.0.0.block.block.1.conv2.block.conv.bias - torch.Size([128]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.0.0.block.block.1.conv2.block.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.block.1.conv2.block.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.block.2.alpha - torch.Size([1]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.block.2.conv1.block.conv.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.0.0.block.block.2.conv1.block.conv.bias - torch.Size([128]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.0.0.block.block.2.conv1.block.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.block.2.conv1.block.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.block.2.conv2.block.conv.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.0.0.block.block.2.conv2.block.conv.bias - torch.Size([128]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.0.0.block.block.2.conv2.block.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.block.2.conv2.block.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.block.3.alpha - torch.Size([1]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.block.3.conv1.block.conv.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.0.0.block.block.3.conv1.block.conv.bias - torch.Size([128]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.0.0.block.block.3.conv1.block.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.block.3.conv1.block.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.block.3.conv2.block.conv.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.0.0.block.block.3.conv2.block.conv.bias - torch.Size([128]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.0.0.block.block.3.conv2.block.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.block.3.conv2.block.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.block.4.alpha - torch.Size([1]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.block.4.conv1.block.conv.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.0.0.block.block.4.conv1.block.conv.bias - torch.Size([128]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.0.0.block.block.4.conv1.block.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.block.4.conv1.block.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.block.4.conv2.block.conv.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.0.0.block.block.4.conv2.block.conv.bias - torch.Size([128]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.0.0.block.block.4.conv2.block.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.block.4.conv2.block.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.1.conv.weight - torch.Size([128, 256, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.0.1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.conv1.conv.weight - torch.Size([64, 384, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.1.conv1.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.conv1.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.conv2.conv.weight - torch.Size([64, 384, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.1.conv2.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.conv2.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.conv3.conv.weight - torch.Size([128, 128, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.1.conv3.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.conv3.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.conv1.alpha - torch.Size([1]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.conv1.conv1.block.conv.weight - torch.Size([64, 64, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.1.block.conv1.conv1.block.conv.bias - torch.Size([64]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.1.block.conv1.conv1.block.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.conv1.conv1.block.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.conv1.conv2.block.conv.weight - torch.Size([64, 64, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.1.block.conv1.conv2.block.conv.bias - torch.Size([64]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.1.block.conv1.conv2.block.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.conv1.conv2.block.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.block.0.alpha - torch.Size([1]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.block.0.conv1.block.conv.weight - torch.Size([64, 64, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.1.block.block.0.conv1.block.conv.bias - torch.Size([64]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.1.block.block.0.conv1.block.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.block.0.conv1.block.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.block.0.conv2.block.conv.weight - torch.Size([64, 64, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.1.block.block.0.conv2.block.conv.bias - torch.Size([64]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.1.block.block.0.conv2.block.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.block.0.conv2.block.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.block.1.alpha - torch.Size([1]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.block.1.conv1.block.conv.weight - torch.Size([64, 64, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.1.block.block.1.conv1.block.conv.bias - torch.Size([64]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.1.block.block.1.conv1.block.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.block.1.conv1.block.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.block.1.conv2.block.conv.weight - torch.Size([64, 64, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.1.block.block.1.conv2.block.conv.bias - torch.Size([64]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.1.block.block.1.conv2.block.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.block.1.conv2.block.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.block.2.alpha - torch.Size([1]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.block.2.conv1.block.conv.weight - torch.Size([64, 64, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.1.block.block.2.conv1.block.conv.bias - torch.Size([64]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.1.block.block.2.conv1.block.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.block.2.conv1.block.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.block.2.conv2.block.conv.weight - torch.Size([64, 64, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.1.block.block.2.conv2.block.conv.bias - torch.Size([64]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.1.block.block.2.conv2.block.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.block.2.conv2.block.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.block.3.alpha - torch.Size([1]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.block.3.conv1.block.conv.weight - torch.Size([64, 64, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.1.block.block.3.conv1.block.conv.bias - torch.Size([64]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.1.block.block.3.conv1.block.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.block.3.conv1.block.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.block.3.conv2.block.conv.weight - torch.Size([64, 64, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.1.block.block.3.conv2.block.conv.bias - torch.Size([64]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.1.block.block.3.conv2.block.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.block.3.conv2.block.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.block.4.alpha - torch.Size([1]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.block.4.conv1.block.conv.weight - torch.Size([64, 64, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.1.block.block.4.conv1.block.conv.bias - torch.Size([64]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.1.block.block.4.conv1.block.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.block.4.conv1.block.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.block.4.conv2.block.conv.weight - torch.Size([64, 64, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.1.block.block.4.conv2.block.conv.bias - torch.Size([64]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.1.block.block.4.conv2.block.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.block.4.conv2.block.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.downsample_layers.0.conv.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.downsample_layers.0.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.downsample_layers.0.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.downsample_layers.1.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.downsample_layers.1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.downsample_layers.1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.conv1.conv.weight - torch.Size([128, 256, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.0.conv1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.conv1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.conv2.conv.weight - torch.Size([128, 256, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.0.conv2.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.conv2.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.conv3.conv.weight - torch.Size([256, 256, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.0.conv3.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.conv3.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.conv1.alpha - torch.Size([1]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.conv1.conv1.block.conv.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.0.block.conv1.conv1.block.conv.bias - torch.Size([128]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.0.block.conv1.conv1.block.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.conv1.conv1.block.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.conv1.conv2.block.conv.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.0.block.conv1.conv2.block.conv.bias - torch.Size([128]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.0.block.conv1.conv2.block.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.conv1.conv2.block.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.block.0.alpha - torch.Size([1]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.block.0.conv1.block.conv.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.0.block.block.0.conv1.block.conv.bias - torch.Size([128]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.0.block.block.0.conv1.block.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.block.0.conv1.block.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.block.0.conv2.block.conv.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.0.block.block.0.conv2.block.conv.bias - torch.Size([128]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.0.block.block.0.conv2.block.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.block.0.conv2.block.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.block.1.alpha - torch.Size([1]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.block.1.conv1.block.conv.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.0.block.block.1.conv1.block.conv.bias - torch.Size([128]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.0.block.block.1.conv1.block.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.block.1.conv1.block.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.block.1.conv2.block.conv.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.0.block.block.1.conv2.block.conv.bias - torch.Size([128]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.0.block.block.1.conv2.block.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.block.1.conv2.block.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.block.2.alpha - torch.Size([1]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.block.2.conv1.block.conv.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.0.block.block.2.conv1.block.conv.bias - torch.Size([128]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.0.block.block.2.conv1.block.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.block.2.conv1.block.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.block.2.conv2.block.conv.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.0.block.block.2.conv2.block.conv.bias - torch.Size([128]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.0.block.block.2.conv2.block.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.block.2.conv2.block.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.block.3.alpha - torch.Size([1]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.block.3.conv1.block.conv.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.0.block.block.3.conv1.block.conv.bias - torch.Size([128]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.0.block.block.3.conv1.block.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.block.3.conv1.block.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.block.3.conv2.block.conv.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.0.block.block.3.conv2.block.conv.bias - torch.Size([128]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.0.block.block.3.conv2.block.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.block.3.conv2.block.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.block.4.alpha - torch.Size([1]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.block.4.conv1.block.conv.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.0.block.block.4.conv1.block.conv.bias - torch.Size([128]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.0.block.block.4.conv1.block.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.block.4.conv1.block.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.block.4.conv2.block.conv.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.0.block.block.4.conv2.block.conv.bias - torch.Size([128]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.0.block.block.4.conv2.block.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.block.4.conv2.block.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.conv1.conv.weight - torch.Size([256, 512, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.1.conv1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.conv1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.conv2.conv.weight - torch.Size([256, 512, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.1.conv2.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.conv2.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.conv3.conv.weight - torch.Size([512, 512, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.1.conv3.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.conv3.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.conv1.alpha - torch.Size([1]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.conv1.conv1.block.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.1.block.conv1.conv1.block.conv.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.1.block.conv1.conv1.block.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.conv1.conv1.block.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.conv1.conv2.block.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.1.block.conv1.conv2.block.conv.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.1.block.conv1.conv2.block.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.conv1.conv2.block.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.block.0.alpha - torch.Size([1]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.block.0.conv1.block.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.1.block.block.0.conv1.block.conv.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.1.block.block.0.conv1.block.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.block.0.conv1.block.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.block.0.conv2.block.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.1.block.block.0.conv2.block.conv.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.1.block.block.0.conv2.block.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.block.0.conv2.block.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.block.1.alpha - torch.Size([1]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.block.1.conv1.block.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.1.block.block.1.conv1.block.conv.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.1.block.block.1.conv1.block.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.block.1.conv1.block.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.block.1.conv2.block.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.1.block.block.1.conv2.block.conv.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.1.block.block.1.conv2.block.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.block.1.conv2.block.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.block.2.alpha - torch.Size([1]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.block.2.conv1.block.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.1.block.block.2.conv1.block.conv.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.1.block.block.2.conv1.block.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.block.2.conv1.block.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.block.2.conv2.block.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.1.block.block.2.conv2.block.conv.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.1.block.block.2.conv2.block.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.block.2.conv2.block.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.block.3.alpha - torch.Size([1]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.block.3.conv1.block.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.1.block.block.3.conv1.block.conv.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.1.block.block.3.conv1.block.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.block.3.conv1.block.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.block.3.conv2.block.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.1.block.block.3.conv2.block.conv.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.1.block.block.3.conv2.block.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.block.3.conv2.block.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.block.4.alpha - torch.Size([1]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.block.4.conv1.block.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.1.block.block.4.conv1.block.conv.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.1.block.block.4.conv1.block.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.block.4.conv1.block.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.block.4.conv2.block.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.1.block.block.4.conv2.block.conv.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.1.block.block.4.conv2.block.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.block.4.conv2.block.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

bbox_head.head_module.cls_convs.0.conv.weight - torch.Size([128, 128, 3, 3]): 
The value is the same before and after calling `init_weights` of YOLODetector  

bbox_head.head_module.cls_convs.0.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

bbox_head.head_module.cls_convs.0.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

bbox_head.head_module.cls_convs.1.conv.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of YOLODetector  

bbox_head.head_module.cls_convs.1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

bbox_head.head_module.cls_convs.1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

bbox_head.head_module.cls_convs.2.conv.weight - torch.Size([512, 512, 3, 3]): 
The value is the same before and after calling `init_weights` of YOLODetector  

bbox_head.head_module.cls_convs.2.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLODetector  

bbox_head.head_module.cls_convs.2.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLODetector  

bbox_head.head_module.reg_convs.0.conv.weight - torch.Size([128, 128, 3, 3]): 
The value is the same before and after calling `init_weights` of YOLODetector  

bbox_head.head_module.reg_convs.0.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

bbox_head.head_module.reg_convs.0.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

bbox_head.head_module.reg_convs.1.conv.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of YOLODetector  

bbox_head.head_module.reg_convs.1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

bbox_head.head_module.reg_convs.1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

bbox_head.head_module.reg_convs.2.conv.weight - torch.Size([512, 512, 3, 3]): 
The value is the same before and after calling `init_weights` of YOLODetector  

bbox_head.head_module.reg_convs.2.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLODetector  

bbox_head.head_module.reg_convs.2.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLODetector  

bbox_head.head_module.cls_preds.0.weight - torch.Size([4, 128, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6HeadModule  

bbox_head.head_module.cls_preds.0.bias - torch.Size([4]): 
Initialized by user-defined `init_weights` in YOLOv6HeadModule  

bbox_head.head_module.cls_preds.1.weight - torch.Size([4, 256, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6HeadModule  

bbox_head.head_module.cls_preds.1.bias - torch.Size([4]): 
Initialized by user-defined `init_weights` in YOLOv6HeadModule  

bbox_head.head_module.cls_preds.2.weight - torch.Size([4, 512, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6HeadModule  

bbox_head.head_module.cls_preds.2.bias - torch.Size([4]): 
Initialized by user-defined `init_weights` in YOLOv6HeadModule  

bbox_head.head_module.reg_preds.0.weight - torch.Size([4, 128, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6HeadModule  

bbox_head.head_module.reg_preds.0.bias - torch.Size([4]): 
Initialized by user-defined `init_weights` in YOLOv6HeadModule  

bbox_head.head_module.reg_preds.1.weight - torch.Size([4, 256, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6HeadModule  

bbox_head.head_module.reg_preds.1.bias - torch.Size([4]): 
Initialized by user-defined `init_weights` in YOLOv6HeadModule  

bbox_head.head_module.reg_preds.2.weight - torch.Size([4, 512, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6HeadModule  

bbox_head.head_module.reg_preds.2.bias - torch.Size([4]): 
Initialized by user-defined `init_weights` in YOLOv6HeadModule  

bbox_head.head_module.stems.0.conv.weight - torch.Size([128, 128, 1, 1]): 
The value is the same before and after calling `init_weights` of YOLODetector  

bbox_head.head_module.stems.0.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

bbox_head.head_module.stems.0.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

bbox_head.head_module.stems.1.conv.weight - torch.Size([256, 256, 1, 1]): 
The value is the same before and after calling `init_weights` of YOLODetector  

bbox_head.head_module.stems.1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

bbox_head.head_module.stems.1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

bbox_head.head_module.stems.2.conv.weight - torch.Size([512, 512, 1, 1]): 
The value is the same before and after calling `init_weights` of YOLODetector  

bbox_head.head_module.stems.2.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLODetector  

bbox_head.head_module.stems.2.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLODetector  
2024/05/04 19:17:52 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
2024/05/04 19:17:52 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
2024/05/04 19:17:52 - mmengine - INFO - Checkpoints will be saved to /media/iris/Dong/openmmlab/detection/coding/yolov6/yolov6_l_syncbn_fast_8xb32-300e_coco.
2024/05/04 19:35:34 - mmengine - INFO - Epoch(train)  [1][ 50/276]  base_lr: 1.0000e-02 lr: 4.9000e-04  eta: 2 days, 10:19:28  time: 21.2390  data_time: 17.8394  memory: 9850  loss: 6.2326  loss_cls: 2.5849  loss_bbox: 3.6478
2024/05/04 19:49:02 - mmengine - INFO - Epoch(train)  [1][100/276]  base_lr: 1.0000e-02 lr: 9.9000e-04  eta: 2 days, 3:04:57  time: 16.1537  data_time: 14.8261  memory: 8168  loss: 6.0294  loss_cls: 2.8748  loss_bbox: 3.1546
2024/05/04 20:02:04 - mmengine - INFO - Epoch(train)  [1][150/276]  base_lr: 1.0000e-02 lr: 1.4900e-03  eta: 2 days, 0:03:49  time: 15.6513  data_time: 11.8873  memory: 8168  loss: 5.9067  loss_cls: 2.8656  loss_bbox: 3.0411
2024/05/04 20:14:45 - mmengine - INFO - Epoch(train)  [1][200/276]  base_lr: 1.0000e-02 lr: 1.9900e-03  eta: 1 day, 22:09:32  time: 15.2273  data_time: 5.5447  memory: 8168  loss: 5.9518  loss_cls: 2.9021  loss_bbox: 3.0497
2024/05/04 20:28:03 - mmengine - INFO - Epoch(train)  [1][250/276]  base_lr: 1.0000e-02 lr: 2.4900e-03  eta: 1 day, 21:19:22  time: 15.9544  data_time: 5.6683  memory: 8168  loss: 5.8583  loss_cls: 2.9418  loss_bbox: 2.9166
2024/05/04 20:32:59 - mmengine - INFO - Exp name: yolov6_l_syncbn_fast_8xb32-300e_coco_20240504_191744
2024/05/04 20:32:59 - mmengine - INFO - Saving checkpoint at 1 epochs
2024/05/04 20:33:02 - mmengine - WARNING - `save_param_scheduler` is True but `self.param_schedulers` is None, so skip saving parameter schedulers
2024/05/04 20:33:49 - mmengine - INFO - Epoch(val)  [1][ 50/552]    eta: 0:07:07  time: 0.8516  data_time: 0.8219  memory: 8168  
2024/05/04 20:34:27 - mmengine - INFO - Epoch(val)  [1][100/552]    eta: 0:06:06  time: 0.7679  data_time: 0.7383  memory: 3347  
2024/05/04 20:34:46 - mmengine - INFO - Epoch(val)  [1][150/552]    eta: 0:04:28  time: 0.3827  data_time: 0.3545  memory: 3340  
2024/05/04 20:35:04 - mmengine - INFO - Epoch(val)  [1][200/552]    eta: 0:03:27  time: 0.3529  data_time: 0.3289  memory: 1194  
2024/05/04 20:35:24 - mmengine - INFO - Epoch(val)  [1][250/552]    eta: 0:02:45  time: 0.3901  data_time: 0.3651  memory: 1194  
2024/05/04 20:35:41 - mmengine - INFO - Epoch(val)  [1][300/552]    eta: 0:02:10  time: 0.3566  data_time: 0.3318  memory: 1194  
2024/05/04 20:36:00 - mmengine - INFO - Epoch(val)  [1][350/552]    eta: 0:01:40  time: 0.3674  data_time: 0.3390  memory: 3339  
2024/05/04 20:36:16 - mmengine - INFO - Epoch(val)  [1][400/552]    eta: 0:01:12  time: 0.3273  data_time: 0.3034  memory: 1196  
2024/05/04 20:36:33 - mmengine - INFO - Epoch(val)  [1][450/552]    eta: 0:00:46  time: 0.3461  data_time: 0.3215  memory: 1196  
2024/05/04 20:36:51 - mmengine - INFO - Epoch(val)  [1][500/552]    eta: 0:00:23  time: 0.3428  data_time: 0.3191  memory: 1196  
2024/05/04 20:37:08 - mmengine - INFO - Epoch(val)  [1][550/552]    eta: 0:00:00  time: 0.3557  data_time: 0.3327  memory: 1196  
2024/05/04 20:37:19 - mmengine - INFO - Evaluating bbox...
2024/05/04 20:37:25 - mmengine - INFO - bbox_mAP_copypaste: 0.000 0.001 0.000 -1.000 -1.000 0.000
2024/05/04 20:37:25 - mmengine - INFO - Epoch(val) [1][552/552]    coco/bbox_mAP: 0.0000  coco/bbox_mAP_50: 0.0010  coco/bbox_mAP_75: 0.0000  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.0000  data_time: 0.4135  time: 0.4393
2024/05/04 20:37:28 - mmengine - INFO - The best checkpoint with 0.0000 coco/bbox_mAP at 1 epoch is saved to best_coco_bbox_mAP_epoch_1.pth.
2024/05/04 20:52:58 - mmengine - INFO - Epoch(train)  [2][ 50/276]  base_lr: 1.0000e-02 lr: 3.2439e-03  eta: 1 day, 20:28:58  time: 18.4975  data_time: 18.0976  memory: 8168  loss: 5.8468  loss_cls: 2.9142  loss_bbox: 2.9327
2024/05/04 21:06:02 - mmengine - INFO - Epoch(train)  [2][100/276]  base_lr: 1.0000e-02 lr: 3.7429e-03  eta: 1 day, 19:54:34  time: 15.6953  data_time: 14.4995  memory: 8168  loss: 5.7309  loss_cls: 2.9076  loss_bbox: 2.8233
2024/05/04 21:19:08 - mmengine - INFO - Epoch(train)  [2][150/276]  base_lr: 1.0000e-02 lr: 4.2420e-03  eta: 1 day, 19:25:25  time: 15.7093  data_time: 14.7805  memory: 8168  loss: 5.5764  loss_cls: 2.8868  loss_bbox: 2.6897
2024/05/04 21:31:38 - mmengine - INFO - Epoch(train)  [2][200/276]  base_lr: 1.0000e-02 lr: 4.7411e-03  eta: 1 day, 18:47:52  time: 14.9978  data_time: 14.5946  memory: 8168  loss: 5.4893  loss_cls: 2.9695  loss_bbox: 2.5198
2024/05/04 21:45:56 - mmengine - INFO - Epoch(train)  [2][250/276]  base_lr: 1.0000e-02 lr: 5.2401e-03  eta: 1 day, 18:47:29  time: 17.1716  data_time: 16.5237  memory: 8168  loss: 5.3489  loss_cls: 3.0292  loss_bbox: 2.3196
2024/05/04 21:49:51 - mmengine - INFO - Exp name: yolov6_l_syncbn_fast_8xb32-300e_coco_20240504_191744
2024/05/04 21:49:51 - mmengine - INFO - Saving checkpoint at 2 epochs
2024/05/04 21:50:41 - mmengine - INFO - Epoch(val)  [2][ 50/552]    eta: 0:07:10  time: 0.8576  data_time: 0.8303  memory: 8168  
2024/05/04 21:51:20 - mmengine - INFO - Epoch(val)  [2][100/552]    eta: 0:06:09  time: 0.7756  data_time: 0.7518  memory: 1208  
2024/05/04 21:51:38 - mmengine - INFO - Epoch(val)  [2][150/552]    eta: 0:04:28  time: 0.3673  data_time: 0.3419  memory: 1208  
2024/05/04 21:51:57 - mmengine - INFO - Epoch(val)  [2][200/552]    eta: 0:03:28  time: 0.3724  data_time: 0.3453  memory: 1194  
2024/05/04 21:52:16 - mmengine - INFO - Epoch(val)  [2][250/552]    eta: 0:02:46  time: 0.3799  data_time: 0.3542  memory: 1194  
2024/05/04 21:52:33 - mmengine - INFO - Epoch(val)  [2][300/552]    eta: 0:02:10  time: 0.3496  data_time: 0.3249  memory: 1194  
2024/05/04 21:52:50 - mmengine - INFO - Epoch(val)  [2][350/552]    eta: 0:01:39  time: 0.3436  data_time: 0.3182  memory: 1196  
2024/05/04 21:53:07 - mmengine - INFO - Epoch(val)  [2][400/552]    eta: 0:01:11  time: 0.3249  data_time: 0.2990  memory: 1196  
2024/05/04 21:53:23 - mmengine - INFO - Epoch(val)  [2][450/552]    eta: 0:00:46  time: 0.3377  data_time: 0.3126  memory: 1196  
2024/05/04 21:53:40 - mmengine - INFO - Epoch(val)  [2][500/552]    eta: 0:00:23  time: 0.3373  data_time: 0.3110  memory: 1196  
2024/05/04 21:53:58 - mmengine - INFO - Epoch(val)  [2][550/552]    eta: 0:00:00  time: 0.3471  data_time: 0.3222  memory: 1196  
2024/05/04 21:54:11 - mmengine - INFO - Evaluating bbox...
2024/05/04 21:54:18 - mmengine - INFO - bbox_mAP_copypaste: 0.013 0.041 0.004 -1.000 -1.000 0.013
2024/05/04 21:54:18 - mmengine - INFO - Epoch(val) [2][552/552]    coco/bbox_mAP: 0.0130  coco/bbox_mAP_50: 0.0410  coco/bbox_mAP_75: 0.0040  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.0130  data_time: 0.4103  time: 0.4359
2024/05/04 21:54:18 - mmengine - INFO - The previous best checkpoint /media/iris/Dong/openmmlab/detection/coding/yolov6/yolov6_l_syncbn_fast_8xb32-300e_coco/best_coco_bbox_mAP_epoch_1.pth is removed
2024/05/04 21:54:21 - mmengine - INFO - The best checkpoint with 0.0130 coco/bbox_mAP at 2 epoch is saved to best_coco_bbox_mAP_epoch_2.pth.
2024/05/04 22:09:28 - mmengine - INFO - Epoch(train)  [3][ 50/276]  base_lr: 1.0000e-02 lr: 5.9648e-03  eta: 1 day, 17:59:11  time: 18.0533  data_time: 17.6471  memory: 8168  loss: 5.0932  loss_cls: 2.9989  loss_bbox: 2.0943
2024/05/04 22:22:45 - mmengine - INFO - Epoch(train)  [3][100/276]  base_lr: 1.0000e-02 lr: 6.4610e-03  eta: 1 day, 17:42:34  time: 15.9308  data_time: 15.5082  memory: 8168  loss: 4.8497  loss_cls: 2.9503  loss_bbox: 1.8994
2024/05/04 22:35:09 - mmengine - INFO - Epoch(train)  [3][150/276]  base_lr: 1.0000e-02 lr: 6.9573e-03  eta: 1 day, 17:15:00  time: 14.8879  data_time: 14.4878  memory: 8168  loss: 4.7176  loss_cls: 2.9575  loss_bbox: 1.7601
2024/05/04 22:47:15 - mmengine - INFO - Epoch(train)  [3][200/276]  base_lr: 1.0000e-02 lr: 7.4535e-03  eta: 1 day, 16:45:35  time: 14.5078  data_time: 14.1069  memory: 8168  loss: 4.5902  loss_cls: 2.9191  loss_bbox: 1.6711
2024/05/04 23:01:10 - mmengine - INFO - Epoch(train)  [3][250/276]  base_lr: 1.0000e-02 lr: 7.9498e-03  eta: 1 day, 16:39:15  time: 16.7137  data_time: 14.9850  memory: 8168  loss: 4.4987  loss_cls: 2.9096  loss_bbox: 1.5891
2024/05/04 23:05:30 - mmengine - INFO - Exp name: yolov6_l_syncbn_fast_8xb32-300e_coco_20240504_191744
2024/05/04 23:05:30 - mmengine - INFO - Saving checkpoint at 3 epochs
2024/05/04 23:06:18 - mmengine - INFO - Epoch(val)  [3][ 50/552]    eta: 0:06:55  time: 0.8283  data_time: 0.8020  memory: 8168  
2024/05/04 23:06:58 - mmengine - INFO - Epoch(val)  [3][100/552]    eta: 0:06:06  time: 0.7916  data_time: 0.7656  memory: 1208  
2024/05/04 23:07:17 - mmengine - INFO - Epoch(val)  [3][150/552]    eta: 0:04:29  time: 0.3890  data_time: 0.3636  memory: 1208  
2024/05/04 23:07:36 - mmengine - INFO - Epoch(val)  [3][200/552]    eta: 0:03:29  time: 0.3721  data_time: 0.3464  memory: 1194  
2024/05/04 23:07:55 - mmengine - INFO - Epoch(val)  [3][250/552]    eta: 0:02:46  time: 0.3729  data_time: 0.3452  memory: 1194  
2024/05/04 23:08:12 - mmengine - INFO - Epoch(val)  [3][300/552]    eta: 0:02:10  time: 0.3533  data_time: 0.3283  memory: 1194  
2024/05/04 23:08:29 - mmengine - INFO - Epoch(val)  [3][350/552]    eta: 0:01:39  time: 0.3355  data_time: 0.3102  memory: 1196  
2024/05/04 23:08:45 - mmengine - INFO - Epoch(val)  [3][400/552]    eta: 0:01:11  time: 0.3107  data_time: 0.2862  memory: 1196  
2024/05/04 23:09:01 - mmengine - INFO - Epoch(val)  [3][450/552]    eta: 0:00:46  time: 0.3340  data_time: 0.3092  memory: 1196  
2024/05/04 23:09:19 - mmengine - INFO - Epoch(val)  [3][500/552]    eta: 0:00:23  time: 0.3531  data_time: 0.3276  memory: 1196  
2024/05/04 23:09:36 - mmengine - INFO - Epoch(val)  [3][550/552]    eta: 0:00:00  time: 0.3403  data_time: 0.3158  memory: 1196  
2024/05/04 23:09:50 - mmengine - INFO - Evaluating bbox...
2024/05/04 23:09:56 - mmengine - INFO - bbox_mAP_copypaste: 0.106 0.193 0.100 -1.000 -1.000 0.106
2024/05/04 23:09:56 - mmengine - INFO - Epoch(val) [3][552/552]    coco/bbox_mAP: 0.1060  coco/bbox_mAP_50: 0.1930  coco/bbox_mAP_75: 0.1000  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.1060  data_time: 0.4084  time: 0.4339
2024/05/04 23:09:56 - mmengine - INFO - The previous best checkpoint /media/iris/Dong/openmmlab/detection/coding/yolov6/yolov6_l_syncbn_fast_8xb32-300e_coco/best_coco_bbox_mAP_epoch_2.pth is removed
2024/05/04 23:09:59 - mmengine - INFO - The best checkpoint with 0.1060 coco/bbox_mAP at 3 epoch is saved to best_coco_bbox_mAP_epoch_3.pth.
2024/05/04 23:25:28 - mmengine - INFO - Epoch(train)  [4][ 50/276]  base_lr: 1.0000e-02 lr: 8.6221e-03  eta: 1 day, 16:13:04  time: 18.4798  data_time: 8.7303  memory: 8189  loss: 4.3412  loss_cls: 2.8309  loss_bbox: 1.5103
2024/05/04 23:37:58 - mmengine - INFO - Epoch(train)  [4][100/276]  base_lr: 1.0000e-02 lr: 9.1136e-03  eta: 1 day, 15:51:52  time: 15.0084  data_time: 1.1641  memory: 8168  loss: 4.2852  loss_cls: 2.8308  loss_bbox: 1.4544
2024/05/04 23:50:21 - mmengine - INFO - Epoch(train)  [4][150/276]  base_lr: 1.0000e-02 lr: 9.6052e-03  eta: 1 day, 15:30:21  time: 14.8537  data_time: 5.3371  memory: 8168  loss: 4.2270  loss_cls: 2.7741  loss_bbox: 1.4530
2024/05/04 23:57:12 - mmengine - INFO - Exp name: yolov6_l_syncbn_fast_8xb32-300e_coco_20240504_191744
2024/05/05 00:04:06 - mmengine - INFO - Epoch(train)  [4][200/276]  base_lr: 1.0000e-02 lr: 9.8313e-03  eta: 1 day, 15:21:39  time: 16.5036  data_time: 8.1276  memory: 8168  loss: 4.1442  loss_cls: 2.7843  loss_bbox: 1.3599
2024/05/05 00:17:50 - mmengine - INFO - Epoch(train)  [4][250/276]  base_lr: 1.0000e-02 lr: 9.8313e-03  eta: 1 day, 15:12:17  time: 16.4741  data_time: 0.3440  memory: 8168  loss: 4.0645  loss_cls: 2.7186  loss_bbox: 1.3459
2024/05/05 00:21:56 - mmengine - INFO - Exp name: yolov6_l_syncbn_fast_8xb32-300e_coco_20240504_191744
2024/05/05 00:21:56 - mmengine - INFO - Saving checkpoint at 4 epochs
2024/05/05 00:22:44 - mmengine - INFO - Epoch(val)  [4][ 50/552]    eta: 0:06:51  time: 0.8201  data_time: 0.7925  memory: 8168  
2024/05/05 00:23:21 - mmengine - INFO - Epoch(val)  [4][100/552]    eta: 0:05:55  time: 0.7545  data_time: 0.7290  memory: 1208  
2024/05/05 00:23:39 - mmengine - INFO - Epoch(val)  [4][150/552]    eta: 0:04:18  time: 0.3581  data_time: 0.3328  memory: 1208  
2024/05/05 00:23:57 - mmengine - INFO - Epoch(val)  [4][200/552]    eta: 0:03:22  time: 0.3635  data_time: 0.3376  memory: 1194  
2024/05/05 00:24:16 - mmengine - INFO - Epoch(val)  [4][250/552]    eta: 0:02:40  time: 0.3634  data_time: 0.3386  memory: 1194  
2024/05/05 00:24:33 - mmengine - INFO - Epoch(val)  [4][300/552]    eta: 0:02:06  time: 0.3538  data_time: 0.3283  memory: 1194  
2024/05/05 00:24:51 - mmengine - INFO - Epoch(val)  [4][350/552]    eta: 0:01:37  time: 0.3621  data_time: 0.3374  memory: 1196  
2024/05/05 00:25:08 - mmengine - INFO - Epoch(val)  [4][400/552]    eta: 0:01:10  time: 0.3285  data_time: 0.3040  memory: 1196  
2024/05/05 00:25:24 - mmengine - INFO - Epoch(val)  [4][450/552]    eta: 0:00:45  time: 0.3205  data_time: 0.2952  memory: 1196  
2024/05/05 00:25:42 - mmengine - INFO - Epoch(val)  [4][500/552]    eta: 0:00:22  time: 0.3523  data_time: 0.3287  memory: 1196  
2024/05/05 00:25:59 - mmengine - INFO - Epoch(val)  [4][550/552]    eta: 0:00:00  time: 0.3415  data_time: 0.3154  memory: 1196  
2024/05/05 00:26:13 - mmengine - INFO - Evaluating bbox...
2024/05/05 00:26:19 - mmengine - INFO - bbox_mAP_copypaste: 0.178 0.300 0.197 -1.000 -1.000 0.178
2024/05/05 00:26:19 - mmengine - INFO - Epoch(val) [4][552/552]    coco/bbox_mAP: 0.1780  coco/bbox_mAP_50: 0.3000  coco/bbox_mAP_75: 0.1970  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.1780  data_time: 0.4019  time: 0.4273
2024/05/05 00:26:19 - mmengine - INFO - The previous best checkpoint /media/iris/Dong/openmmlab/detection/coding/yolov6/yolov6_l_syncbn_fast_8xb32-300e_coco/best_coco_bbox_mAP_epoch_3.pth is removed
2024/05/05 00:26:22 - mmengine - INFO - The best checkpoint with 0.1780 coco/bbox_mAP at 4 epoch is saved to best_coco_bbox_mAP_epoch_4.pth.
2024/05/05 00:41:53 - mmengine - INFO - Epoch(train)  [5][ 50/276]  base_lr: 1.0000e-02 lr: 9.8313e-03  eta: 1 day, 14:47:08  time: 18.5097  data_time: 15.0723  memory: 8186  loss: 3.4364  loss_cls: 2.1627  loss_bbox: 1.2738
2024/05/05 00:55:00 - mmengine - INFO - Epoch(train)  [5][100/276]  base_lr: 1.0000e-02 lr: 9.8313e-03  eta: 1 day, 14:32:54  time: 15.7373  data_time: 14.7362  memory: 8211  loss: 3.3613  loss_cls: 2.1546  loss_bbox: 1.2067
2024/05/05 01:07:44 - mmengine - INFO - Epoch(train)  [5][150/276]  base_lr: 1.0000e-02 lr: 9.8313e-03  eta: 1 day, 14:16:12  time: 15.2951  data_time: 14.8960  memory: 8195  loss: 3.2428  loss_cls: 2.1097  loss_bbox: 1.1331
2024/05/05 01:19:29 - mmengine - INFO - Epoch(train)  [5][200/276]  base_lr: 1.0000e-02 lr: 9.8313e-03  eta: 1 day, 13:53:11  time: 14.0935  data_time: 13.6964  memory: 8219  loss: 3.2648  loss_cls: 2.1586  loss_bbox: 1.1062
2024/05/05 01:32:20 - mmengine - INFO - Epoch(train)  [5][250/276]  base_lr: 1.0000e-02 lr: 9.8313e-03  eta: 1 day, 13:37:57  time: 15.4096  data_time: 14.9775  memory: 8186  loss: 3.2029  loss_cls: 2.1317  loss_bbox: 1.0712
2024/05/05 01:36:59 - mmengine - INFO - Exp name: yolov6_l_syncbn_fast_8xb32-300e_coco_20240504_191744
2024/05/05 01:36:59 - mmengine - INFO - Saving checkpoint at 5 epochs
2024/05/05 01:37:51 - mmengine - INFO - Epoch(val)  [5][ 50/552]    eta: 0:07:30  time: 0.8979  data_time: 0.8725  memory: 8195  
2024/05/05 01:38:30 - mmengine - INFO - Epoch(val)  [5][100/552]    eta: 0:06:18  time: 0.7759  data_time: 0.7510  memory: 1208  
2024/05/05 01:38:48 - mmengine - INFO - Epoch(val)  [5][150/552]    eta: 0:04:33  time: 0.3670  data_time: 0.3429  memory: 1208  
2024/05/05 01:39:07 - mmengine - INFO - Epoch(val)  [5][200/552]    eta: 0:03:33  time: 0.3823  data_time: 0.3574  memory: 1194  
2024/05/05 01:39:26 - mmengine - INFO - Epoch(val)  [5][250/552]    eta: 0:02:48  time: 0.3697  data_time: 0.3440  memory: 1194  
2024/05/05 01:39:42 - mmengine - INFO - Epoch(val)  [5][300/552]    eta: 0:02:11  time: 0.3341  data_time: 0.3055  memory: 1194  
2024/05/05 01:40:00 - mmengine - INFO - Epoch(val)  [5][350/552]    eta: 0:01:40  time: 0.3469  data_time: 0.3219  memory: 1196  
2024/05/05 01:40:17 - mmengine - INFO - Epoch(val)  [5][400/552]    eta: 0:01:12  time: 0.3380  data_time: 0.3128  memory: 1196  
2024/05/05 01:40:33 - mmengine - INFO - Epoch(val)  [5][450/552]    eta: 0:00:46  time: 0.3334  data_time: 0.3102  memory: 1196  
2024/05/05 01:40:51 - mmengine - INFO - Epoch(val)  [5][500/552]    eta: 0:00:23  time: 0.3533  data_time: 0.3283  memory: 1196  
2024/05/05 01:41:07 - mmengine - INFO - Epoch(val)  [5][550/552]    eta: 0:00:00  time: 0.3183  data_time: 0.2918  memory: 1196  
2024/05/05 01:41:21 - mmengine - INFO - Evaluating bbox...
2024/05/05 01:41:27 - mmengine - INFO - bbox_mAP_copypaste: 0.237 0.351 0.271 -1.000 -1.000 0.237
2024/05/05 01:41:27 - mmengine - INFO - Epoch(val) [5][552/552]    coco/bbox_mAP: 0.2370  coco/bbox_mAP_50: 0.3510  coco/bbox_mAP_75: 0.2710  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.2370  data_time: 0.4123  time: 0.4376
2024/05/05 01:41:27 - mmengine - INFO - The previous best checkpoint /media/iris/Dong/openmmlab/detection/coding/yolov6/yolov6_l_syncbn_fast_8xb32-300e_coco/best_coco_bbox_mAP_epoch_4.pth is removed
2024/05/05 01:41:30 - mmengine - INFO - The best checkpoint with 0.2370 coco/bbox_mAP at 5 epoch is saved to best_coco_bbox_mAP_epoch_5.pth.
2024/05/05 01:56:43 - mmengine - INFO - Epoch(train)  [6][ 50/276]  base_lr: 1.0000e-02 lr: 9.7015e-03  eta: 1 day, 13:16:42  time: 18.1642  data_time: 15.8861  memory: 8195  loss: 3.1797  loss_cls: 2.1250  loss_bbox: 1.0548
2024/05/05 02:09:23 - mmengine - INFO - Epoch(train)  [6][100/276]  base_lr: 1.0000e-02 lr: 9.7015e-03  eta: 1 day, 13:00:49  time: 15.2011  data_time: 5.2094  memory: 8203  loss: 3.1725  loss_cls: 2.1211  loss_bbox: 1.0514
2024/05/05 02:21:34 - mmengine - INFO - Epoch(train)  [6][150/276]  base_lr: 1.0000e-02 lr: 9.7015e-03  eta: 1 day, 12:42:27  time: 14.6144  data_time: 4.2999  memory: 8195  loss: 3.1562  loss_cls: 2.1084  loss_bbox: 1.0478
2024/05/05 02:33:41 - mmengine - INFO - Epoch(train)  [6][200/276]  base_lr: 1.0000e-02 lr: 9.7015e-03  eta: 1 day, 12:24:09  time: 14.5425  data_time: 8.3817  memory: 8195  loss: 3.1353  loss_cls: 2.1206  loss_bbox: 1.0147
2024/05/05 02:48:07 - mmengine - INFO - Epoch(train)  [6][250/276]  base_lr: 1.0000e-02 lr: 9.7015e-03  eta: 1 day, 12:18:01  time: 17.3151  data_time: 7.1101  memory: 8195  loss: 3.1653  loss_cls: 2.1373  loss_bbox: 1.0280
2024/05/05 02:51:24 - mmengine - INFO - Exp name: yolov6_l_syncbn_fast_8xb32-300e_coco_20240504_191744
2024/05/05 02:51:24 - mmengine - INFO - Saving checkpoint at 6 epochs
2024/05/05 02:52:19 - mmengine - INFO - Epoch(val)  [6][ 50/552]    eta: 0:07:35  time: 0.9074  data_time: 0.8799  memory: 8178  
2024/05/05 02:52:57 - mmengine - INFO - Epoch(val)  [6][100/552]    eta: 0:06:18  time: 0.7655  data_time: 0.7410  memory: 1208  
2024/05/05 02:53:16 - mmengine - INFO - Epoch(val)  [6][150/552]    eta: 0:04:35  time: 0.3825  data_time: 0.3568  memory: 1208  
2024/05/05 02:53:35 - mmengine - INFO - Epoch(val)  [6][200/552]    eta: 0:03:34  time: 0.3818  data_time: 0.3569  memory: 1194  
2024/05/05 02:53:53 - mmengine - INFO - Epoch(val)  [6][250/552]    eta: 0:02:48  time: 0.3491  data_time: 0.3239  memory: 1194  
2024/05/05 02:54:10 - mmengine - INFO - Epoch(val)  [6][300/552]    eta: 0:02:11  time: 0.3494  data_time: 0.3238  memory: 1194  
2024/05/05 02:54:29 - mmengine - INFO - Epoch(val)  [6][350/552]    eta: 0:01:41  time: 0.3721  data_time: 0.3472  memory: 1196  
2024/05/05 02:54:45 - mmengine - INFO - Epoch(val)  [6][400/552]    eta: 0:01:12  time: 0.3245  data_time: 0.3005  memory: 1196  
2024/05/05 02:55:01 - mmengine - INFO - Epoch(val)  [6][450/552]    eta: 0:00:47  time: 0.3181  data_time: 0.2925  memory: 1196  
2024/05/05 02:55:19 - mmengine - INFO - Epoch(val)  [6][500/552]    eta: 0:00:23  time: 0.3554  data_time: 0.3317  memory: 1196  
2024/05/05 02:55:35 - mmengine - INFO - Epoch(val)  [6][550/552]    eta: 0:00:00  time: 0.3268  data_time: 0.3021  memory: 1196  
2024/05/05 02:55:46 - mmengine - INFO - Evaluating bbox...
2024/05/05 02:55:52 - mmengine - INFO - bbox_mAP_copypaste: 0.200 0.298 0.221 -1.000 -1.000 0.200
2024/05/05 02:55:52 - mmengine - INFO - Epoch(val) [6][552/552]    coco/bbox_mAP: 0.2000  coco/bbox_mAP_50: 0.2980  coco/bbox_mAP_75: 0.2210  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.2000  data_time: 0.4129  time: 0.4380
2024/05/05 03:12:00 - mmengine - INFO - Epoch(train)  [7][ 50/276]  base_lr: 1.0000e-02 lr: 9.5362e-03  eta: 1 day, 11:55:39  time: 19.3565  data_time: 6.1178  memory: 8203  loss: 3.0966  loss_cls: 2.0899  loss_bbox: 1.0068
2024/05/05 03:25:19 - mmengine - INFO - Epoch(train)  [7][100/276]  base_lr: 1.0000e-02 lr: 9.5362e-03  eta: 1 day, 11:43:35  time: 15.9822  data_time: 0.6939  memory: 8236  loss: 3.1309  loss_cls: 2.1431  loss_bbox: 0.9879
2024/05/05 03:37:09 - mmengine - INFO - Epoch(train)  [7][150/276]  base_lr: 1.0000e-02 lr: 9.5362e-03  eta: 1 day, 11:24:46  time: 14.1985  data_time: 0.0007  memory: 8186  loss: 3.0812  loss_cls: 2.1048  loss_bbox: 0.9763
2024/05/05 03:49:06 - mmengine - INFO - Epoch(train)  [7][200/276]  base_lr: 1.0000e-02 lr: 9.5362e-03  eta: 1 day, 11:06:51  time: 14.3427  data_time: 2.6030  memory: 8203  loss: 3.0371  loss_cls: 2.0947  loss_bbox: 0.9424
2024/05/05 04:02:55 - mmengine - INFO - Epoch(train)  [7][250/276]  base_lr: 1.0000e-02 lr: 9.5362e-03  eta: 1 day, 10:57:04  time: 16.5714  data_time: 1.1822  memory: 8186  loss: 3.0411  loss_cls: 2.0858  loss_bbox: 0.9552
2024/05/05 04:06:23 - mmengine - INFO - Exp name: yolov6_l_syncbn_fast_8xb32-300e_coco_20240504_191744
2024/05/05 04:06:23 - mmengine - INFO - Saving checkpoint at 7 epochs
2024/05/05 04:07:17 - mmengine - INFO - Epoch(val)  [7][ 50/552]    eta: 0:07:20  time: 0.8768  data_time: 0.8500  memory: 8186  
2024/05/05 04:07:55 - mmengine - INFO - Epoch(val)  [7][100/552]    eta: 0:06:08  time: 0.7519  data_time: 0.7272  memory: 1208  
2024/05/05 04:08:13 - mmengine - INFO - Epoch(val)  [7][150/552]    eta: 0:04:28  time: 0.3776  data_time: 0.3528  memory: 1208  
2024/05/05 04:08:33 - mmengine - INFO - Epoch(val)  [7][200/552]    eta: 0:03:31  time: 0.3980  data_time: 0.3726  memory: 1194  
2024/05/05 04:08:51 - mmengine - INFO - Epoch(val)  [7][250/552]    eta: 0:02:46  time: 0.3552  data_time: 0.3290  memory: 1194  
2024/05/05 04:09:08 - mmengine - INFO - Epoch(val)  [7][300/552]    eta: 0:02:10  time: 0.3408  data_time: 0.3146  memory: 1194  
2024/05/05 04:09:26 - mmengine - INFO - Epoch(val)  [7][350/552]    eta: 0:01:39  time: 0.3573  data_time: 0.3317  memory: 1196  
2024/05/05 04:09:42 - mmengine - INFO - Epoch(val)  [7][400/552]    eta: 0:01:11  time: 0.3153  data_time: 0.2905  memory: 1196  
2024/05/05 04:09:58 - mmengine - INFO - Epoch(val)  [7][450/552]    eta: 0:00:46  time: 0.3324  data_time: 0.3070  memory: 1196  
2024/05/05 04:10:16 - mmengine - INFO - Epoch(val)  [7][500/552]    eta: 0:00:23  time: 0.3541  data_time: 0.3288  memory: 1196  
2024/05/05 04:10:33 - mmengine - INFO - Epoch(val)  [7][550/552]    eta: 0:00:00  time: 0.3391  data_time: 0.3144  memory: 1196  
2024/05/05 04:10:45 - mmengine - INFO - Evaluating bbox...
2024/05/05 04:10:51 - mmengine - INFO - bbox_mAP_copypaste: 0.282 0.376 0.322 -1.000 -1.000 0.282
2024/05/05 04:10:52 - mmengine - INFO - Epoch(val) [7][552/552]    coco/bbox_mAP: 0.2820  coco/bbox_mAP_50: 0.3760  coco/bbox_mAP_75: 0.3220  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.2820  data_time: 0.4099  time: 0.4354
2024/05/05 04:10:52 - mmengine - INFO - The previous best checkpoint /media/iris/Dong/openmmlab/detection/coding/yolov6/yolov6_l_syncbn_fast_8xb32-300e_coco/best_coco_bbox_mAP_epoch_5.pth is removed
2024/05/05 04:10:55 - mmengine - INFO - The best checkpoint with 0.2820 coco/bbox_mAP at 7 epoch is saved to best_coco_bbox_mAP_epoch_7.pth.
2024/05/05 04:26:55 - mmengine - INFO - Epoch(train)  [8][ 50/276]  base_lr: 1.0000e-02 lr: 9.3368e-03  eta: 1 day, 10:35:23  time: 19.1046  data_time: 13.9545  memory: 8211  loss: 3.0309  loss_cls: 2.1009  loss_bbox: 0.9299
2024/05/05 04:31:06 - mmengine - INFO - Exp name: yolov6_l_syncbn_fast_8xb32-300e_coco_20240504_191744
2024/05/05 04:38:44 - mmengine - INFO - Epoch(train)  [8][100/276]  base_lr: 1.0000e-02 lr: 9.3368e-03  eta: 1 day, 10:17:33  time: 14.1825  data_time: 4.8048  memory: 8211  loss: 3.0238  loss_cls: 2.0767  loss_bbox: 0.9471
2024/05/05 04:52:25 - mmengine - INFO - Epoch(train)  [8][150/276]  base_lr: 1.0000e-02 lr: 9.3368e-03  eta: 1 day, 10:07:03  time: 16.4172  data_time: 3.6313  memory: 8203  loss: 2.9578  loss_cls: 2.0480  loss_bbox: 0.9097
2024/05/05 05:04:33 - mmengine - INFO - Epoch(train)  [8][200/276]  base_lr: 1.0000e-02 lr: 9.3368e-03  eta: 1 day, 9:50:42  time: 14.5511  data_time: 1.2593  memory: 8195  loss: 2.9211  loss_cls: 2.0093  loss_bbox: 0.9118
2024/05/05 05:16:30 - mmengine - INFO - Epoch(train)  [8][250/276]  base_lr: 1.0000e-02 lr: 9.3368e-03  eta: 1 day, 9:33:58  time: 14.3559  data_time: 0.0008  memory: 8203  loss: 2.9245  loss_cls: 2.0400  loss_bbox: 0.8845
2024/05/05 05:20:37 - mmengine - INFO - Exp name: yolov6_l_syncbn_fast_8xb32-300e_coco_20240504_191744
2024/05/05 05:20:37 - mmengine - INFO - Saving checkpoint at 8 epochs
2024/05/05 05:21:30 - mmengine - INFO - Epoch(val)  [8][ 50/552]    eta: 0:07:03  time: 0.8434  data_time: 0.8172  memory: 8186  
2024/05/05 05:22:07 - mmengine - INFO - Epoch(val)  [8][100/552]    eta: 0:05:53  time: 0.7227  data_time: 0.6982  memory: 1208  
2024/05/05 05:22:26 - mmengine - INFO - Epoch(val)  [8][150/552]    eta: 0:04:22  time: 0.3899  data_time: 0.3664  memory: 1208  
2024/05/05 05:22:45 - mmengine - INFO - Epoch(val)  [8][200/552]    eta: 0:03:25  time: 0.3783  data_time: 0.3535  memory: 1194  
2024/05/05 05:23:04 - mmengine - INFO - Epoch(val)  [8][250/552]    eta: 0:02:43  time: 0.3716  data_time: 0.3454  memory: 1194  
2024/05/05 05:23:21 - mmengine - INFO - Epoch(val)  [8][300/552]    eta: 0:02:08  time: 0.3535  data_time: 0.3292  memory: 1194  
2024/05/05 05:23:40 - mmengine - INFO - Epoch(val)  [8][350/552]    eta: 0:01:38  time: 0.3675  data_time: 0.3433  memory: 1196  
2024/05/05 05:23:57 - mmengine - INFO - Epoch(val)  [8][400/552]    eta: 0:01:11  time: 0.3465  data_time: 0.3227  memory: 1196  
2024/05/05 05:24:14 - mmengine - INFO - Epoch(val)  [8][450/552]    eta: 0:00:46  time: 0.3376  data_time: 0.3141  memory: 1196  
2024/05/05 05:24:31 - mmengine - INFO - Epoch(val)  [8][500/552]    eta: 0:00:23  time: 0.3500  data_time: 0.3244  memory: 1196  
2024/05/05 05:24:48 - mmengine - INFO - Epoch(val)  [8][550/552]    eta: 0:00:00  time: 0.3286  data_time: 0.3031  memory: 1196  
2024/05/05 05:24:57 - mmengine - INFO - Evaluating bbox...
2024/05/05 05:25:03 - mmengine - INFO - bbox_mAP_copypaste: 0.226 0.314 0.252 -1.000 -1.000 0.226
2024/05/05 05:25:03 - mmengine - INFO - Epoch(val) [8][552/552]    coco/bbox_mAP: 0.2260  coco/bbox_mAP_50: 0.3140  coco/bbox_mAP_75: 0.2520  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.2260  data_time: 0.4099  time: 0.4346
2024/05/05 05:38:50 - mmengine - INFO - Epoch(train)  [9][ 50/276]  base_lr: 1.0000e-02 lr: 9.1048e-03  eta: 1 day, 9:07:57  time: 16.5425  data_time: 13.7538  memory: 8195  loss: 2.9773  loss_cls: 2.0816  loss_bbox: 0.8957
2024/05/05 05:51:15 - mmengine - INFO - Epoch(train)  [9][100/276]  base_lr: 1.0000e-02 lr: 9.1048e-03  eta: 1 day, 8:53:14  time: 14.8907  data_time: 12.0877  memory: 8195  loss: 2.9271  loss_cls: 2.0326  loss_bbox: 0.8944
2024/05/05 06:06:17 - mmengine - INFO - Epoch(train)  [9][150/276]  base_lr: 1.0000e-02 lr: 9.1048e-03  eta: 1 day, 8:47:04  time: 18.0473  data_time: 10.2929  memory: 8186  loss: 2.9690  loss_cls: 2.0779  loss_bbox: 0.8911
2024/05/05 06:18:28 - mmengine - INFO - Epoch(train)  [9][200/276]  base_lr: 1.0000e-02 lr: 9.1048e-03  eta: 1 day, 8:31:36  time: 14.6223  data_time: 0.6892  memory: 8211  loss: 2.8984  loss_cls: 2.0297  loss_bbox: 0.8686
2024/05/05 06:30:34 - mmengine - INFO - Epoch(train)  [9][250/276]  base_lr: 1.0000e-02 lr: 9.1048e-03  eta: 1 day, 8:16:01  time: 14.5221  data_time: 1.9705  memory: 8186  loss: 2.8920  loss_cls: 2.0235  loss_bbox: 0.8686
2024/05/05 06:35:25 - mmengine - INFO - Exp name: yolov6_l_syncbn_fast_8xb32-300e_coco_20240504_191744
2024/05/05 06:35:25 - mmengine - INFO - Saving checkpoint at 9 epochs
2024/05/05 06:36:19 - mmengine - INFO - Epoch(val)  [9][ 50/552]    eta: 0:07:25  time: 0.8884  data_time: 0.8618  memory: 8203  
2024/05/05 06:36:56 - mmengine - INFO - Epoch(val)  [9][100/552]    eta: 0:06:10  time: 0.7519  data_time: 0.7274  memory: 1208  
2024/05/05 06:37:14 - mmengine - INFO - Epoch(val)  [9][150/552]    eta: 0:04:27  time: 0.3560  data_time: 0.3309  memory: 1208  
2024/05/05 06:37:32 - mmengine - INFO - Epoch(val)  [9][200/552]    eta: 0:03:27  time: 0.3600  data_time: 0.3349  memory: 1194  
2024/05/05 06:37:50 - mmengine - INFO - Epoch(val)  [9][250/552]    eta: 0:02:43  time: 0.3566  data_time: 0.3317  memory: 1194  
2024/05/05 06:38:09 - mmengine - INFO - Epoch(val)  [9][300/552]    eta: 0:02:10  time: 0.3827  data_time: 0.3564  memory: 1194  
2024/05/05 06:38:26 - mmengine - INFO - Epoch(val)  [9][350/552]    eta: 0:01:39  time: 0.3354  data_time: 0.3108  memory: 1196  
2024/05/05 06:38:43 - mmengine - INFO - Epoch(val)  [9][400/552]    eta: 0:01:11  time: 0.3504  data_time: 0.3262  memory: 1196  
2024/05/05 06:39:00 - mmengine - INFO - Epoch(val)  [9][450/552]    eta: 0:00:46  time: 0.3382  data_time: 0.3143  memory: 1196  
2024/05/05 06:39:17 - mmengine - INFO - Epoch(val)  [9][500/552]    eta: 0:00:23  time: 0.3357  data_time: 0.3093  memory: 1196  
2024/05/05 06:39:33 - mmengine - INFO - Epoch(val)  [9][550/552]    eta: 0:00:00  time: 0.3214  data_time: 0.2946  memory: 1196  
2024/05/05 06:39:46 - mmengine - INFO - Evaluating bbox...
2024/05/05 06:39:52 - mmengine - INFO - bbox_mAP_copypaste: 0.299 0.384 0.331 -1.000 -1.000 0.299
2024/05/05 06:39:52 - mmengine - INFO - Epoch(val) [9][552/552]    coco/bbox_mAP: 0.2990  coco/bbox_mAP_50: 0.3840  coco/bbox_mAP_75: 0.3310  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.2990  data_time: 0.4086  time: 0.4340
2024/05/05 06:39:52 - mmengine - INFO - The previous best checkpoint /media/iris/Dong/openmmlab/detection/coding/yolov6/yolov6_l_syncbn_fast_8xb32-300e_coco/best_coco_bbox_mAP_epoch_7.pth is removed
2024/05/05 06:39:55 - mmengine - INFO - The best checkpoint with 0.2990 coco/bbox_mAP at 9 epoch is saved to best_coco_bbox_mAP_epoch_9.pth.
2024/05/05 06:55:00 - mmengine - INFO - Epoch(train) [10][ 50/276]  base_lr: 1.0000e-02 lr: 8.8419e-03  eta: 1 day, 7:56:46  time: 17.9752  data_time: 15.6046  memory: 8178  loss: 2.9113  loss_cls: 2.0372  loss_bbox: 0.8740
2024/05/05 07:07:24 - mmengine - INFO - Epoch(train) [10][100/276]  base_lr: 1.0000e-02 lr: 8.8419e-03  eta: 1 day, 7:42:15  time: 14.8782  data_time: 12.7727  memory: 8203  loss: 2.8541  loss_cls: 2.0154  loss_bbox: 0.8386
2024/05/05 07:19:56 - mmengine - INFO - Epoch(train) [10][150/276]  base_lr: 1.0000e-02 lr: 8.8419e-03  eta: 1 day, 7:28:14  time: 15.0553  data_time: 10.2013  memory: 8186  loss: 2.8488  loss_cls: 2.0036  loss_bbox: 0.8452
2024/05/05 07:30:56 - mmengine - INFO - Epoch(train) [10][200/276]  base_lr: 1.0000e-02 lr: 8.8419e-03  eta: 1 day, 7:10:05  time: 13.2017  data_time: 5.9402  memory: 8186  loss: 2.8278  loss_cls: 1.9961  loss_bbox: 0.8317
2024/05/05 07:45:30 - mmengine - INFO - Epoch(train) [10][250/276]  base_lr: 1.0000e-02 lr: 8.8419e-03  eta: 1 day, 7:01:36  time: 17.4767  data_time: 13.7923  memory: 8227  loss: 2.9070  loss_cls: 2.0264  loss_bbox: 0.8806
2024/05/05 07:48:54 - mmengine - INFO - Exp name: yolov6_l_syncbn_fast_8xb32-300e_coco_20240504_191744
2024/05/05 07:48:54 - mmengine - INFO - Saving checkpoint at 10 epochs
2024/05/05 07:49:44 - mmengine - INFO - Epoch(val) [10][ 50/552]    eta: 0:06:56  time: 0.8297  data_time: 0.8032  memory: 8195  
2024/05/05 07:50:22 - mmengine - INFO - Epoch(val) [10][100/552]    eta: 0:05:59  time: 0.7620  data_time: 0.7379  memory: 1208  
2024/05/05 07:50:41 - mmengine - INFO - Epoch(val) [10][150/552]    eta: 0:04:24  time: 0.3848  data_time: 0.3591  memory: 1208  
2024/05/05 07:51:00 - mmengine - INFO - Epoch(val) [10][200/552]    eta: 0:03:26  time: 0.3732  data_time: 0.3476  memory: 1194  
2024/05/05 07:51:18 - mmengine - INFO - Epoch(val) [10][250/552]    eta: 0:02:43  time: 0.3582  data_time: 0.3328  memory: 1194  
2024/05/05 07:51:36 - mmengine - INFO - Epoch(val) [10][300/552]    eta: 0:02:08  time: 0.3546  data_time: 0.3296  memory: 1194  
2024/05/05 07:51:54 - mmengine - INFO - Epoch(val) [10][350/552]    eta: 0:01:38  time: 0.3643  data_time: 0.3391  memory: 1196  
2024/05/05 07:52:11 - mmengine - INFO - Epoch(val) [10][400/552]    eta: 0:01:11  time: 0.3412  data_time: 0.3167  memory: 1196  
2024/05/05 07:52:28 - mmengine - INFO - Epoch(val) [10][450/552]    eta: 0:00:46  time: 0.3399  data_time: 0.3151  memory: 1196  
2024/05/05 07:52:45 - mmengine - INFO - Epoch(val) [10][500/552]    eta: 0:00:23  time: 0.3464  data_time: 0.3215  memory: 1196  
2024/05/05 07:53:02 - mmengine - INFO - Epoch(val) [10][550/552]    eta: 0:00:00  time: 0.3422  data_time: 0.3181  memory: 1196  
2024/05/05 07:53:14 - mmengine - INFO - Evaluating bbox...
2024/05/05 07:53:19 - mmengine - INFO - bbox_mAP_copypaste: 0.400 0.515 0.454 -1.000 -1.000 0.400
2024/05/05 07:53:20 - mmengine - INFO - Epoch(val) [10][552/552]    coco/bbox_mAP: 0.4000  coco/bbox_mAP_50: 0.5150  coco/bbox_mAP_75: 0.4540  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.4000  data_time: 0.4112  time: 0.4363
2024/05/05 07:53:20 - mmengine - INFO - The previous best checkpoint /media/iris/Dong/openmmlab/detection/coding/yolov6/yolov6_l_syncbn_fast_8xb32-300e_coco/best_coco_bbox_mAP_epoch_9.pth is removed
2024/05/05 07:53:23 - mmengine - INFO - The best checkpoint with 0.4000 coco/bbox_mAP at 10 epoch is saved to best_coco_bbox_mAP_epoch_10.pth.
2024/05/05 08:09:04 - mmengine - INFO - Epoch(train) [11][ 50/276]  base_lr: 1.0000e-02 lr: 8.5502e-03  eta: 1 day, 6:40:20  time: 18.7300  data_time: 18.2675  memory: 8186  loss: 2.8971  loss_cls: 2.0476  loss_bbox: 0.8495
2024/05/05 08:21:17 - mmengine - INFO - Epoch(train) [11][100/276]  base_lr: 1.0000e-02 lr: 8.5502e-03  eta: 1 day, 6:25:40  time: 14.6433  data_time: 13.7258  memory: 8195  loss: 2.8323  loss_cls: 1.9860  loss_bbox: 0.8463
2024/05/05 08:33:34 - mmengine - INFO - Epoch(train) [11][150/276]  base_lr: 1.0000e-02 lr: 8.5502e-03  eta: 1 day, 6:11:17  time: 14.7483  data_time: 9.5995  memory: 8186  loss: 2.8600  loss_cls: 2.0153  loss_bbox: 0.8447
2024/05/05 08:45:55 - mmengine - INFO - Epoch(train) [11][200/276]  base_lr: 1.0000e-02 lr: 8.5502e-03  eta: 1 day, 5:57:08  time: 14.8263  data_time: 14.4119  memory: 8170  loss: 2.8403  loss_cls: 2.0057  loss_bbox: 0.8346
2024/05/05 08:55:49 - mmengine - INFO - Exp name: yolov6_l_syncbn_fast_8xb32-300e_coco_20240504_191744
2024/05/05 08:59:42 - mmengine - INFO - Epoch(train) [11][250/276]  base_lr: 1.0000e-02 lr: 8.5502e-03  eta: 1 day, 5:46:18  time: 16.5248  data_time: 15.5724  memory: 8211  loss: 2.8069  loss_cls: 1.9938  loss_bbox: 0.8130
2024/05/05 09:03:33 - mmengine - INFO - Exp name: yolov6_l_syncbn_fast_8xb32-300e_coco_20240504_191744
2024/05/05 09:03:33 - mmengine - INFO - Saving checkpoint at 11 epochs
2024/05/05 09:04:26 - mmengine - INFO - Epoch(val) [11][ 50/552]    eta: 0:07:08  time: 0.8541  data_time: 0.8280  memory: 8186  
2024/05/05 09:05:05 - mmengine - INFO - Epoch(val) [11][100/552]    eta: 0:06:09  time: 0.7787  data_time: 0.7543  memory: 1208  
2024/05/05 09:05:23 - mmengine - INFO - Epoch(val) [11][150/552]    eta: 0:04:28  time: 0.3682  data_time: 0.3426  memory: 1208  
2024/05/05 09:05:43 - mmengine - INFO - Epoch(val) [11][200/552]    eta: 0:03:31  time: 0.3988  data_time: 0.3738  memory: 1194  
2024/05/05 09:06:01 - mmengine - INFO - Epoch(val) [11][250/552]    eta: 0:02:47  time: 0.3709  data_time: 0.3460  memory: 1194  
2024/05/05 09:06:18 - mmengine - INFO - Epoch(val) [11][300/552]    eta: 0:02:10  time: 0.3276  data_time: 0.3028  memory: 1194  
2024/05/05 09:06:36 - mmengine - INFO - Epoch(val) [11][350/552]    eta: 0:01:39  time: 0.3660  data_time: 0.3405  memory: 1196  
2024/05/05 09:06:52 - mmengine - INFO - Epoch(val) [11][400/552]    eta: 0:01:11  time: 0.3219  data_time: 0.2976  memory: 1196  
2024/05/05 09:07:09 - mmengine - INFO - Epoch(val) [11][450/552]    eta: 0:00:46  time: 0.3431  data_time: 0.3189  memory: 1196  
2024/05/05 09:07:26 - mmengine - INFO - Epoch(val) [11][500/552]    eta: 0:00:23  time: 0.3370  data_time: 0.3112  memory: 1196  
2024/05/05 09:07:43 - mmengine - INFO - Epoch(val) [11][550/552]    eta: 0:00:00  time: 0.3330  data_time: 0.3068  memory: 1196  
2024/05/05 09:07:55 - mmengine - INFO - Evaluating bbox...
2024/05/05 09:08:01 - mmengine - INFO - bbox_mAP_copypaste: 0.397 0.508 0.449 -1.000 -1.000 0.397
2024/05/05 09:08:01 - mmengine - INFO - Epoch(val) [11][552/552]    coco/bbox_mAP: 0.3970  coco/bbox_mAP_50: 0.5080  coco/bbox_mAP_75: 0.4490  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.3970  data_time: 0.4103  time: 0.4354
2024/05/05 09:22:58 - mmengine - INFO - Epoch(train) [12][ 50/276]  base_lr: 1.0000e-02 lr: 8.2318e-03  eta: 1 day, 5:24:55  time: 17.9353  data_time: 4.7773  memory: 8211  loss: 2.8511  loss_cls: 1.9891  loss_bbox: 0.8620
2024/05/05 09:35:22 - mmengine - INFO - Epoch(train) [12][100/276]  base_lr: 1.0000e-02 lr: 8.2318e-03  eta: 1 day, 5:10:58  time: 14.8702  data_time: 2.8955  memory: 8211  loss: 2.8226  loss_cls: 2.0017  loss_bbox: 0.8209
2024/05/05 09:48:23 - mmengine - INFO - Epoch(train) [12][150/276]  base_lr: 1.0000e-02 lr: 8.2318e-03  eta: 1 day, 4:58:24  time: 15.6178  data_time: 0.0006  memory: 8195  loss: 2.8771  loss_cls: 2.0212  loss_bbox: 0.8559
2024/05/05 10:02:17 - mmengine - INFO - Epoch(train) [12][200/276]  base_lr: 1.0000e-02 lr: 8.2318e-03  eta: 1 day, 4:47:39  time: 16.6878  data_time: 0.0007  memory: 8195  loss: 2.8493  loss_cls: 1.9942  loss_bbox: 0.8550
2024/05/05 10:14:44 - mmengine - INFO - Epoch(train) [12][250/276]  base_lr: 1.0000e-02 lr: 8.2318e-03  eta: 1 day, 4:33:52  time: 14.9438  data_time: 0.0007  memory: 8186  loss: 2.7909  loss_cls: 1.9916  loss_bbox: 0.7993
2024/05/05 10:18:50 - mmengine - INFO - Exp name: yolov6_l_syncbn_fast_8xb32-300e_coco_20240504_191744
2024/05/05 10:18:50 - mmengine - INFO - Saving checkpoint at 12 epochs
2024/05/05 10:19:45 - mmengine - INFO - Epoch(val) [12][ 50/552]    eta: 0:07:22  time: 0.8818  data_time: 0.8556  memory: 8186  
2024/05/05 10:20:21 - mmengine - INFO - Epoch(val) [12][100/552]    eta: 0:06:01  time: 0.7187  data_time: 0.6944  memory: 1208  
2024/05/05 10:20:39 - mmengine - INFO - Epoch(val) [12][150/552]    eta: 0:04:23  time: 0.3645  data_time: 0.3389  memory: 1208  
2024/05/05 10:20:57 - mmengine - INFO - Epoch(val) [12][200/552]    eta: 0:03:24  time: 0.3597  data_time: 0.3335  memory: 1194  
2024/05/05 10:21:15 - mmengine - INFO - Epoch(val) [12][250/552]    eta: 0:02:42  time: 0.3662  data_time: 0.3392  memory: 1194  
2024/05/05 10:21:33 - mmengine - INFO - Epoch(val) [12][300/552]    eta: 0:02:07  time: 0.3429  data_time: 0.3180  memory: 1194  
2024/05/05 10:21:50 - mmengine - INFO - Epoch(val) [12][350/552]    eta: 0:01:37  time: 0.3482  data_time: 0.3225  memory: 1196  
2024/05/05 10:22:06 - mmengine - INFO - Epoch(val) [12][400/552]    eta: 0:01:10  time: 0.3141  data_time: 0.2906  memory: 1196  
2024/05/05 10:22:23 - mmengine - INFO - Epoch(val) [12][450/552]    eta: 0:00:45  time: 0.3437  data_time: 0.3192  memory: 1196  
2024/05/05 10:22:40 - mmengine - INFO - Epoch(val) [12][500/552]    eta: 0:00:22  time: 0.3419  data_time: 0.3175  memory: 1196  
2024/05/05 10:22:57 - mmengine - INFO - Epoch(val) [12][550/552]    eta: 0:00:00  time: 0.3375  data_time: 0.3111  memory: 1196  
2024/05/05 10:23:09 - mmengine - INFO - Evaluating bbox...
2024/05/05 10:23:15 - mmengine - INFO - bbox_mAP_copypaste: 0.355 0.468 0.396 -1.000 -1.000 0.356
2024/05/05 10:23:15 - mmengine - INFO - Epoch(val) [12][552/552]    coco/bbox_mAP: 0.3550  coco/bbox_mAP_50: 0.4680  coco/bbox_mAP_75: 0.3960  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.3560  data_time: 0.4021  time: 0.4274
2024/05/05 10:38:52 - mmengine - INFO - Epoch(train) [13][ 50/276]  base_lr: 1.0000e-02 lr: 7.8892e-03  eta: 1 day, 4:14:30  time: 18.7218  data_time: 6.7012  memory: 8186  loss: 2.8285  loss_cls: 2.0058  loss_bbox: 0.8227
2024/05/05 10:51:44 - mmengine - INFO - Epoch(train) [13][100/276]  base_lr: 1.0000e-02 lr: 7.8892e-03  eta: 1 day, 4:01:35  time: 15.4492  data_time: 5.3424  memory: 8195  loss: 2.8084  loss_cls: 1.9835  loss_bbox: 0.8249
2024/05/05 11:03:23 - mmengine - INFO - Epoch(train) [13][150/276]  base_lr: 1.0000e-02 lr: 7.8892e-03  eta: 1 day, 3:46:22  time: 13.9721  data_time: 9.8373  memory: 8195  loss: 2.8348  loss_cls: 1.9831  loss_bbox: 0.8517
2024/05/05 11:15:36 - mmengine - INFO - Epoch(train) [13][200/276]  base_lr: 1.0000e-02 lr: 7.8892e-03  eta: 1 day, 3:32:19  time: 14.6645  data_time: 4.9413  memory: 8195  loss: 2.7646  loss_cls: 1.9944  loss_bbox: 0.7702
2024/05/05 11:29:10 - mmengine - INFO - Epoch(train) [13][250/276]  base_lr: 1.0000e-02 lr: 7.8892e-03  eta: 1 day, 3:20:43  time: 16.2797  data_time: 11.1351  memory: 8203  loss: 2.8058  loss_cls: 1.9893  loss_bbox: 0.8165
2024/05/05 11:33:46 - mmengine - INFO - Exp name: yolov6_l_syncbn_fast_8xb32-300e_coco_20240504_191744
2024/05/05 11:33:46 - mmengine - INFO - Saving checkpoint at 13 epochs
2024/05/05 11:34:40 - mmengine - INFO - Epoch(val) [13][ 50/552]    eta: 0:07:19  time: 0.8751  data_time: 0.8478  memory: 8178  
2024/05/05 11:35:17 - mmengine - INFO - Epoch(val) [13][100/552]    eta: 0:06:02  time: 0.7307  data_time: 0.7057  memory: 1208  
2024/05/05 11:35:34 - mmengine - INFO - Epoch(val) [13][150/552]    eta: 0:04:22  time: 0.3555  data_time: 0.3300  memory: 1208  
2024/05/05 11:35:55 - mmengine - INFO - Epoch(val) [13][200/552]    eta: 0:03:28  time: 0.4025  data_time: 0.3772  memory: 1194  
2024/05/05 11:36:13 - mmengine - INFO - Epoch(val) [13][250/552]    eta: 0:02:44  time: 0.3669  data_time: 0.3415  memory: 1194  
2024/05/05 11:36:31 - mmengine - INFO - Epoch(val) [13][300/552]    eta: 0:02:09  time: 0.3620  data_time: 0.3376  memory: 1194  
2024/05/05 11:36:49 - mmengine - INFO - Epoch(val) [13][350/552]    eta: 0:01:39  time: 0.3611  data_time: 0.3370  memory: 1196  
2024/05/05 11:37:06 - mmengine - INFO - Epoch(val) [13][400/552]    eta: 0:01:12  time: 0.3429  data_time: 0.3191  memory: 1196  
2024/05/05 11:37:23 - mmengine - INFO - Epoch(val) [13][450/552]    eta: 0:00:46  time: 0.3383  data_time: 0.3137  memory: 1196  
2024/05/05 11:37:39 - mmengine - INFO - Epoch(val) [13][500/552]    eta: 0:00:23  time: 0.3234  data_time: 0.2983  memory: 1196  
2024/05/05 11:37:57 - mmengine - INFO - Epoch(val) [13][550/552]    eta: 0:00:00  time: 0.3467  data_time: 0.3202  memory: 1196  
2024/05/05 11:38:06 - mmengine - INFO - Evaluating bbox...
2024/05/05 11:38:12 - mmengine - INFO - bbox_mAP_copypaste: 0.460 0.580 0.507 -1.000 -1.000 0.460
2024/05/05 11:38:12 - mmengine - INFO - Epoch(val) [13][552/552]    coco/bbox_mAP: 0.4600  coco/bbox_mAP_50: 0.5800  coco/bbox_mAP_75: 0.5070  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.4600  data_time: 0.4114  time: 0.4365
2024/05/05 11:38:12 - mmengine - INFO - The previous best checkpoint /media/iris/Dong/openmmlab/detection/coding/yolov6/yolov6_l_syncbn_fast_8xb32-300e_coco/best_coco_bbox_mAP_epoch_10.pth is removed
2024/05/05 11:38:15 - mmengine - INFO - The best checkpoint with 0.4600 coco/bbox_mAP at 13 epoch is saved to best_coco_bbox_mAP_epoch_13.pth.
2024/05/05 11:53:21 - mmengine - INFO - Epoch(train) [14][ 50/276]  base_lr: 1.0000e-02 lr: 7.5250e-03  eta: 1 day, 3:01:13  time: 18.0094  data_time: 15.4946  memory: 8195  loss: 2.8330  loss_cls: 2.0166  loss_bbox: 0.8163
2024/05/05 12:06:05 - mmengine - INFO - Epoch(train) [14][100/276]  base_lr: 1.0000e-02 lr: 7.5250e-03  eta: 1 day, 2:48:07  time: 15.2810  data_time: 12.1465  memory: 8186  loss: 2.7738  loss_cls: 1.9718  loss_bbox: 0.8019
2024/05/05 12:18:40 - mmengine - INFO - Epoch(train) [14][150/276]  base_lr: 1.0000e-02 lr: 7.5250e-03  eta: 1 day, 2:34:47  time: 15.1116  data_time: 14.0849  memory: 8186  loss: 2.7965  loss_cls: 1.9705  loss_bbox: 0.8260
2024/05/05 12:30:27 - mmengine - INFO - Epoch(train) [14][200/276]  base_lr: 1.0000e-02 lr: 7.5250e-03  eta: 1 day, 2:20:10  time: 14.1384  data_time: 8.7254  memory: 8195  loss: 2.6661  loss_cls: 1.9173  loss_bbox: 0.7488
2024/05/05 12:43:24 - mmengine - INFO - Epoch(train) [14][250/276]  base_lr: 1.0000e-02 lr: 7.5250e-03  eta: 1 day, 2:07:28  time: 15.5335  data_time: 11.3368  memory: 8195  loss: 2.6895  loss_cls: 1.9118  loss_bbox: 0.7777
2024/05/05 12:47:35 - mmengine - INFO - Exp name: yolov6_l_syncbn_fast_8xb32-300e_coco_20240504_191744
2024/05/05 12:47:35 - mmengine - INFO - Saving checkpoint at 14 epochs
2024/05/05 12:48:29 - mmengine - INFO - Epoch(val) [14][ 50/552]    eta: 0:07:12  time: 0.8620  data_time: 0.8359  memory: 8227  
2024/05/05 12:49:05 - mmengine - INFO - Epoch(val) [14][100/552]    eta: 0:05:58  time: 0.7244  data_time: 0.6991  memory: 1208  
2024/05/05 12:49:24 - mmengine - INFO - Epoch(val) [14][150/552]    eta: 0:04:21  time: 0.3682  data_time: 0.3437  memory: 1208  
2024/05/05 12:49:43 - mmengine - INFO - Epoch(val) [14][200/552]    eta: 0:03:25  time: 0.3820  data_time: 0.3569  memory: 1194  
2024/05/05 12:50:02 - mmengine - INFO - Epoch(val) [14][250/552]    eta: 0:02:43  time: 0.3733  data_time: 0.3480  memory: 1194  
2024/05/05 12:50:19 - mmengine - INFO - Epoch(val) [14][300/552]    eta: 0:02:08  time: 0.3428  data_time: 0.3181  memory: 1194  
2024/05/05 12:50:38 - mmengine - INFO - Epoch(val) [14][350/552]    eta: 0:01:39  time: 0.3788  data_time: 0.3539  memory: 1196  
2024/05/05 12:50:55 - mmengine - INFO - Epoch(val) [14][400/552]    eta: 0:01:11  time: 0.3408  data_time: 0.3161  memory: 1196  
2024/05/05 12:51:12 - mmengine - INFO - Epoch(val) [14][450/552]    eta: 0:00:46  time: 0.3540  data_time: 0.3308  memory: 1196  
2024/05/05 12:51:29 - mmengine - INFO - Epoch(val) [14][500/552]    eta: 0:00:23  time: 0.3239  data_time: 0.2992  memory: 1196  
2024/05/05 12:51:45 - mmengine - INFO - Epoch(val) [14][550/552]    eta: 0:00:00  time: 0.3342  data_time: 0.3087  memory: 1196  
2024/05/05 12:51:56 - mmengine - INFO - Evaluating bbox...
2024/05/05 12:52:02 - mmengine - INFO - bbox_mAP_copypaste: 0.471 0.578 0.525 -1.000 -1.000 0.471
2024/05/05 12:52:02 - mmengine - INFO - Epoch(val) [14][552/552]    coco/bbox_mAP: 0.4710  coco/bbox_mAP_50: 0.5780  coco/bbox_mAP_75: 0.5250  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.4710  data_time: 0.4085  time: 0.4335
2024/05/05 12:52:02 - mmengine - INFO - The previous best checkpoint /media/iris/Dong/openmmlab/detection/coding/yolov6/yolov6_l_syncbn_fast_8xb32-300e_coco/best_coco_bbox_mAP_epoch_13.pth is removed
2024/05/05 12:52:05 - mmengine - INFO - The best checkpoint with 0.4710 coco/bbox_mAP at 14 epoch is saved to best_coco_bbox_mAP_epoch_14.pth.
2024/05/05 13:07:10 - mmengine - INFO - Epoch(train) [15][ 50/276]  base_lr: 1.0000e-02 lr: 7.1420e-03  eta: 1 day, 1:47:24  time: 18.0019  data_time: 12.9605  memory: 8203  loss: 2.7555  loss_cls: 1.9683  loss_bbox: 0.7872
2024/05/05 13:20:25 - mmengine - INFO - Epoch(train) [15][100/276]  base_lr: 1.0000e-02 lr: 7.1420e-03  eta: 1 day, 1:35:09  time: 15.9015  data_time: 13.1175  memory: 8178  loss: 2.7423  loss_cls: 1.9634  loss_bbox: 0.7789
2024/05/05 13:29:07 - mmengine - INFO - Exp name: yolov6_l_syncbn_fast_8xb32-300e_coco_20240504_191744
2024/05/05 13:32:50 - mmengine - INFO - Epoch(train) [15][150/276]  base_lr: 1.0000e-02 lr: 7.1420e-03  eta: 1 day, 1:21:39  time: 14.8956  data_time: 13.9991  memory: 8203  loss: 2.7175  loss_cls: 1.9425  loss_bbox: 0.7750
2024/05/05 13:45:23 - mmengine - INFO - Epoch(train) [15][200/276]  base_lr: 1.0000e-02 lr: 7.1420e-03  eta: 1 day, 1:08:23  time: 15.0601  data_time: 14.6606  memory: 8178  loss: 2.7177  loss_cls: 1.9570  loss_bbox: 0.7607
2024/05/05 13:58:50 - mmengine - INFO - Epoch(train) [15][250/276]  base_lr: 1.0000e-02 lr: 7.1420e-03  eta: 1 day, 0:56:24  time: 16.1423  data_time: 15.5715  memory: 8195  loss: 2.6696  loss_cls: 1.9306  loss_bbox: 0.7390
2024/05/05 14:02:29 - mmengine - INFO - Exp name: yolov6_l_syncbn_fast_8xb32-300e_coco_20240504_191744
2024/05/05 14:02:29 - mmengine - INFO - Saving checkpoint at 15 epochs
2024/05/05 14:03:23 - mmengine - INFO - Epoch(val) [15][ 50/552]    eta: 0:07:25  time: 0.8869  data_time: 0.8614  memory: 8195  
2024/05/05 14:04:02 - mmengine - INFO - Epoch(val) [15][100/552]    eta: 0:06:15  time: 0.7730  data_time: 0.7489  memory: 1208  
2024/05/05 14:04:20 - mmengine - INFO - Epoch(val) [15][150/552]    eta: 0:04:30  time: 0.3590  data_time: 0.3345  memory: 1208  
2024/05/05 14:04:39 - mmengine - INFO - Epoch(val) [15][200/552]    eta: 0:03:31  time: 0.3820  data_time: 0.3573  memory: 1194  
2024/05/05 14:04:57 - mmengine - INFO - Epoch(val) [15][250/552]    eta: 0:02:46  time: 0.3600  data_time: 0.3359  memory: 1194  
2024/05/05 14:05:14 - mmengine - INFO - Epoch(val) [15][300/552]    eta: 0:02:10  time: 0.3362  data_time: 0.3111  memory: 1194  
2024/05/05 14:05:32 - mmengine - INFO - Epoch(val) [15][350/552]    eta: 0:01:39  time: 0.3601  data_time: 0.3354  memory: 1196  
2024/05/05 14:05:48 - mmengine - INFO - Epoch(val) [15][400/552]    eta: 0:01:11  time: 0.3300  data_time: 0.3062  memory: 1196  
2024/05/05 14:06:06 - mmengine - INFO - Epoch(val) [15][450/552]    eta: 0:00:46  time: 0.3474  data_time: 0.3226  memory: 1196  
2024/05/05 14:06:23 - mmengine - INFO - Epoch(val) [15][500/552]    eta: 0:00:23  time: 0.3504  data_time: 0.3261  memory: 1196  
2024/05/05 14:06:39 - mmengine - INFO - Epoch(val) [15][550/552]    eta: 0:00:00  time: 0.3253  data_time: 0.3010  memory: 1196  
2024/05/05 14:06:49 - mmengine - INFO - Evaluating bbox...
2024/05/05 14:06:55 - mmengine - INFO - bbox_mAP_copypaste: 0.480 0.603 0.530 -1.000 -1.000 0.480
2024/05/05 14:06:55 - mmengine - INFO - Epoch(val) [15][552/552]    coco/bbox_mAP: 0.4800  coco/bbox_mAP_50: 0.6030  coco/bbox_mAP_75: 0.5300  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.4800  data_time: 0.4121  time: 0.4366
2024/05/05 14:06:55 - mmengine - INFO - The previous best checkpoint /media/iris/Dong/openmmlab/detection/coding/yolov6/yolov6_l_syncbn_fast_8xb32-300e_coco/best_coco_bbox_mAP_epoch_14.pth is removed
2024/05/05 14:06:58 - mmengine - INFO - The best checkpoint with 0.4800 coco/bbox_mAP at 15 epoch is saved to best_coco_bbox_mAP_epoch_15.pth.
2024/05/05 14:21:44 - mmengine - INFO - Epoch(train) [16][ 50/276]  base_lr: 1.0000e-02 lr: 6.7430e-03  eta: 1 day, 0:35:12  time: 17.6155  data_time: 15.8965  memory: 8195  loss: 2.6686  loss_cls: 1.9140  loss_bbox: 0.7546
2024/05/05 14:33:50 - mmengine - INFO - Epoch(train) [16][100/276]  base_lr: 1.0000e-02 lr: 6.7430e-03  eta: 1 day, 0:21:22  time: 14.5066  data_time: 8.0471  memory: 8203  loss: 2.7418  loss_cls: 1.9852  loss_bbox: 0.7566
2024/05/05 14:46:10 - mmengine - INFO - Epoch(train) [16][150/276]  base_lr: 1.0000e-02 lr: 6.7430e-03  eta: 1 day, 0:07:53  time: 14.8043  data_time: 7.2288  memory: 8195  loss: 2.7469  loss_cls: 1.9662  loss_bbox: 0.7808
2024/05/05 15:00:12 - mmengine - INFO - Epoch(train) [16][200/276]  base_lr: 1.0000e-02 lr: 6.7430e-03  eta: 23:56:38  time: 16.8389  data_time: 13.3156  memory: 8186  loss: 2.6592  loss_cls: 1.8965  loss_bbox: 0.7627
2024/05/05 15:12:45 - mmengine - INFO - Epoch(train) [16][250/276]  base_lr: 1.0000e-02 lr: 6.7430e-03  eta: 23:43:26  time: 15.0556  data_time: 13.6153  memory: 8170  loss: 2.6844  loss_cls: 1.9473  loss_bbox: 0.7371
2024/05/05 15:16:09 - mmengine - INFO - Exp name: yolov6_l_syncbn_fast_8xb32-300e_coco_20240504_191744
2024/05/05 15:16:09 - mmengine - INFO - Saving checkpoint at 16 epochs
2024/05/05 15:17:01 - mmengine - INFO - Epoch(val) [16][ 50/552]    eta: 0:07:01  time: 0.8388  data_time: 0.8124  memory: 8186  
2024/05/05 15:17:38 - mmengine - INFO - Epoch(val) [16][100/552]    eta: 0:06:00  time: 0.7567  data_time: 0.7324  memory: 1208  
2024/05/05 15:17:59 - mmengine - INFO - Epoch(val) [16][150/552]    eta: 0:04:28  time: 0.4091  data_time: 0.3848  memory: 1208  
2024/05/05 15:18:17 - mmengine - INFO - Epoch(val) [16][200/552]    eta: 0:03:29  time: 0.3725  data_time: 0.3463  memory: 1194  
2024/05/05 15:18:36 - mmengine - INFO - Epoch(val) [16][250/552]    eta: 0:02:45  time: 0.3615  data_time: 0.3364  memory: 1194  
2024/05/05 15:18:53 - mmengine - INFO - Epoch(val) [16][300/552]    eta: 0:02:09  time: 0.3434  data_time: 0.3193  memory: 1194  
2024/05/05 15:19:11 - mmengine - INFO - Epoch(val) [16][350/552]    eta: 0:01:39  time: 0.3732  data_time: 0.3490  memory: 1196  
2024/05/05 15:19:29 - mmengine - INFO - Epoch(val) [16][400/552]    eta: 0:01:12  time: 0.3432  data_time: 0.3198  memory: 1196  
2024/05/05 15:19:46 - mmengine - INFO - Epoch(val) [16][450/552]    eta: 0:00:47  time: 0.3523  data_time: 0.3286  memory: 1196  
2024/05/05 15:20:04 - mmengine - INFO - Epoch(val) [16][500/552]    eta: 0:00:23  time: 0.3631  data_time: 0.3388  memory: 1196  
2024/05/05 15:20:22 - mmengine - INFO - Epoch(val) [16][550/552]    eta: 0:00:00  time: 0.3613  data_time: 0.3380  memory: 1196  
2024/05/05 15:20:32 - mmengine - INFO - Evaluating bbox...
2024/05/05 15:20:38 - mmengine - INFO - bbox_mAP_copypaste: 0.497 0.609 0.546 -1.000 -1.000 0.497
2024/05/05 15:20:38 - mmengine - INFO - Epoch(val) [16][552/552]    coco/bbox_mAP: 0.4970  coco/bbox_mAP_50: 0.6090  coco/bbox_mAP_75: 0.5460  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.4970  data_time: 0.4173  time: 0.4418
2024/05/05 15:20:38 - mmengine - INFO - The previous best checkpoint /media/iris/Dong/openmmlab/detection/coding/yolov6/yolov6_l_syncbn_fast_8xb32-300e_coco/best_coco_bbox_mAP_epoch_15.pth is removed
2024/05/05 15:20:42 - mmengine - INFO - The best checkpoint with 0.4970 coco/bbox_mAP at 16 epoch is saved to best_coco_bbox_mAP_epoch_16.pth.
2024/05/05 15:35:29 - mmengine - INFO - Epoch(train) [17][ 50/276]  base_lr: 1.0000e-02 lr: 6.3312e-03  eta: 23:22:12  time: 17.6462  data_time: 11.1286  memory: 8186  loss: 2.6787  loss_cls: 1.9270  loss_bbox: 0.7517
2024/05/05 15:48:41 - mmengine - INFO - Epoch(train) [17][100/276]  base_lr: 1.0000e-02 lr: 6.3312e-03  eta: 23:09:51  time: 15.8485  data_time: 13.8994  memory: 8195  loss: 2.6704  loss_cls: 1.9150  loss_bbox: 0.7555
2024/05/05 16:02:28 - mmengine - INFO - Epoch(train) [17][150/276]  base_lr: 1.0000e-02 lr: 6.3312e-03  eta: 22:58:10  time: 16.5409  data_time: 12.3667  memory: 8195  loss: 2.6607  loss_cls: 1.9114  loss_bbox: 0.7493
2024/05/05 16:14:14 - mmengine - INFO - Epoch(train) [17][200/276]  base_lr: 1.0000e-02 lr: 6.3312e-03  eta: 22:44:06  time: 14.1070  data_time: 13.1628  memory: 8195  loss: 2.6422  loss_cls: 1.8932  loss_bbox: 0.7490
2024/05/05 16:26:42 - mmengine - INFO - Epoch(train) [17][250/276]  base_lr: 1.0000e-02 lr: 6.3312e-03  eta: 22:30:53  time: 14.9751  data_time: 13.3152  memory: 8186  loss: 2.6254  loss_cls: 1.8851  loss_bbox: 0.7403
2024/05/05 16:31:10 - mmengine - INFO - Exp name: yolov6_l_syncbn_fast_8xb32-300e_coco_20240504_191744
2024/05/05 16:31:10 - mmengine - INFO - Saving checkpoint at 17 epochs
2024/05/05 16:32:02 - mmengine - INFO - Epoch(val) [17][ 50/552]    eta: 0:06:58  time: 0.8345  data_time: 0.8075  memory: 8195  
2024/05/05 16:32:42 - mmengine - INFO - Epoch(val) [17][100/552]    eta: 0:06:07  time: 0.7907  data_time: 0.7666  memory: 1208  
2024/05/05 16:33:00 - mmengine - INFO - Epoch(val) [17][150/552]    eta: 0:04:27  time: 0.3681  data_time: 0.3425  memory: 1208  
2024/05/05 16:33:18 - mmengine - INFO - Epoch(val) [17][200/552]    eta: 0:03:27  time: 0.3604  data_time: 0.3344  memory: 1194  
2024/05/05 16:33:36 - mmengine - INFO - Epoch(val) [17][250/552]    eta: 0:02:44  time: 0.3652  data_time: 0.3400  memory: 1194  
2024/05/05 16:33:54 - mmengine - INFO - Epoch(val) [17][300/552]    eta: 0:02:09  time: 0.3560  data_time: 0.3320  memory: 1194  
2024/05/05 16:34:13 - mmengine - INFO - Epoch(val) [17][350/552]    eta: 0:01:39  time: 0.3716  data_time: 0.3465  memory: 1196  
2024/05/05 16:34:30 - mmengine - INFO - Epoch(val) [17][400/552]    eta: 0:01:11  time: 0.3331  data_time: 0.3085  memory: 1196  
2024/05/05 16:34:46 - mmengine - INFO - Epoch(val) [17][450/552]    eta: 0:00:46  time: 0.3208  data_time: 0.2952  memory: 1196  
2024/05/05 16:35:03 - mmengine - INFO - Epoch(val) [17][500/552]    eta: 0:00:23  time: 0.3506  data_time: 0.3267  memory: 1196  
2024/05/05 16:35:20 - mmengine - INFO - Epoch(val) [17][550/552]    eta: 0:00:00  time: 0.3352  data_time: 0.3105  memory: 1196  
2024/05/05 16:35:28 - mmengine - INFO - Evaluating bbox...
2024/05/05 16:35:34 - mmengine - INFO - bbox_mAP_copypaste: 0.495 0.609 0.552 -1.000 -1.000 0.495
2024/05/05 16:35:34 - mmengine - INFO - Epoch(val) [17][552/552]    coco/bbox_mAP: 0.4950  coco/bbox_mAP_50: 0.6090  coco/bbox_mAP_75: 0.5520  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.4950  data_time: 0.4100  time: 0.4351
2024/05/05 16:51:12 - mmengine - INFO - Epoch(train) [18][ 50/276]  base_lr: 1.0000e-02 lr: 5.9096e-03  eta: 22:12:04  time: 18.7589  data_time: 12.4085  memory: 8186  loss: 2.5991  loss_cls: 1.8574  loss_bbox: 0.7417
2024/05/05 17:04:01 - mmengine - INFO - Epoch(train) [18][100/276]  base_lr: 1.0000e-02 lr: 5.9096e-03  eta: 21:59:14  time: 15.3749  data_time: 12.2708  memory: 8203  loss: 2.6639  loss_cls: 1.9141  loss_bbox: 0.7498
2024/05/05 17:16:10 - mmengine - INFO - Epoch(train) [18][150/276]  base_lr: 1.0000e-02 lr: 5.9096e-03  eta: 21:45:42  time: 14.5704  data_time: 12.0271  memory: 8178  loss: 2.5849  loss_cls: 1.8846  loss_bbox: 0.7004
2024/05/05 17:27:59 - mmengine - INFO - Epoch(train) [18][200/276]  base_lr: 1.0000e-02 lr: 5.9096e-03  eta: 21:31:52  time: 14.1953  data_time: 2.4200  memory: 8195  loss: 2.5879  loss_cls: 1.8734  loss_bbox: 0.7146
2024/05/05 17:41:16 - mmengine - INFO - Epoch(train) [18][250/276]  base_lr: 1.0000e-02 lr: 5.9096e-03  eta: 21:19:32  time: 15.9394  data_time: 12.2117  memory: 8186  loss: 2.6339  loss_cls: 1.9017  loss_bbox: 0.7321
2024/05/05 17:45:16 - mmengine - INFO - Exp name: yolov6_l_syncbn_fast_8xb32-300e_coco_20240504_191744
2024/05/05 17:45:16 - mmengine - INFO - Saving checkpoint at 18 epochs
2024/05/05 17:46:09 - mmengine - INFO - Epoch(val) [18][ 50/552]    eta: 0:07:11  time: 0.8593  data_time: 0.8338  memory: 8186  
2024/05/05 17:46:49 - mmengine - INFO - Epoch(val) [18][100/552]    eta: 0:06:13  time: 0.7945  data_time: 0.7686  memory: 1208  
2024/05/05 17:47:07 - mmengine - INFO - Epoch(val) [18][150/552]    eta: 0:04:30  time: 0.3621  data_time: 0.3386  memory: 1208  
2024/05/05 17:47:26 - mmengine - INFO - Epoch(val) [18][200/552]    eta: 0:03:30  time: 0.3806  data_time: 0.3568  memory: 1194  
2024/05/05 17:47:44 - mmengine - INFO - Epoch(val) [18][250/552]    eta: 0:02:46  time: 0.3633  data_time: 0.3383  memory: 1194  
2024/05/05 17:48:01 - mmengine - INFO - Epoch(val) [18][300/552]    eta: 0:02:09  time: 0.3329  data_time: 0.3074  memory: 1194  
2024/05/05 17:48:19 - mmengine - INFO - Epoch(val) [18][350/552]    eta: 0:01:39  time: 0.3675  data_time: 0.3420  memory: 1196  
2024/05/05 17:48:35 - mmengine - INFO - Epoch(val) [18][400/552]    eta: 0:01:11  time: 0.3196  data_time: 0.2938  memory: 1196  
2024/05/05 17:48:52 - mmengine - INFO - Epoch(val) [18][450/552]    eta: 0:00:46  time: 0.3370  data_time: 0.3130  memory: 1196  
2024/05/05 17:49:09 - mmengine - INFO - Epoch(val) [18][500/552]    eta: 0:00:23  time: 0.3436  data_time: 0.3187  memory: 1196  
2024/05/05 17:49:27 - mmengine - INFO - Epoch(val) [18][550/552]    eta: 0:00:00  time: 0.3570  data_time: 0.3326  memory: 1196  
2024/05/05 17:49:38 - mmengine - INFO - Evaluating bbox...
2024/05/05 17:49:43 - mmengine - INFO - bbox_mAP_copypaste: 0.512 0.622 0.557 -1.000 -1.000 0.512
2024/05/05 17:49:43 - mmengine - INFO - Epoch(val) [18][552/552]    coco/bbox_mAP: 0.5120  coco/bbox_mAP_50: 0.6220  coco/bbox_mAP_75: 0.5570  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.5120  data_time: 0.4116  time: 0.4365
2024/05/05 17:49:44 - mmengine - INFO - The previous best checkpoint /media/iris/Dong/openmmlab/detection/coding/yolov6/yolov6_l_syncbn_fast_8xb32-300e_coco/best_coco_bbox_mAP_epoch_16.pth is removed
2024/05/05 17:49:47 - mmengine - INFO - The best checkpoint with 0.5120 coco/bbox_mAP at 18 epoch is saved to best_coco_bbox_mAP_epoch_18.pth.
2024/05/05 17:59:27 - mmengine - INFO - Exp name: yolov6_l_syncbn_fast_8xb32-300e_coco_20240504_191744
2024/05/05 18:05:21 - mmengine - INFO - Epoch(train) [19][ 50/276]  base_lr: 1.0000e-02 lr: 5.4814e-03  eta: 21:00:05  time: 18.5999  data_time: 15.2242  memory: 8186  loss: 2.5687  loss_cls: 1.8595  loss_bbox: 0.7091
2024/05/05 18:16:35 - mmengine - INFO - Epoch(train) [19][100/276]  base_lr: 1.0000e-02 lr: 5.4814e-03  eta: 20:45:45  time: 13.4731  data_time: 12.8083  memory: 8211  loss: 2.6155  loss_cls: 1.8759  loss_bbox: 0.7397
2024/05/05 18:30:49 - mmengine - INFO - Epoch(train) [19][150/276]  base_lr: 1.0000e-02 lr: 5.4814e-03  eta: 20:34:19  time: 17.0836  data_time: 16.6852  memory: 8186  loss: 2.6431  loss_cls: 1.8904  loss_bbox: 0.7527
2024/05/05 18:41:48 - mmengine - INFO - Epoch(train) [19][200/276]  base_lr: 1.0000e-02 lr: 5.4814e-03  eta: 20:19:49  time: 13.1746  data_time: 12.7522  memory: 8178  loss: 2.6074  loss_cls: 1.8972  loss_bbox: 0.7102
2024/05/05 18:54:46 - mmengine - INFO - Epoch(train) [19][250/276]  base_lr: 1.0000e-02 lr: 5.4814e-03  eta: 20:07:11  time: 15.5655  data_time: 11.8384  memory: 8195  loss: 2.5689  loss_cls: 1.8512  loss_bbox: 0.7177
2024/05/05 18:59:49 - mmengine - INFO - Exp name: yolov6_l_syncbn_fast_8xb32-300e_coco_20240504_191744
2024/05/05 18:59:49 - mmengine - INFO - Saving checkpoint at 19 epochs
2024/05/05 19:00:45 - mmengine - INFO - Epoch(val) [19][ 50/552]    eta: 0:07:28  time: 0.8942  data_time: 0.8688  memory: 8178  
2024/05/05 19:01:22 - mmengine - INFO - Epoch(val) [19][100/552]    eta: 0:06:07  time: 0.7334  data_time: 0.7092  memory: 1208  
2024/05/05 19:01:40 - mmengine - INFO - Epoch(val) [19][150/552]    eta: 0:04:26  time: 0.3578  data_time: 0.3325  memory: 1208  
2024/05/05 19:02:00 - mmengine - INFO - Epoch(val) [19][200/552]    eta: 0:03:29  time: 0.3931  data_time: 0.3689  memory: 1194  
2024/05/05 19:02:18 - mmengine - INFO - Epoch(val) [19][250/552]    eta: 0:02:45  time: 0.3587  data_time: 0.3328  memory: 1194  
2024/05/05 19:02:36 - mmengine - INFO - Epoch(val) [19][300/552]    eta: 0:02:10  time: 0.3618  data_time: 0.3371  memory: 1194  
2024/05/05 19:02:54 - mmengine - INFO - Epoch(val) [19][350/552]    eta: 0:01:39  time: 0.3613  data_time: 0.3371  memory: 1196  
2024/05/05 19:03:11 - mmengine - INFO - Epoch(val) [19][400/552]    eta: 0:01:12  time: 0.3377  data_time: 0.3137  memory: 1196  
2024/05/05 19:03:27 - mmengine - INFO - Epoch(val) [19][450/552]    eta: 0:00:46  time: 0.3369  data_time: 0.3119  memory: 1196  
2024/05/05 19:03:44 - mmengine - INFO - Epoch(val) [19][500/552]    eta: 0:00:23  time: 0.3333  data_time: 0.3087  memory: 1196  
2024/05/05 19:04:01 - mmengine - INFO - Epoch(val) [19][550/552]    eta: 0:00:00  time: 0.3427  data_time: 0.3177  memory: 1196  
2024/05/05 19:04:10 - mmengine - INFO - Evaluating bbox...
2024/05/05 19:04:16 - mmengine - INFO - bbox_mAP_copypaste: 0.513 0.633 0.564 -1.000 -1.000 0.513
2024/05/05 19:04:16 - mmengine - INFO - Epoch(val) [19][552/552]    coco/bbox_mAP: 0.5130  coco/bbox_mAP_50: 0.6330  coco/bbox_mAP_75: 0.5640  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.5130  data_time: 0.4120  time: 0.4368
2024/05/05 19:04:16 - mmengine - INFO - The previous best checkpoint /media/iris/Dong/openmmlab/detection/coding/yolov6/yolov6_l_syncbn_fast_8xb32-300e_coco/best_coco_bbox_mAP_epoch_18.pth is removed
2024/05/05 19:04:20 - mmengine - INFO - The best checkpoint with 0.5130 coco/bbox_mAP at 19 epoch is saved to best_coco_bbox_mAP_epoch_19.pth.
2024/05/05 19:19:32 - mmengine - INFO - Epoch(train) [20][ 50/276]  base_lr: 1.0000e-02 lr: 5.0500e-03  eta: 19:48:23  time: 18.1588  data_time: 15.9067  memory: 8178  loss: 2.6231  loss_cls: 1.8905  loss_bbox: 0.7325
2024/05/05 19:33:40 - mmengine - INFO - Epoch(train) [20][100/276]  base_lr: 1.0000e-02 lr: 5.0500e-03  eta: 19:36:44  time: 16.9665  data_time: 10.8837  memory: 8195  loss: 2.5984  loss_cls: 1.9011  loss_bbox: 0.6972
2024/05/05 19:45:13 - mmengine - INFO - Epoch(train) [20][150/276]  base_lr: 1.0000e-02 lr: 5.0500e-03  eta: 19:22:51  time: 13.8558  data_time: 0.1027  memory: 8186  loss: 2.5343  loss_cls: 1.8370  loss_bbox: 0.6974
2024/05/05 19:57:16 - mmengine - INFO - Epoch(train) [20][200/276]  base_lr: 1.0000e-02 lr: 5.0500e-03  eta: 19:09:26  time: 14.4639  data_time: 0.0007  memory: 8211  loss: 2.5055  loss_cls: 1.8275  loss_bbox: 0.6779
2024/05/05 20:10:22 - mmengine - INFO - Epoch(train) [20][250/276]  base_lr: 1.0000e-02 lr: 5.0500e-03  eta: 18:56:53  time: 15.7061  data_time: 0.0009  memory: 8203  loss: 2.5332  loss_cls: 1.8203  loss_bbox: 0.7129
2024/05/05 20:14:48 - mmengine - INFO - Exp name: yolov6_l_syncbn_fast_8xb32-300e_coco_20240504_191744
2024/05/05 20:14:48 - mmengine - INFO - Saving checkpoint at 20 epochs
2024/05/05 20:15:41 - mmengine - INFO - Epoch(val) [20][ 50/552]    eta: 0:07:14  time: 0.8654  data_time: 0.8380  memory: 8186  
2024/05/05 20:16:19 - mmengine - INFO - Epoch(val) [20][100/552]    eta: 0:06:06  time: 0.7563  data_time: 0.7311  memory: 1208  
2024/05/05 20:16:37 - mmengine - INFO - Epoch(val) [20][150/552]    eta: 0:04:27  time: 0.3768  data_time: 0.3517  memory: 1208  
2024/05/05 20:16:57 - mmengine - INFO - Epoch(val) [20][200/552]    eta: 0:03:30  time: 0.3907  data_time: 0.3665  memory: 1194  
2024/05/05 20:17:15 - mmengine - INFO - Epoch(val) [20][250/552]    eta: 0:02:46  time: 0.3667  data_time: 0.3407  memory: 1194  
2024/05/05 20:17:32 - mmengine - INFO - Epoch(val) [20][300/552]    eta: 0:02:10  time: 0.3397  data_time: 0.3144  memory: 1194  
2024/05/05 20:17:50 - mmengine - INFO - Epoch(val) [20][350/552]    eta: 0:01:39  time: 0.3646  data_time: 0.3394  memory: 1196  
2024/05/05 20:18:06 - mmengine - INFO - Epoch(val) [20][400/552]    eta: 0:01:11  time: 0.3198  data_time: 0.2958  memory: 1196  
2024/05/05 20:18:23 - mmengine - INFO - Epoch(val) [20][450/552]    eta: 0:00:46  time: 0.3381  data_time: 0.3144  memory: 1196  
2024/05/05 20:18:42 - mmengine - INFO - Epoch(val) [20][500/552]    eta: 0:00:23  time: 0.3652  data_time: 0.3410  memory: 1196  
2024/05/05 20:18:58 - mmengine - INFO - Epoch(val) [20][550/552]    eta: 0:00:00  time: 0.3326  data_time: 0.3061  memory: 1196  
2024/05/05 20:19:09 - mmengine - INFO - Evaluating bbox...
2024/05/05 20:19:15 - mmengine - INFO - bbox_mAP_copypaste: 0.525 0.630 0.580 -1.000 -1.000 0.526
2024/05/05 20:19:15 - mmengine - INFO - Epoch(val) [20][552/552]    coco/bbox_mAP: 0.5250  coco/bbox_mAP_50: 0.6300  coco/bbox_mAP_75: 0.5800  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.5260  data_time: 0.4127  time: 0.4378
2024/05/05 20:19:15 - mmengine - INFO - The previous best checkpoint /media/iris/Dong/openmmlab/detection/coding/yolov6/yolov6_l_syncbn_fast_8xb32-300e_coco/best_coco_bbox_mAP_epoch_19.pth is removed
2024/05/05 20:19:18 - mmengine - INFO - The best checkpoint with 0.5250 coco/bbox_mAP at 20 epoch is saved to best_coco_bbox_mAP_epoch_20.pth.
2024/05/05 20:34:56 - mmengine - INFO - Epoch(train) [21][ 50/276]  base_lr: 1.0000e-02 lr: 4.6186e-03  eta: 18:37:52  time: 18.6689  data_time: 15.1972  memory: 8195  loss: 2.5249  loss_cls: 1.8555  loss_bbox: 0.6695
2024/05/05 20:47:12 - mmengine - INFO - Epoch(train) [21][100/276]  base_lr: 1.0000e-02 lr: 4.6186e-03  eta: 18:24:40  time: 14.7342  data_time: 5.7484  memory: 8186  loss: 2.5280  loss_cls: 1.8565  loss_bbox: 0.6715
2024/05/05 21:00:22 - mmengine - INFO - Epoch(train) [21][150/276]  base_lr: 1.0000e-02 lr: 4.6186e-03  eta: 18:12:08  time: 15.7885  data_time: 0.6339  memory: 8170  loss: 2.4997  loss_cls: 1.8199  loss_bbox: 0.6798
2024/05/05 21:12:45 - mmengine - INFO - Epoch(train) [21][200/276]  base_lr: 1.0000e-02 lr: 4.6186e-03  eta: 17:59:02  time: 14.8692  data_time: 0.2102  memory: 8227  loss: 2.5360  loss_cls: 1.8584  loss_bbox: 0.6775
2024/05/05 21:27:04 - mmengine - INFO - Epoch(train) [21][250/276]  base_lr: 1.0000e-02 lr: 4.6186e-03  eta: 17:47:19  time: 17.1638  data_time: 0.8870  memory: 8211  loss: 2.5370  loss_cls: 1.8651  loss_bbox: 0.6720
2024/05/05 21:30:50 - mmengine - INFO - Exp name: yolov6_l_syncbn_fast_8xb32-300e_coco_20240504_191744
2024/05/05 21:30:50 - mmengine - INFO - Saving checkpoint at 21 epochs
2024/05/05 21:31:43 - mmengine - INFO - Epoch(val) [21][ 50/552]    eta: 0:07:12  time: 0.8622  data_time: 0.8360  memory: 8186  
2024/05/05 21:32:22 - mmengine - INFO - Epoch(val) [21][100/552]    eta: 0:06:10  time: 0.7771  data_time: 0.7534  memory: 1208  
2024/05/05 21:32:41 - mmengine - INFO - Epoch(val) [21][150/552]    eta: 0:04:29  time: 0.3715  data_time: 0.3469  memory: 1208  
2024/05/05 21:33:00 - mmengine - INFO - Epoch(val) [21][200/552]    eta: 0:03:30  time: 0.3792  data_time: 0.3525  memory: 1194  
2024/05/05 21:33:18 - mmengine - INFO - Epoch(val) [21][250/552]    eta: 0:02:46  time: 0.3653  data_time: 0.3407  memory: 1194  
2024/05/05 21:33:36 - mmengine - INFO - Epoch(val) [21][300/552]    eta: 0:02:10  time: 0.3584  data_time: 0.3336  memory: 1194  
2024/05/05 21:33:54 - mmengine - INFO - Epoch(val) [21][350/552]    eta: 0:01:40  time: 0.3656  data_time: 0.3413  memory: 1196  
2024/05/05 21:34:11 - mmengine - INFO - Epoch(val) [21][400/552]    eta: 0:01:12  time: 0.3428  data_time: 0.3197  memory: 1196  
2024/05/05 21:34:27 - mmengine - INFO - Epoch(val) [21][450/552]    eta: 0:00:46  time: 0.3179  data_time: 0.2937  memory: 1196  
2024/05/05 21:34:45 - mmengine - INFO - Epoch(val) [21][500/552]    eta: 0:00:23  time: 0.3553  data_time: 0.3301  memory: 1196  
2024/05/05 21:35:02 - mmengine - INFO - Epoch(val) [21][550/552]    eta: 0:00:00  time: 0.3368  data_time: 0.3107  memory: 1196  
2024/05/05 21:35:10 - mmengine - INFO - Evaluating bbox...
2024/05/05 21:35:16 - mmengine - INFO - bbox_mAP_copypaste: 0.549 0.664 0.598 -1.000 -1.000 0.549
2024/05/05 21:35:16 - mmengine - INFO - Epoch(val) [21][552/552]    coco/bbox_mAP: 0.5490  coco/bbox_mAP_50: 0.6640  coco/bbox_mAP_75: 0.5980  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.5490  data_time: 0.4142  time: 0.4390
2024/05/05 21:35:16 - mmengine - INFO - The previous best checkpoint /media/iris/Dong/openmmlab/detection/coding/yolov6/yolov6_l_syncbn_fast_8xb32-300e_coco/best_coco_bbox_mAP_epoch_20.pth is removed
2024/05/05 21:35:19 - mmengine - INFO - The best checkpoint with 0.5490 coco/bbox_mAP at 21 epoch is saved to best_coco_bbox_mAP_epoch_21.pth.
2024/05/05 21:35:24 - mmengine - INFO - Switch pipeline now!
2024/05/05 21:39:18 - mmengine - INFO - Epoch(train) [22][ 50/276]  base_lr: 1.0000e-02 lr: 4.1904e-03  eta: 17:19:36  time: 4.6815  data_time: 3.8903  memory: 8168  loss: 2.3644  loss_cls: 1.7396  loss_bbox: 0.6248
2024/05/05 21:43:00 - mmengine - INFO - Epoch(train) [22][100/276]  base_lr: 1.0000e-02 lr: 4.1904e-03  eta: 17:00:43  time: 4.4451  data_time: 0.2229  memory: 8168  loss: 2.4896  loss_cls: 1.8270  loss_bbox: 0.6626
2024/05/05 21:46:29 - mmengine - INFO - Epoch(train) [22][150/276]  base_lr: 1.0000e-02 lr: 4.1904e-03  eta: 16:41:57  time: 4.1799  data_time: 1.3129  memory: 8168  loss: 2.4904  loss_cls: 1.8276  loss_bbox: 0.6628
2024/05/05 21:50:29 - mmengine - INFO - Epoch(train) [22][200/276]  base_lr: 1.0000e-02 lr: 4.1904e-03  eta: 16:23:46  time: 4.8074  data_time: 2.4074  memory: 8168  loss: 2.2703  loss_cls: 1.6724  loss_bbox: 0.5980
2024/05/05 21:50:31 - mmengine - INFO - Exp name: yolov6_l_syncbn_fast_8xb32-300e_coco_20240504_191744
2024/05/05 21:54:27 - mmengine - INFO - Epoch(train) [22][250/276]  base_lr: 1.0000e-02 lr: 4.1904e-03  eta: 16:05:48  time: 4.7499  data_time: 1.1508  memory: 8168  loss: 2.2747  loss_cls: 1.6677  loss_bbox: 0.6070
2024/05/05 21:55:49 - mmengine - INFO - Exp name: yolov6_l_syncbn_fast_8xb32-300e_coco_20240504_191744
2024/05/05 21:55:49 - mmengine - INFO - Saving checkpoint at 22 epochs
2024/05/05 21:56:32 - mmengine - INFO - Epoch(val) [22][ 50/552]    eta: 0:06:30  time: 0.7784  data_time: 0.7535  memory: 8168  
2024/05/05 21:57:09 - mmengine - INFO - Epoch(val) [22][100/552]    eta: 0:05:42  time: 0.7352  data_time: 0.7105  memory: 1208  
2024/05/05 21:57:27 - mmengine - INFO - Epoch(val) [22][150/552]    eta: 0:04:11  time: 0.3618  data_time: 0.3381  memory: 1208  
2024/05/05 21:57:45 - mmengine - INFO - Epoch(val) [22][200/552]    eta: 0:03:16  time: 0.3615  data_time: 0.3377  memory: 1194  
2024/05/05 21:58:03 - mmengine - INFO - Epoch(val) [22][250/552]    eta: 0:02:36  time: 0.3555  data_time: 0.3308  memory: 1194  
2024/05/05 21:58:21 - mmengine - INFO - Epoch(val) [22][300/552]    eta: 0:02:03  time: 0.3509  data_time: 0.3250  memory: 1194  
2024/05/05 21:58:36 - mmengine - INFO - Epoch(val) [22][350/552]    eta: 0:01:33  time: 0.3106  data_time: 0.2864  memory: 1196  
2024/05/05 21:58:51 - mmengine - INFO - Epoch(val) [22][400/552]    eta: 0:01:07  time: 0.3011  data_time: 0.2775  memory: 1196  
2024/05/05 21:59:08 - mmengine - INFO - Epoch(val) [22][450/552]    eta: 0:00:44  time: 0.3298  data_time: 0.3061  memory: 1196  
2024/05/05 21:59:22 - mmengine - INFO - Epoch(val) [22][500/552]    eta: 0:00:21  time: 0.2873  data_time: 0.2604  memory: 1196  
2024/05/05 21:59:38 - mmengine - INFO - Epoch(val) [22][550/552]    eta: 0:00:00  time: 0.3251  data_time: 0.3006  memory: 1196  
2024/05/05 21:59:54 - mmengine - INFO - Evaluating bbox...
2024/05/05 22:00:00 - mmengine - INFO - bbox_mAP_copypaste: 0.523 0.640 0.571 -1.000 -1.000 0.523
2024/05/05 22:00:00 - mmengine - INFO - Epoch(val) [22][552/552]    coco/bbox_mAP: 0.5230  coco/bbox_mAP_50: 0.6400  coco/bbox_mAP_75: 0.5710  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.5230  data_time: 0.3836  time: 0.4082
2024/05/05 22:04:14 - mmengine - INFO - Epoch(train) [23][ 50/276]  base_lr: 1.0000e-02 lr: 3.7688e-03  eta: 15:38:40  time: 5.0760  data_time: 3.8735  memory: 8168  loss: 2.3356  loss_cls: 1.7277  loss_bbox: 0.6079
2024/05/05 22:08:22 - mmengine - INFO - Epoch(train) [23][100/276]  base_lr: 1.0000e-02 lr: 3.7688e-03  eta: 15:21:23  time: 4.9727  data_time: 2.9005  memory: 8168  loss: 2.2808  loss_cls: 1.6808  loss_bbox: 0.5999
2024/05/05 22:11:40 - mmengine - INFO - Epoch(train) [23][150/276]  base_lr: 1.0000e-02 lr: 3.7688e-03  eta: 15:03:48  time: 3.9582  data_time: 2.8254  memory: 8168  loss: 2.2595  loss_cls: 1.6449  loss_bbox: 0.6146
2024/05/05 22:15:54 - mmengine - INFO - Epoch(train) [23][200/276]  base_lr: 1.0000e-02 lr: 3.7688e-03  eta: 14:47:00  time: 5.0796  data_time: 1.1243  memory: 8168  loss: 2.2576  loss_cls: 1.6513  loss_bbox: 0.6063
2024/05/05 22:19:36 - mmengine - INFO - Epoch(train) [23][250/276]  base_lr: 1.0000e-02 lr: 3.7688e-03  eta: 14:30:06  time: 4.4388  data_time: 2.6565  memory: 8168  loss: 2.3529  loss_cls: 1.6854  loss_bbox: 0.6675
2024/05/05 22:20:55 - mmengine - INFO - Exp name: yolov6_l_syncbn_fast_8xb32-300e_coco_20240504_191744
2024/05/05 22:20:55 - mmengine - INFO - Saving checkpoint at 23 epochs
2024/05/05 22:21:36 - mmengine - INFO - Epoch(val) [23][ 50/552]    eta: 0:06:12  time: 0.7424  data_time: 0.7158  memory: 8168  
2024/05/05 22:22:12 - mmengine - INFO - Epoch(val) [23][100/552]    eta: 0:05:30  time: 0.7216  data_time: 0.6963  memory: 1208  
2024/05/05 22:22:29 - mmengine - INFO - Epoch(val) [23][150/552]    eta: 0:04:01  time: 0.3375  data_time: 0.3141  memory: 1208  
2024/05/05 22:22:47 - mmengine - INFO - Epoch(val) [23][200/552]    eta: 0:03:10  time: 0.3617  data_time: 0.3357  memory: 1194  
2024/05/05 22:23:06 - mmengine - INFO - Epoch(val) [23][250/552]    eta: 0:02:32  time: 0.3654  data_time: 0.3380  memory: 1194  
2024/05/05 22:23:23 - mmengine - INFO - Epoch(val) [23][300/552]    eta: 0:02:00  time: 0.3510  data_time: 0.3259  memory: 1194  
2024/05/05 22:23:39 - mmengine - INFO - Epoch(val) [23][350/552]    eta: 0:01:32  time: 0.3277  data_time: 0.3031  memory: 1196  
2024/05/05 22:23:54 - mmengine - INFO - Epoch(val) [23][400/552]    eta: 0:01:06  time: 0.2980  data_time: 0.2734  memory: 1196  
2024/05/05 22:24:11 - mmengine - INFO - Epoch(val) [23][450/552]    eta: 0:00:43  time: 0.3228  data_time: 0.2991  memory: 1196  
2024/05/05 22:24:25 - mmengine - INFO - Epoch(val) [23][500/552]    eta: 0:00:21  time: 0.2865  data_time: 0.2618  memory: 1196  
2024/05/05 22:24:41 - mmengine - INFO - Epoch(val) [23][550/552]    eta: 0:00:00  time: 0.3138  data_time: 0.2849  memory: 1196  
2024/05/05 22:25:00 - mmengine - INFO - Evaluating bbox...
2024/05/05 22:25:05 - mmengine - INFO - bbox_mAP_copypaste: 0.562 0.688 0.621 -1.000 -1.000 0.562
2024/05/05 22:25:05 - mmengine - INFO - Epoch(val) [23][552/552]    coco/bbox_mAP: 0.5620  coco/bbox_mAP_50: 0.6880  coco/bbox_mAP_75: 0.6210  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.5620  data_time: 0.3753  time: 0.4007
2024/05/05 22:25:05 - mmengine - INFO - The previous best checkpoint /media/iris/Dong/openmmlab/detection/coding/yolov6/yolov6_l_syncbn_fast_8xb32-300e_coco/best_coco_bbox_mAP_epoch_21.pth is removed
2024/05/05 22:25:08 - mmengine - INFO - The best checkpoint with 0.5620 coco/bbox_mAP at 23 epoch is saved to best_coco_bbox_mAP_epoch_23.pth.
2024/05/05 22:29:13 - mmengine - INFO - Epoch(train) [24][ 50/276]  base_lr: 1.0000e-02 lr: 3.3570e-03  eta: 14:04:37  time: 4.8154  data_time: 3.7967  memory: 8168  loss: 2.2128  loss_cls: 1.6173  loss_bbox: 0.5955
2024/05/05 22:33:07 - mmengine - INFO - Epoch(train) [24][100/276]  base_lr: 1.0000e-02 lr: 3.3570e-03  eta: 13:48:20  time: 4.6792  data_time: 0.5519  memory: 8168  loss: 2.2088  loss_cls: 1.5961  loss_bbox: 0.6127
2024/05/05 22:36:35 - mmengine - INFO - Epoch(train) [24][150/276]  base_lr: 1.0000e-02 lr: 3.3570e-03  eta: 13:32:01  time: 4.1510  data_time: 0.2037  memory: 8168  loss: 2.1770  loss_cls: 1.5990  loss_bbox: 0.5781
2024/05/05 22:40:32 - mmengine - INFO - Epoch(train) [24][200/276]  base_lr: 1.0000e-02 lr: 3.3570e-03  eta: 13:16:09  time: 4.7573  data_time: 0.6653  memory: 8168  loss: 2.1945  loss_cls: 1.6118  loss_bbox: 0.5826
2024/05/05 22:44:38 - mmengine - INFO - Epoch(train) [24][250/276]  base_lr: 1.0000e-02 lr: 3.3570e-03  eta: 13:00:32  time: 4.9203  data_time: 0.8593  memory: 8168  loss: 2.2301  loss_cls: 1.6633  loss_bbox: 0.5668
2024/05/05 22:45:56 - mmengine - INFO - Exp name: yolov6_l_syncbn_fast_8xb32-300e_coco_20240504_191744
2024/05/05 22:45:56 - mmengine - INFO - Saving checkpoint at 24 epochs
2024/05/05 22:46:40 - mmengine - INFO - Epoch(val) [24][ 50/552]    eta: 0:06:40  time: 0.7972  data_time: 0.7723  memory: 8168  
2024/05/05 22:47:18 - mmengine - INFO - Epoch(val) [24][100/552]    eta: 0:05:48  time: 0.7438  data_time: 0.7203  memory: 1208  
2024/05/05 22:47:36 - mmengine - INFO - Epoch(val) [24][150/552]    eta: 0:04:14  time: 0.3590  data_time: 0.3353  memory: 1208  
2024/05/05 22:47:53 - mmengine - INFO - Epoch(val) [24][200/552]    eta: 0:03:18  time: 0.3580  data_time: 0.3322  memory: 1194  
2024/05/05 22:48:11 - mmengine - INFO - Epoch(val) [24][250/552]    eta: 0:02:37  time: 0.3524  data_time: 0.3261  memory: 1194  
2024/05/05 22:48:27 - mmengine - INFO - Epoch(val) [24][300/552]    eta: 0:02:03  time: 0.3219  data_time: 0.2941  memory: 1194  
2024/05/05 22:48:44 - mmengine - INFO - Epoch(val) [24][350/552]    eta: 0:01:34  time: 0.3335  data_time: 0.3089  memory: 1196  
2024/05/05 22:48:59 - mmengine - INFO - Epoch(val) [24][400/552]    eta: 0:01:07  time: 0.3046  data_time: 0.2814  memory: 1196  
2024/05/05 22:49:14 - mmengine - INFO - Epoch(val) [24][450/552]    eta: 0:00:43  time: 0.3006  data_time: 0.2758  memory: 1196  
2024/05/05 22:49:29 - mmengine - INFO - Epoch(val) [24][500/552]    eta: 0:00:21  time: 0.3026  data_time: 0.2755  memory: 1196  
2024/05/05 22:49:45 - mmengine - INFO - Epoch(val) [24][550/552]    eta: 0:00:00  time: 0.3144  data_time: 0.2899  memory: 1196  
2024/05/05 22:50:04 - mmengine - INFO - Evaluating bbox...
2024/05/05 22:50:10 - mmengine - INFO - bbox_mAP_copypaste: 0.588 0.721 0.648 -1.000 -1.000 0.588
2024/05/05 22:50:10 - mmengine - INFO - Epoch(val) [24][552/552]    coco/bbox_mAP: 0.5880  coco/bbox_mAP_50: 0.7210  coco/bbox_mAP_75: 0.6480  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.5880  data_time: 0.3821  time: 0.4072
2024/05/05 22:50:10 - mmengine - INFO - The previous best checkpoint /media/iris/Dong/openmmlab/detection/coding/yolov6/yolov6_l_syncbn_fast_8xb32-300e_coco/best_coco_bbox_mAP_epoch_23.pth is removed
2024/05/05 22:50:13 - mmengine - INFO - The best checkpoint with 0.5880 coco/bbox_mAP at 24 epoch is saved to best_coco_bbox_mAP_epoch_24.pth.
2024/05/05 22:54:44 - mmengine - INFO - Epoch(train) [25][ 50/276]  base_lr: 1.0000e-02 lr: 2.9580e-03  eta: 12:36:52  time: 5.3231  data_time: 3.6245  memory: 8168  loss: 2.2734  loss_cls: 1.6670  loss_bbox: 0.6063
2024/05/05 22:58:23 - mmengine - INFO - Epoch(train) [25][100/276]  base_lr: 1.0000e-02 lr: 2.9580e-03  eta: 12:21:28  time: 4.3792  data_time: 0.3646  memory: 8168  loss: 2.1807  loss_cls: 1.6204  loss_bbox: 0.5603
2024/05/05 23:02:13 - mmengine - INFO - Epoch(train) [25][150/276]  base_lr: 1.0000e-02 lr: 2.9580e-03  eta: 12:06:20  time: 4.6076  data_time: 0.0007  memory: 8168  loss: 2.1915  loss_cls: 1.6258  loss_bbox: 0.5657
2024/05/05 23:05:48 - mmengine - INFO - Epoch(train) [25][200/276]  base_lr: 1.0000e-02 lr: 2.9580e-03  eta: 11:51:14  time: 4.2995  data_time: 0.0007  memory: 8168  loss: 2.1942  loss_cls: 1.6018  loss_bbox: 0.5924
2024/05/05 23:09:46 - mmengine - INFO - Epoch(train) [25][250/276]  base_lr: 1.0000e-02 lr: 2.9580e-03  eta: 11:36:29  time: 4.7451  data_time: 0.7906  memory: 8168  loss: 2.1483  loss_cls: 1.5873  loss_bbox: 0.5610
2024/05/05 23:11:06 - mmengine - INFO - Exp name: yolov6_l_syncbn_fast_8xb32-300e_coco_20240504_191744
2024/05/05 23:11:06 - mmengine - INFO - Saving checkpoint at 25 epochs
2024/05/05 23:11:52 - mmengine - INFO - Epoch(val) [25][ 50/552]    eta: 0:06:53  time: 0.8242  data_time: 0.7982  memory: 8168  
2024/05/05 23:12:29 - mmengine - INFO - Epoch(val) [25][100/552]    eta: 0:05:57  time: 0.7567  data_time: 0.7321  memory: 1208  
2024/05/05 23:12:46 - mmengine - INFO - Epoch(val) [25][150/552]    eta: 0:04:16  time: 0.3296  data_time: 0.3033  memory: 1208  
2024/05/05 23:13:05 - mmengine - INFO - Epoch(val) [25][200/552]    eta: 0:03:21  time: 0.3803  data_time: 0.3554  memory: 1194  
2024/05/05 23:13:22 - mmengine - INFO - Epoch(val) [25][250/552]    eta: 0:02:39  time: 0.3481  data_time: 0.3237  memory: 1194  
2024/05/05 23:13:38 - mmengine - INFO - Epoch(val) [25][300/552]    eta: 0:02:04  time: 0.3237  data_time: 0.2999  memory: 1194  
2024/05/05 23:13:55 - mmengine - INFO - Epoch(val) [25][350/552]    eta: 0:01:34  time: 0.3232  data_time: 0.2988  memory: 1196  
2024/05/05 23:14:08 - mmengine - INFO - Epoch(val) [25][400/552]    eta: 0:01:07  time: 0.2681  data_time: 0.2403  memory: 1196  
2024/05/05 23:14:24 - mmengine - INFO - Epoch(val) [25][450/552]    eta: 0:00:43  time: 0.3159  data_time: 0.2927  memory: 1196  
2024/05/05 23:14:39 - mmengine - INFO - Epoch(val) [25][500/552]    eta: 0:00:21  time: 0.2986  data_time: 0.2751  memory: 1196  
2024/05/05 23:14:55 - mmengine - INFO - Epoch(val) [25][550/552]    eta: 0:00:00  time: 0.3258  data_time: 0.3018  memory: 1196  
2024/05/05 23:15:15 - mmengine - INFO - Evaluating bbox...
2024/05/05 23:15:20 - mmengine - INFO - bbox_mAP_copypaste: 0.589 0.725 0.641 -1.000 -1.000 0.589
2024/05/05 23:15:20 - mmengine - INFO - Epoch(val) [25][552/552]    coco/bbox_mAP: 0.5890  coco/bbox_mAP_50: 0.7250  coco/bbox_mAP_75: 0.6410  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.5890  data_time: 0.3826  time: 0.4074
2024/05/05 23:15:21 - mmengine - INFO - The previous best checkpoint /media/iris/Dong/openmmlab/detection/coding/yolov6/yolov6_l_syncbn_fast_8xb32-300e_coco/best_coco_bbox_mAP_epoch_24.pth is removed
2024/05/05 23:15:24 - mmengine - INFO - The best checkpoint with 0.5890 coco/bbox_mAP at 25 epoch is saved to best_coco_bbox_mAP_epoch_25.pth.
2024/05/05 23:19:41 - mmengine - INFO - Epoch(train) [26][ 50/276]  base_lr: 1.0000e-02 lr: 2.5750e-03  eta: 11:14:09  time: 5.0496  data_time: 3.5848  memory: 8168  loss: 2.1067  loss_cls: 1.5411  loss_bbox: 0.5656
2024/05/05 23:23:33 - mmengine - INFO - Exp name: yolov6_l_syncbn_fast_8xb32-300e_coco_20240504_191744
2024/05/05 23:23:33 - mmengine - INFO - Epoch(train) [26][100/276]  base_lr: 1.0000e-02 lr: 2.5750e-03  eta: 10:59:45  time: 4.6410  data_time: 1.8780  memory: 8168  loss: 2.0278  loss_cls: 1.4813  loss_bbox: 0.5465
2024/05/05 23:27:31 - mmengine - INFO - Epoch(train) [26][150/276]  base_lr: 1.0000e-02 lr: 2.5750e-03  eta: 10:45:32  time: 4.7593  data_time: 1.8450  memory: 8168  loss: 2.1120  loss_cls: 1.5629  loss_bbox: 0.5490
2024/05/05 23:31:08 - mmengine - INFO - Epoch(train) [26][200/276]  base_lr: 1.0000e-02 lr: 2.5750e-03  eta: 10:31:20  time: 4.3370  data_time: 2.0259  memory: 8168  loss: 2.0801  loss_cls: 1.5642  loss_bbox: 0.5160
2024/05/05 23:35:19 - mmengine - INFO - Epoch(train) [26][250/276]  base_lr: 1.0000e-02 lr: 2.5750e-03  eta: 10:17:30  time: 5.0272  data_time: 1.7812  memory: 8168  loss: 2.1099  loss_cls: 1.5851  loss_bbox: 0.5249
2024/05/05 23:36:40 - mmengine - INFO - Exp name: yolov6_l_syncbn_fast_8xb32-300e_coco_20240504_191744
2024/05/05 23:36:40 - mmengine - INFO - Saving checkpoint at 26 epochs
2024/05/05 23:37:27 - mmengine - INFO - Epoch(val) [26][ 50/552]    eta: 0:07:03  time: 0.8444  data_time: 0.8193  memory: 8168  
2024/05/05 23:38:05 - mmengine - INFO - Epoch(val) [26][100/552]    eta: 0:06:04  time: 0.7703  data_time: 0.7464  memory: 1208  
2024/05/05 23:38:23 - mmengine - INFO - Epoch(val) [26][150/552]    eta: 0:04:24  time: 0.3578  data_time: 0.3335  memory: 1208  
2024/05/05 23:38:41 - mmengine - INFO - Epoch(val) [26][200/552]    eta: 0:03:24  time: 0.3529  data_time: 0.3280  memory: 1194  
2024/05/05 23:38:58 - mmengine - INFO - Epoch(val) [26][250/552]    eta: 0:02:40  time: 0.3369  data_time: 0.3106  memory: 1194  
2024/05/05 23:39:13 - mmengine - INFO - Epoch(val) [26][300/552]    eta: 0:02:04  time: 0.3027  data_time: 0.2768  memory: 1194  
2024/05/05 23:39:30 - mmengine - INFO - Epoch(val) [26][350/552]    eta: 0:01:35  time: 0.3444  data_time: 0.3164  memory: 1196  
2024/05/05 23:39:45 - mmengine - INFO - Epoch(val) [26][400/552]    eta: 0:01:08  time: 0.2958  data_time: 0.2716  memory: 1196  
2024/05/05 23:39:59 - mmengine - INFO - Epoch(val) [26][450/552]    eta: 0:00:44  time: 0.2892  data_time: 0.2631  memory: 1196  
2024/05/05 23:40:15 - mmengine - INFO - Epoch(val) [26][500/552]    eta: 0:00:21  time: 0.3036  data_time: 0.2745  memory: 1196  
2024/05/05 23:40:31 - mmengine - INFO - Epoch(val) [26][550/552]    eta: 0:00:00  time: 0.3370  data_time: 0.3131  memory: 1196  
2024/05/05 23:40:52 - mmengine - INFO - Evaluating bbox...
2024/05/05 23:40:57 - mmengine - INFO - bbox_mAP_copypaste: 0.619 0.744 0.676 -1.000 -1.000 0.619
2024/05/05 23:40:57 - mmengine - INFO - Epoch(val) [26][552/552]    coco/bbox_mAP: 0.6190  coco/bbox_mAP_50: 0.7440  coco/bbox_mAP_75: 0.6760  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.6190  data_time: 0.3852  time: 0.4108
2024/05/05 23:40:57 - mmengine - INFO - The previous best checkpoint /media/iris/Dong/openmmlab/detection/coding/yolov6/yolov6_l_syncbn_fast_8xb32-300e_coco/best_coco_bbox_mAP_epoch_25.pth is removed
2024/05/05 23:41:01 - mmengine - INFO - The best checkpoint with 0.6190 coco/bbox_mAP at 26 epoch is saved to best_coco_bbox_mAP_epoch_26.pth.
2024/05/05 23:45:38 - mmengine - INFO - Epoch(train) [27][ 50/276]  base_lr: 1.0000e-02 lr: 2.2108e-03  eta: 9:56:33  time: 5.4611  data_time: 5.0600  memory: 8168  loss: 2.1379  loss_cls: 1.6085  loss_bbox: 0.5294
2024/05/05 23:49:27 - mmengine - INFO - Epoch(train) [27][100/276]  base_lr: 1.0000e-02 lr: 2.2108e-03  eta: 9:42:54  time: 4.5745  data_time: 4.1752  memory: 8168  loss: 2.0812  loss_cls: 1.5638  loss_bbox: 0.5174
2024/05/05 23:53:20 - mmengine - INFO - Epoch(train) [27][150/276]  base_lr: 1.0000e-02 lr: 2.2108e-03  eta: 9:29:26  time: 4.6660  data_time: 3.8015  memory: 8168  loss: 2.0368  loss_cls: 1.5247  loss_bbox: 0.5121
2024/05/05 23:57:15 - mmengine - INFO - Epoch(train) [27][200/276]  base_lr: 1.0000e-02 lr: 2.2108e-03  eta: 9:16:06  time: 4.6894  data_time: 3.7206  memory: 8168  loss: 1.9833  loss_cls: 1.4710  loss_bbox: 0.5123
2024/05/06 00:03:34 - mmengine - INFO - Epoch(train) [27][250/276]  base_lr: 1.0000e-02 lr: 2.2108e-03  eta: 9:03:42  time: 7.5795  data_time: 0.1952  memory: 8168  loss: 2.0855  loss_cls: 1.5385  loss_bbox: 0.5470
2024/05/06 00:05:06 - mmengine - INFO - Exp name: yolov6_l_syncbn_fast_8xb32-300e_coco_20240504_191744
2024/05/06 00:05:06 - mmengine - INFO - Saving checkpoint at 27 epochs
2024/05/06 00:05:52 - mmengine - INFO - Epoch(val) [27][ 50/552]    eta: 0:06:54  time: 0.8257  data_time: 0.8012  memory: 8168  
2024/05/06 00:06:30 - mmengine - INFO - Epoch(val) [27][100/552]    eta: 0:05:59  time: 0.7631  data_time: 0.7393  memory: 1208  
2024/05/06 00:06:49 - mmengine - INFO - Epoch(val) [27][150/552]    eta: 0:04:22  time: 0.3710  data_time: 0.3451  memory: 1208  
2024/05/06 00:07:07 - mmengine - INFO - Epoch(val) [27][200/552]    eta: 0:03:25  time: 0.3739  data_time: 0.3471  memory: 1194  
2024/05/06 00:07:25 - mmengine - INFO - Epoch(val) [27][250/552]    eta: 0:02:42  time: 0.3641  data_time: 0.3406  memory: 1194  
2024/05/06 00:07:42 - mmengine - INFO - Epoch(val) [27][300/552]    eta: 0:02:07  time: 0.3351  data_time: 0.3078  memory: 1194  
2024/05/06 00:08:01 - mmengine - INFO - Epoch(val) [27][350/552]    eta: 0:01:38  time: 0.3652  data_time: 0.3401  memory: 1196  
2024/05/06 00:08:16 - mmengine - INFO - Epoch(val) [27][400/552]    eta: 0:01:10  time: 0.3069  data_time: 0.2832  memory: 1196  
2024/05/06 00:08:32 - mmengine - INFO - Epoch(val) [27][450/552]    eta: 0:00:45  time: 0.3248  data_time: 0.3001  memory: 1196  
2024/05/06 00:08:47 - mmengine - INFO - Epoch(val) [27][500/552]    eta: 0:00:22  time: 0.2952  data_time: 0.2681  memory: 1196  
2024/05/06 00:09:02 - mmengine - INFO - Epoch(val) [27][550/552]    eta: 0:00:00  time: 0.3080  data_time: 0.2832  memory: 1196  
2024/05/06 00:09:17 - mmengine - INFO - Evaluating bbox...
2024/05/06 00:09:23 - mmengine - INFO - bbox_mAP_copypaste: 0.631 0.755 0.689 -1.000 -1.000 0.631
2024/05/06 00:09:23 - mmengine - INFO - Epoch(val) [27][552/552]    coco/bbox_mAP: 0.6310  coco/bbox_mAP_50: 0.7550  coco/bbox_mAP_75: 0.6890  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.6310  data_time: 0.3945  time: 0.4197
2024/05/06 00:09:23 - mmengine - INFO - The previous best checkpoint /media/iris/Dong/openmmlab/detection/coding/yolov6/yolov6_l_syncbn_fast_8xb32-300e_coco/best_coco_bbox_mAP_epoch_26.pth is removed
2024/05/06 00:09:27 - mmengine - INFO - The best checkpoint with 0.6310 coco/bbox_mAP at 27 epoch is saved to best_coco_bbox_mAP_epoch_27.pth.
2024/05/06 00:14:00 - mmengine - INFO - Epoch(train) [28][ 50/276]  base_lr: 1.0000e-02 lr: 1.8682e-03  eta: 8:43:50  time: 5.3666  data_time: 3.9134  memory: 8168  loss: 1.9961  loss_cls: 1.4979  loss_bbox: 0.4981
2024/05/06 00:18:16 - mmengine - INFO - Epoch(train) [28][100/276]  base_lr: 1.0000e-02 lr: 1.8682e-03  eta: 8:31:02  time: 5.1185  data_time: 3.8206  memory: 8168  loss: 1.9887  loss_cls: 1.4767  loss_bbox: 0.5119
2024/05/06 00:22:00 - mmengine - INFO - Epoch(train) [28][150/276]  base_lr: 1.0000e-02 lr: 1.8682e-03  eta: 8:18:10  time: 4.4875  data_time: 3.1227  memory: 8168  loss: 2.0142  loss_cls: 1.5077  loss_bbox: 0.5065
2024/05/06 00:26:00 - mmengine - INFO - Epoch(train) [28][200/276]  base_lr: 1.0000e-02 lr: 1.8682e-03  eta: 8:05:30  time: 4.8065  data_time: 2.3557  memory: 8168  loss: 2.0219  loss_cls: 1.5336  loss_bbox: 0.4884
2024/05/06 00:29:57 - mmengine - INFO - Epoch(train) [28][250/276]  base_lr: 1.0000e-02 lr: 1.8682e-03  eta: 7:52:56  time: 4.7307  data_time: 4.3302  memory: 8168  loss: 2.0430  loss_cls: 1.5241  loss_bbox: 0.5189
2024/05/06 00:31:26 - mmengine - INFO - Exp name: yolov6_l_syncbn_fast_8xb32-300e_coco_20240504_191744
2024/05/06 00:31:26 - mmengine - INFO - Saving checkpoint at 28 epochs
2024/05/06 00:32:14 - mmengine - INFO - Epoch(val) [28][ 50/552]    eta: 0:07:11  time: 0.8593  data_time: 0.8351  memory: 8168  
2024/05/06 00:32:54 - mmengine - INFO - Epoch(val) [28][100/552]    eta: 0:06:16  time: 0.8084  data_time: 0.7831  memory: 1208  
2024/05/06 00:33:11 - mmengine - INFO - Epoch(val) [28][150/552]    eta: 0:04:29  time: 0.3462  data_time: 0.3221  memory: 1208  
2024/05/06 00:33:31 - mmengine - INFO - Epoch(val) [28][200/552]    eta: 0:03:31  time: 0.3908  data_time: 0.3638  memory: 1194  
2024/05/06 00:33:49 - mmengine - INFO - Epoch(val) [28][250/552]    eta: 0:02:46  time: 0.3582  data_time: 0.3341  memory: 1194  
2024/05/06 00:34:06 - mmengine - INFO - Epoch(val) [28][300/552]    eta: 0:02:10  time: 0.3442  data_time: 0.3194  memory: 1194  
2024/05/06 00:34:23 - mmengine - INFO - Epoch(val) [28][350/552]    eta: 0:01:39  time: 0.3391  data_time: 0.3138  memory: 1196  
2024/05/06 00:34:39 - mmengine - INFO - Epoch(val) [28][400/552]    eta: 0:01:11  time: 0.3159  data_time: 0.2926  memory: 1196  
2024/05/06 00:34:56 - mmengine - INFO - Epoch(val) [28][450/552]    eta: 0:00:46  time: 0.3358  data_time: 0.3128  memory: 1196  
2024/05/06 00:35:12 - mmengine - INFO - Epoch(val) [28][500/552]    eta: 0:00:22  time: 0.3193  data_time: 0.2948  memory: 1196  
2024/05/06 00:35:28 - mmengine - INFO - Epoch(val) [28][550/552]    eta: 0:00:00  time: 0.3250  data_time: 0.2999  memory: 1196  
2024/05/06 00:35:42 - mmengine - INFO - Evaluating bbox...
2024/05/06 00:35:47 - mmengine - INFO - bbox_mAP_copypaste: 0.626 0.749 0.687 -1.000 -1.000 0.626
2024/05/06 00:35:48 - mmengine - INFO - Epoch(val) [28][552/552]    coco/bbox_mAP: 0.6260  coco/bbox_mAP_50: 0.7490  coco/bbox_mAP_75: 0.6870  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.6260  data_time: 0.4045  time: 0.4291
2024/05/06 00:40:31 - mmengine - INFO - Epoch(train) [29][ 50/276]  base_lr: 1.0000e-02 lr: 1.5498e-03  eta: 7:34:07  time: 5.6718  data_time: 4.8748  memory: 8168  loss: 1.9614  loss_cls: 1.4526  loss_bbox: 0.5087
2024/05/06 00:44:35 - mmengine - INFO - Epoch(train) [29][100/276]  base_lr: 1.0000e-02 lr: 1.5498e-03  eta: 7:21:51  time: 4.8757  data_time: 4.4722  memory: 8168  loss: 1.8750  loss_cls: 1.4103  loss_bbox: 0.4646
2024/05/06 00:48:30 - mmengine - INFO - Epoch(train) [29][150/276]  base_lr: 1.0000e-02 lr: 1.5498e-03  eta: 7:09:39  time: 4.6929  data_time: 4.1242  memory: 8168  loss: 1.9094  loss_cls: 1.4186  loss_bbox: 0.4908
2024/05/06 00:52:13 - mmengine - INFO - Epoch(train) [29][200/276]  base_lr: 1.0000e-02 lr: 1.5498e-03  eta: 6:57:31  time: 4.4649  data_time: 2.8977  memory: 8168  loss: 1.9841  loss_cls: 1.4969  loss_bbox: 0.4873
2024/05/06 00:56:09 - mmengine - INFO - Epoch(train) [29][250/276]  base_lr: 1.0000e-02 lr: 1.5498e-03  eta: 6:45:32  time: 4.7308  data_time: 0.9909  memory: 8168  loss: 1.9843  loss_cls: 1.5002  loss_bbox: 0.4840
2024/05/06 00:57:49 - mmengine - INFO - Exp name: yolov6_l_syncbn_fast_8xb32-300e_coco_20240504_191744
2024/05/06 00:57:52 - mmengine - INFO - Exp name: yolov6_l_syncbn_fast_8xb32-300e_coco_20240504_191744
2024/05/06 00:57:52 - mmengine - INFO - Saving checkpoint at 29 epochs
2024/05/06 00:58:37 - mmengine - INFO - Epoch(val) [29][ 50/552]    eta: 0:06:47  time: 0.8124  data_time: 0.7869  memory: 8168  
2024/05/06 00:59:15 - mmengine - INFO - Epoch(val) [29][100/552]    eta: 0:05:54  time: 0.7578  data_time: 0.7336  memory: 1208  
2024/05/06 00:59:33 - mmengine - INFO - Epoch(val) [29][150/552]    eta: 0:04:19  time: 0.3638  data_time: 0.3389  memory: 1208  
2024/05/06 00:59:52 - mmengine - INFO - Epoch(val) [29][200/552]    eta: 0:03:22  time: 0.3718  data_time: 0.3470  memory: 1194  
2024/05/06 01:00:09 - mmengine - INFO - Epoch(val) [29][250/552]    eta: 0:02:40  time: 0.3462  data_time: 0.3186  memory: 1194  
2024/05/06 01:00:26 - mmengine - INFO - Epoch(val) [29][300/552]    eta: 0:02:05  time: 0.3346  data_time: 0.3102  memory: 1194  
2024/05/06 01:00:42 - mmengine - INFO - Epoch(val) [29][350/552]    eta: 0:01:35  time: 0.3278  data_time: 0.3030  memory: 1196  
2024/05/06 01:00:58 - mmengine - INFO - Epoch(val) [29][400/552]    eta: 0:01:09  time: 0.3181  data_time: 0.2950  memory: 1196  
2024/05/06 01:01:14 - mmengine - INFO - Epoch(val) [29][450/552]    eta: 0:00:44  time: 0.3081  data_time: 0.2844  memory: 1196  
2024/05/06 01:01:30 - mmengine - INFO - Epoch(val) [29][500/552]    eta: 0:00:22  time: 0.3246  data_time: 0.2992  memory: 1196  
2024/05/06 01:01:47 - mmengine - INFO - Epoch(val) [29][550/552]    eta: 0:00:00  time: 0.3373  data_time: 0.3131  memory: 1196  
2024/05/06 01:02:04 - mmengine - INFO - Evaluating bbox...
2024/05/06 01:02:09 - mmengine - INFO - bbox_mAP_copypaste: 0.647 0.768 0.706 -1.000 -1.000 0.647
2024/05/06 01:02:10 - mmengine - INFO - Epoch(val) [29][552/552]    coco/bbox_mAP: 0.6470  coco/bbox_mAP_50: 0.7680  coco/bbox_mAP_75: 0.7060  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.6470  data_time: 0.3917  time: 0.4165
2024/05/06 01:02:10 - mmengine - INFO - The previous best checkpoint /media/iris/Dong/openmmlab/detection/coding/yolov6/yolov6_l_syncbn_fast_8xb32-300e_coco/best_coco_bbox_mAP_epoch_27.pth is removed
2024/05/06 01:02:13 - mmengine - INFO - The best checkpoint with 0.6470 coco/bbox_mAP at 29 epoch is saved to best_coco_bbox_mAP_epoch_29.pth.
2024/05/06 01:07:14 - mmengine - INFO - Epoch(train) [30][ 50/276]  base_lr: 1.0000e-02 lr: 1.2581e-03  eta: 6:27:40  time: 5.9245  data_time: 5.5254  memory: 8168  loss: 1.9007  loss_cls: 1.4139  loss_bbox: 0.4868
2024/05/06 01:10:58 - mmengine - INFO - Epoch(train) [30][100/276]  base_lr: 1.0000e-02 lr: 1.2581e-03  eta: 6:15:53  time: 4.4787  data_time: 3.8365  memory: 8168  loss: 1.9383  loss_cls: 1.4609  loss_bbox: 0.4774
2024/05/06 01:15:05 - mmengine - INFO - Epoch(train) [30][150/276]  base_lr: 1.0000e-02 lr: 1.2581e-03  eta: 6:04:17  time: 4.9379  data_time: 1.6409  memory: 8168  loss: 1.8427  loss_cls: 1.3845  loss_bbox: 0.4582
2024/05/06 01:18:44 - mmengine - INFO - Epoch(train) [30][200/276]  base_lr: 1.0000e-02 lr: 1.2581e-03  eta: 5:52:40  time: 4.3755  data_time: 2.9789  memory: 8168  loss: 1.8678  loss_cls: 1.3893  loss_bbox: 0.4785
2024/05/06 01:22:47 - mmengine - INFO - Epoch(train) [30][250/276]  base_lr: 1.0000e-02 lr: 1.2581e-03  eta: 5:41:14  time: 4.8762  data_time: 2.1634  memory: 8168  loss: 1.9044  loss_cls: 1.4351  loss_bbox: 0.4693
2024/05/06 01:24:22 - mmengine - INFO - Exp name: yolov6_l_syncbn_fast_8xb32-300e_coco_20240504_191744
2024/05/06 01:24:22 - mmengine - INFO - Saving checkpoint at 30 epochs
2024/05/06 01:25:07 - mmengine - INFO - Epoch(val) [30][ 50/552]    eta: 0:06:47  time: 0.8116  data_time: 0.7873  memory: 8168  
2024/05/06 01:25:44 - mmengine - INFO - Epoch(val) [30][100/552]    eta: 0:05:53  time: 0.7536  data_time: 0.7290  memory: 1208  
2024/05/06 01:26:03 - mmengine - INFO - Epoch(val) [30][150/552]    eta: 0:04:19  time: 0.3682  data_time: 0.3439  memory: 1208  
2024/05/06 01:26:21 - mmengine - INFO - Epoch(val) [30][200/552]    eta: 0:03:21  time: 0.3554  data_time: 0.3315  memory: 1194  
2024/05/06 01:26:37 - mmengine - INFO - Epoch(val) [30][250/552]    eta: 0:02:38  time: 0.3294  data_time: 0.3027  memory: 1194  
2024/05/06 01:26:55 - mmengine - INFO - Epoch(val) [30][300/552]    eta: 0:02:04  time: 0.3508  data_time: 0.3262  memory: 1194  
2024/05/06 01:27:11 - mmengine - INFO - Epoch(val) [30][350/552]    eta: 0:01:35  time: 0.3316  data_time: 0.3063  memory: 1196  
2024/05/06 01:27:27 - mmengine - INFO - Epoch(val) [30][400/552]    eta: 0:01:08  time: 0.3118  data_time: 0.2877  memory: 1196  
2024/05/06 01:27:42 - mmengine - INFO - Epoch(val) [30][450/552]    eta: 0:00:44  time: 0.3004  data_time: 0.2762  memory: 1196  
2024/05/06 01:27:58 - mmengine - INFO - Epoch(val) [30][500/552]    eta: 0:00:22  time: 0.3199  data_time: 0.2950  memory: 1196  
2024/05/06 01:28:13 - mmengine - INFO - Epoch(val) [30][550/552]    eta: 0:00:00  time: 0.3101  data_time: 0.2838  memory: 1196  
2024/05/06 01:28:34 - mmengine - INFO - Evaluating bbox...
2024/05/06 01:28:39 - mmengine - INFO - bbox_mAP_copypaste: 0.648 0.764 0.703 -1.000 -1.000 0.648
2024/05/06 01:28:39 - mmengine - INFO - Epoch(val) [30][552/552]    coco/bbox_mAP: 0.6480  coco/bbox_mAP_50: 0.7640  coco/bbox_mAP_75: 0.7030  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.6480  data_time: 0.3874  time: 0.4123
2024/05/06 01:28:39 - mmengine - INFO - The previous best checkpoint /media/iris/Dong/openmmlab/detection/coding/yolov6/yolov6_l_syncbn_fast_8xb32-300e_coco/best_coco_bbox_mAP_epoch_29.pth is removed
2024/05/06 01:28:42 - mmengine - INFO - The best checkpoint with 0.6480 coco/bbox_mAP at 30 epoch is saved to best_coco_bbox_mAP_epoch_30.pth.
2024/05/06 01:33:35 - mmengine - INFO - Epoch(train) [31][ 50/276]  base_lr: 1.0000e-02 lr: 9.9520e-04  eta: 5:24:05  time: 5.7636  data_time: 5.0741  memory: 8168  loss: 1.9145  loss_cls: 1.4379  loss_bbox: 0.4766
2024/05/06 01:37:42 - mmengine - INFO - Epoch(train) [31][100/276]  base_lr: 1.0000e-02 lr: 9.9520e-04  eta: 5:12:53  time: 4.9409  data_time: 4.5417  memory: 8168  loss: 1.8696  loss_cls: 1.3969  loss_bbox: 0.4727
2024/05/06 01:41:13 - mmengine - INFO - Epoch(train) [31][150/276]  base_lr: 1.0000e-02 lr: 9.9520e-04  eta: 5:01:39  time: 4.2141  data_time: 3.8143  memory: 8168  loss: 1.9392  loss_cls: 1.4454  loss_bbox: 0.4938
2024/05/06 01:45:09 - mmengine - INFO - Epoch(train) [31][200/276]  base_lr: 1.0000e-02 lr: 9.9520e-04  eta: 4:50:36  time: 4.7150  data_time: 3.5101  memory: 8168  loss: 1.8457  loss_cls: 1.3835  loss_bbox: 0.4622
2024/05/06 01:49:29 - mmengine - INFO - Epoch(train) [31][250/276]  base_lr: 1.0000e-02 lr: 9.9520e-04  eta: 4:39:41  time: 5.2040  data_time: 1.6954  memory: 8168  loss: 1.8336  loss_cls: 1.3726  loss_bbox: 0.4610
2024/05/06 01:51:00 - mmengine - INFO - Exp name: yolov6_l_syncbn_fast_8xb32-300e_coco_20240504_191744
2024/05/06 01:51:00 - mmengine - INFO - Saving checkpoint at 31 epochs
2024/05/06 01:51:44 - mmengine - INFO - Epoch(val) [31][ 50/552]    eta: 0:06:39  time: 0.7966  data_time: 0.7709  memory: 8168  
2024/05/06 01:52:22 - mmengine - INFO - Epoch(val) [31][100/552]    eta: 0:05:48  time: 0.7434  data_time: 0.7188  memory: 1208  
2024/05/06 01:52:40 - mmengine - INFO - Epoch(val) [31][150/552]    eta: 0:04:16  time: 0.3732  data_time: 0.3475  memory: 1208  
2024/05/06 01:52:59 - mmengine - INFO - Epoch(val) [31][200/552]    eta: 0:03:22  time: 0.3856  data_time: 0.3617  memory: 1194  
2024/05/06 01:53:18 - mmengine - INFO - Epoch(val) [31][250/552]    eta: 0:02:40  time: 0.3626  data_time: 0.3367  memory: 1194  
2024/05/06 01:53:35 - mmengine - INFO - Epoch(val) [31][300/552]    eta: 0:02:06  time: 0.3548  data_time: 0.3284  memory: 1194  
2024/05/06 01:53:52 - mmengine - INFO - Epoch(val) [31][350/552]    eta: 0:01:36  time: 0.3309  data_time: 0.3052  memory: 1196  
2024/05/06 01:54:07 - mmengine - INFO - Epoch(val) [31][400/552]    eta: 0:01:09  time: 0.2977  data_time: 0.2743  memory: 1196  
2024/05/06 01:54:23 - mmengine - INFO - Epoch(val) [31][450/552]    eta: 0:00:45  time: 0.3286  data_time: 0.3043  memory: 1196  
2024/05/06 01:54:38 - mmengine - INFO - Epoch(val) [31][500/552]    eta: 0:00:22  time: 0.2940  data_time: 0.2704  memory: 1196  
2024/05/06 01:54:54 - mmengine - INFO - Epoch(val) [31][550/552]    eta: 0:00:00  time: 0.3152  data_time: 0.2906  memory: 1196  
2024/05/06 01:55:10 - mmengine - INFO - Evaluating bbox...
2024/05/06 01:55:16 - mmengine - INFO - bbox_mAP_copypaste: 0.654 0.782 0.708 -1.000 -1.000 0.654
2024/05/06 01:55:16 - mmengine - INFO - Epoch(val) [31][552/552]    coco/bbox_mAP: 0.6540  coco/bbox_mAP_50: 0.7820  coco/bbox_mAP_75: 0.7080  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.6540  data_time: 0.3908  time: 0.4156
2024/05/06 01:55:16 - mmengine - INFO - The previous best checkpoint /media/iris/Dong/openmmlab/detection/coding/yolov6/yolov6_l_syncbn_fast_8xb32-300e_coco/best_coco_bbox_mAP_epoch_30.pth is removed
2024/05/06 01:55:19 - mmengine - INFO - The best checkpoint with 0.6540 coco/bbox_mAP at 31 epoch is saved to best_coco_bbox_mAP_epoch_31.pth.
2024/05/06 01:59:58 - mmengine - INFO - Epoch(train) [32][ 50/276]  base_lr: 1.0000e-02 lr: 7.6317e-04  eta: 4:23:10  time: 5.4790  data_time: 5.0796  memory: 8168  loss: 1.9178  loss_cls: 1.4478  loss_bbox: 0.4701
2024/05/06 02:04:13 - mmengine - INFO - Epoch(train) [32][100/276]  base_lr: 1.0000e-02 lr: 7.6317e-04  eta: 4:12:27  time: 5.1102  data_time: 4.6750  memory: 8168  loss: 1.8201  loss_cls: 1.3706  loss_bbox: 0.4495
2024/05/06 02:08:09 - mmengine - INFO - Epoch(train) [32][150/276]  base_lr: 1.0000e-02 lr: 7.6317e-04  eta: 4:01:45  time: 4.7151  data_time: 3.5302  memory: 8168  loss: 1.7420  loss_cls: 1.3340  loss_bbox: 0.4080
2024/05/06 02:11:59 - mmengine - INFO - Epoch(train) [32][200/276]  base_lr: 1.0000e-02 lr: 7.6317e-04  eta: 3:51:07  time: 4.5916  data_time: 4.0489  memory: 8168  loss: 1.7936  loss_cls: 1.3566  loss_bbox: 0.4370
2024/05/06 02:15:49 - mmengine - INFO - Epoch(train) [32][250/276]  base_lr: 1.0000e-02 lr: 7.6317e-04  eta: 3:40:33  time: 4.6021  data_time: 1.9178  memory: 8168  loss: 1.7327  loss_cls: 1.3153  loss_bbox: 0.4174
2024/05/06 02:17:38 - mmengine - INFO - Exp name: yolov6_l_syncbn_fast_8xb32-300e_coco_20240504_191744
2024/05/06 02:17:38 - mmengine - INFO - Saving checkpoint at 32 epochs
2024/05/06 02:18:23 - mmengine - INFO - Epoch(val) [32][ 50/552]    eta: 0:06:46  time: 0.8099  data_time: 0.7833  memory: 8168  
2024/05/06 02:19:01 - mmengine - INFO - Epoch(val) [32][100/552]    eta: 0:05:53  time: 0.7543  data_time: 0.7305  memory: 1208  
2024/05/06 02:19:20 - mmengine - INFO - Epoch(val) [32][150/552]    eta: 0:04:20  time: 0.3823  data_time: 0.3583  memory: 1208  
2024/05/06 02:19:39 - mmengine - INFO - Epoch(val) [32][200/552]    eta: 0:03:24  time: 0.3829  data_time: 0.3586  memory: 1194  
2024/05/06 02:19:57 - mmengine - INFO - Epoch(val) [32][250/552]    eta: 0:02:42  time: 0.3584  data_time: 0.3340  memory: 1194  
2024/05/06 02:20:14 - mmengine - INFO - Epoch(val) [32][300/552]    eta: 0:02:07  time: 0.3411  data_time: 0.3130  memory: 1194  
2024/05/06 02:20:32 - mmengine - INFO - Epoch(val) [32][350/552]    eta: 0:01:37  time: 0.3456  data_time: 0.3200  memory: 1196  
2024/05/06 02:20:47 - mmengine - INFO - Epoch(val) [32][400/552]    eta: 0:01:09  time: 0.2988  data_time: 0.2709  memory: 1196  
2024/05/06 02:21:03 - mmengine - INFO - Epoch(val) [32][450/552]    eta: 0:00:45  time: 0.3225  data_time: 0.2977  memory: 1196  
2024/05/06 02:21:18 - mmengine - INFO - Epoch(val) [32][500/552]    eta: 0:00:22  time: 0.3032  data_time: 0.2772  memory: 1196  
2024/05/06 02:21:34 - mmengine - INFO - Epoch(val) [32][550/552]    eta: 0:00:00  time: 0.3195  data_time: 0.2939  memory: 1196  
2024/05/06 02:21:51 - mmengine - INFO - Evaluating bbox...
2024/05/06 02:21:57 - mmengine - INFO - bbox_mAP_copypaste: 0.659 0.784 0.712 -1.000 -1.000 0.659
2024/05/06 02:21:57 - mmengine - INFO - Epoch(val) [32][552/552]    coco/bbox_mAP: 0.6590  coco/bbox_mAP_50: 0.7840  coco/bbox_mAP_75: 0.7120  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.6590  data_time: 0.3925  time: 0.4180
2024/05/06 02:21:57 - mmengine - INFO - The previous best checkpoint /media/iris/Dong/openmmlab/detection/coding/yolov6/yolov6_l_syncbn_fast_8xb32-300e_coco/best_coco_bbox_mAP_epoch_31.pth is removed
2024/05/06 02:22:00 - mmengine - INFO - The best checkpoint with 0.6590 coco/bbox_mAP at 32 epoch is saved to best_coco_bbox_mAP_epoch_32.pth.
2024/05/06 02:26:50 - mmengine - INFO - Epoch(train) [33][ 50/276]  base_lr: 1.0000e-02 lr: 5.6378e-04  eta: 3:24:44  time: 5.7071  data_time: 5.2834  memory: 8168  loss: 1.8126  loss_cls: 1.3654  loss_bbox: 0.4472
2024/05/06 02:31:07 - mmengine - INFO - Epoch(train) [33][100/276]  base_lr: 1.0000e-02 lr: 5.6378e-04  eta: 3:14:25  time: 5.1409  data_time: 3.4542  memory: 8168  loss: 1.7037  loss_cls: 1.3102  loss_bbox: 0.3934
2024/05/06 02:35:04 - mmengine - INFO - Epoch(train) [33][150/276]  base_lr: 1.0000e-02 lr: 5.6378e-04  eta: 3:04:08  time: 4.7507  data_time: 1.8164  memory: 8168  loss: 1.7574  loss_cls: 1.3441  loss_bbox: 0.4134
2024/05/06 02:36:33 - mmengine - INFO - Exp name: yolov6_l_syncbn_fast_8xb32-300e_coco_20240504_191744
2024/05/06 02:39:14 - mmengine - INFO - Epoch(train) [33][200/276]  base_lr: 1.0000e-02 lr: 5.6378e-04  eta: 2:53:55  time: 4.9891  data_time: 0.4513  memory: 8168  loss: 1.7734  loss_cls: 1.3314  loss_bbox: 0.4420
2024/05/06 02:43:01 - mmengine - INFO - Epoch(train) [33][250/276]  base_lr: 1.0000e-02 lr: 5.6378e-04  eta: 2:43:45  time: 4.5501  data_time: 0.4974  memory: 8168  loss: 1.7425  loss_cls: 1.3245  loss_bbox: 0.4180
2024/05/06 02:44:39 - mmengine - INFO - Exp name: yolov6_l_syncbn_fast_8xb32-300e_coco_20240504_191744
2024/05/06 02:44:39 - mmengine - INFO - Saving checkpoint at 33 epochs
2024/05/06 02:45:24 - mmengine - INFO - Epoch(val) [33][ 50/552]    eta: 0:06:45  time: 0.8080  data_time: 0.7837  memory: 8168  
2024/05/06 02:46:01 - mmengine - INFO - Epoch(val) [33][100/552]    eta: 0:05:50  time: 0.7413  data_time: 0.7163  memory: 1208  
2024/05/06 02:46:19 - mmengine - INFO - Epoch(val) [33][150/552]    eta: 0:04:15  time: 0.3563  data_time: 0.3317  memory: 1208  
2024/05/06 02:46:37 - mmengine - INFO - Epoch(val) [33][200/552]    eta: 0:03:20  time: 0.3699  data_time: 0.3446  memory: 1194  
2024/05/06 02:46:55 - mmengine - INFO - Epoch(val) [33][250/552]    eta: 0:02:38  time: 0.3529  data_time: 0.3229  memory: 1194  
2024/05/06 02:47:12 - mmengine - INFO - Epoch(val) [33][300/552]    eta: 0:02:04  time: 0.3431  data_time: 0.3178  memory: 1194  
2024/05/06 02:47:30 - mmengine - INFO - Epoch(val) [33][350/552]    eta: 0:01:36  time: 0.3609  data_time: 0.3354  memory: 1196  
2024/05/06 02:47:43 - mmengine - INFO - Epoch(val) [33][400/552]    eta: 0:01:08  time: 0.2617  data_time: 0.2325  memory: 1196  
2024/05/06 02:47:59 - mmengine - INFO - Epoch(val) [33][450/552]    eta: 0:00:44  time: 0.3240  data_time: 0.3015  memory: 1196  
2024/05/06 02:48:16 - mmengine - INFO - Epoch(val) [33][500/552]    eta: 0:00:22  time: 0.3334  data_time: 0.3098  memory: 1196  
2024/05/06 02:48:32 - mmengine - INFO - Epoch(val) [33][550/552]    eta: 0:00:00  time: 0.3150  data_time: 0.2904  memory: 1196  
2024/05/06 02:48:51 - mmengine - INFO - Evaluating bbox...
2024/05/06 02:48:56 - mmengine - INFO - bbox_mAP_copypaste: 0.665 0.788 0.717 -1.000 -1.000 0.665
2024/05/06 02:48:56 - mmengine - INFO - Epoch(val) [33][552/552]    coco/bbox_mAP: 0.6650  coco/bbox_mAP_50: 0.7880  coco/bbox_mAP_75: 0.7170  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.6650  data_time: 0.3885  time: 0.4139
2024/05/06 02:48:56 - mmengine - INFO - The previous best checkpoint /media/iris/Dong/openmmlab/detection/coding/yolov6/yolov6_l_syncbn_fast_8xb32-300e_coco/best_coco_bbox_mAP_epoch_32.pth is removed
2024/05/06 02:48:59 - mmengine - INFO - The best checkpoint with 0.6650 coco/bbox_mAP at 33 epoch is saved to best_coco_bbox_mAP_epoch_33.pth.
2024/05/06 02:53:41 - mmengine - INFO - Epoch(train) [34][ 50/276]  base_lr: 1.0000e-02 lr: 3.9852e-04  eta: 2:28:29  time: 5.5469  data_time: 3.7417  memory: 8168  loss: 1.7419  loss_cls: 1.3188  loss_bbox: 0.4231
2024/05/06 02:57:42 - mmengine - INFO - Epoch(train) [34][100/276]  base_lr: 1.0000e-02 lr: 3.9852e-04  eta: 2:18:30  time: 4.8087  data_time: 1.5416  memory: 8168  loss: 1.7809  loss_cls: 1.3677  loss_bbox: 0.4132
2024/05/06 03:02:06 - mmengine - INFO - Epoch(train) [34][150/276]  base_lr: 1.0000e-02 lr: 3.9852e-04  eta: 2:08:37  time: 5.2915  data_time: 0.6630  memory: 8168  loss: 1.7669  loss_cls: 1.3300  loss_bbox: 0.4369
2024/05/06 03:06:06 - mmengine - INFO - Epoch(train) [34][200/276]  base_lr: 1.0000e-02 lr: 3.9852e-04  eta: 1:58:45  time: 4.7941  data_time: 0.4020  memory: 8168  loss: 1.7808  loss_cls: 1.3444  loss_bbox: 0.4363
2024/05/06 03:09:57 - mmengine - INFO - Epoch(train) [34][250/276]  base_lr: 1.0000e-02 lr: 3.9852e-04  eta: 1:48:57  time: 4.6099  data_time: 0.4644  memory: 8168  loss: 1.7378  loss_cls: 1.3336  loss_bbox: 0.4043
2024/05/06 03:11:36 - mmengine - INFO - Exp name: yolov6_l_syncbn_fast_8xb32-300e_coco_20240504_191744
2024/05/06 03:11:36 - mmengine - INFO - Saving checkpoint at 34 epochs
2024/05/06 03:12:20 - mmengine - INFO - Epoch(val) [34][ 50/552]    eta: 0:06:42  time: 0.8022  data_time: 0.7765  memory: 8168  
2024/05/06 03:13:01 - mmengine - INFO - Epoch(val) [34][100/552]    eta: 0:06:03  time: 0.8079  data_time: 0.7837  memory: 1208  
2024/05/06 03:13:20 - mmengine - INFO - Epoch(val) [34][150/552]    eta: 0:04:26  time: 0.3802  data_time: 0.3563  memory: 1208  
2024/05/06 03:13:37 - mmengine - INFO - Epoch(val) [34][200/552]    eta: 0:03:25  time: 0.3418  data_time: 0.3156  memory: 1194  
2024/05/06 03:13:54 - mmengine - INFO - Epoch(val) [34][250/552]    eta: 0:02:41  time: 0.3407  data_time: 0.3158  memory: 1194  
2024/05/06 03:14:11 - mmengine - INFO - Epoch(val) [34][300/552]    eta: 0:02:06  time: 0.3339  data_time: 0.3088  memory: 1194  
2024/05/06 03:14:28 - mmengine - INFO - Epoch(val) [34][350/552]    eta: 0:01:36  time: 0.3505  data_time: 0.3249  memory: 1196  
2024/05/06 03:14:43 - mmengine - INFO - Epoch(val) [34][400/552]    eta: 0:01:09  time: 0.2929  data_time: 0.2681  memory: 1196  
2024/05/06 03:14:58 - mmengine - INFO - Epoch(val) [34][450/552]    eta: 0:00:44  time: 0.3040  data_time: 0.2792  memory: 1196  
2024/05/06 03:15:13 - mmengine - INFO - Epoch(val) [34][500/552]    eta: 0:00:22  time: 0.3015  data_time: 0.2780  memory: 1196  
2024/05/06 03:15:28 - mmengine - INFO - Epoch(val) [34][550/552]    eta: 0:00:00  time: 0.3009  data_time: 0.2752  memory: 1196  
2024/05/06 03:15:45 - mmengine - INFO - Evaluating bbox...
2024/05/06 03:15:50 - mmengine - INFO - bbox_mAP_copypaste: 0.667 0.786 0.723 -1.000 -1.000 0.667
2024/05/06 03:15:51 - mmengine - INFO - Epoch(val) [34][552/552]    coco/bbox_mAP: 0.6670  coco/bbox_mAP_50: 0.7860  coco/bbox_mAP_75: 0.7230  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.6670  data_time: 0.3880  time: 0.4129
2024/05/06 03:15:51 - mmengine - INFO - The previous best checkpoint /media/iris/Dong/openmmlab/detection/coding/yolov6/yolov6_l_syncbn_fast_8xb32-300e_coco/best_coco_bbox_mAP_epoch_33.pth is removed
2024/05/06 03:15:54 - mmengine - INFO - The best checkpoint with 0.6670 coco/bbox_mAP at 34 epoch is saved to best_coco_bbox_mAP_epoch_34.pth.
2024/05/06 03:20:46 - mmengine - INFO - Epoch(train) [35][ 50/276]  base_lr: 1.0000e-02 lr: 2.6867e-04  eta: 1:34:12  time: 5.7618  data_time: 3.2072  memory: 8168  loss: 1.7309  loss_cls: 1.3138  loss_bbox: 0.4171
2024/05/06 03:24:44 - mmengine - INFO - Epoch(train) [35][100/276]  base_lr: 1.0000e-02 lr: 2.6867e-04  eta: 1:24:34  time: 4.7627  data_time: 2.0970  memory: 8168  loss: 1.7290  loss_cls: 1.3044  loss_bbox: 0.4246
2024/05/06 03:28:37 - mmengine - INFO - Epoch(train) [35][150/276]  base_lr: 1.0000e-02 lr: 2.6867e-04  eta: 1:14:59  time: 4.6534  data_time: 0.2505  memory: 8168  loss: 1.7274  loss_cls: 1.3122  loss_bbox: 0.4152
2024/05/06 03:32:39 - mmengine - INFO - Epoch(train) [35][200/276]  base_lr: 1.0000e-02 lr: 2.6867e-04  eta: 1:05:27  time: 4.8305  data_time: 0.1453  memory: 8168  loss: 1.7889  loss_cls: 1.3740  loss_bbox: 0.4149
2024/05/06 03:36:53 - mmengine - INFO - Epoch(train) [35][250/276]  base_lr: 1.0000e-02 lr: 2.6867e-04  eta: 0:56:00  time: 5.0838  data_time: 0.3475  memory: 8168  loss: 1.7465  loss_cls: 1.3356  loss_bbox: 0.4109
2024/05/06 03:38:33 - mmengine - INFO - Exp name: yolov6_l_syncbn_fast_8xb32-300e_coco_20240504_191744
2024/05/06 03:38:33 - mmengine - INFO - Saving checkpoint at 35 epochs
2024/05/06 03:39:14 - mmengine - INFO - Epoch(val) [35][ 50/552]    eta: 0:06:16  time: 0.7503  data_time: 0.7232  memory: 8168  
2024/05/06 03:39:53 - mmengine - INFO - Epoch(val) [35][100/552]    eta: 0:05:41  time: 0.7625  data_time: 0.7369  memory: 1208  
2024/05/06 03:40:10 - mmengine - INFO - Epoch(val) [35][150/552]    eta: 0:04:10  time: 0.3537  data_time: 0.3287  memory: 1208  
2024/05/06 03:40:29 - mmengine - INFO - Epoch(val) [35][200/552]    eta: 0:03:16  time: 0.3663  data_time: 0.3428  memory: 1194  
2024/05/06 03:40:47 - mmengine - INFO - Epoch(val) [35][250/552]    eta: 0:02:37  time: 0.3678  data_time: 0.3419  memory: 1194  
2024/05/06 03:41:04 - mmengine - INFO - Epoch(val) [35][300/552]    eta: 0:02:03  time: 0.3320  data_time: 0.3078  memory: 1194  
2024/05/06 03:41:20 - mmengine - INFO - Epoch(val) [35][350/552]    eta: 0:01:34  time: 0.3369  data_time: 0.3107  memory: 1196  
2024/05/06 03:41:35 - mmengine - INFO - Epoch(val) [35][400/552]    eta: 0:01:07  time: 0.2978  data_time: 0.2737  memory: 1196  
2024/05/06 03:41:50 - mmengine - INFO - Epoch(val) [35][450/552]    eta: 0:00:43  time: 0.3021  data_time: 0.2777  memory: 1196  
2024/05/06 03:42:06 - mmengine - INFO - Epoch(val) [35][500/552]    eta: 0:00:21  time: 0.3145  data_time: 0.2903  memory: 1196  
2024/05/06 03:42:22 - mmengine - INFO - Epoch(val) [35][550/552]    eta: 0:00:00  time: 0.3079  data_time: 0.2835  memory: 1196  
2024/05/06 03:42:41 - mmengine - INFO - Evaluating bbox...
2024/05/06 03:42:47 - mmengine - INFO - bbox_mAP_copypaste: 0.667 0.790 0.725 -1.000 -1.000 0.667
2024/05/06 03:42:47 - mmengine - INFO - Epoch(val) [35][552/552]    coco/bbox_mAP: 0.6670  coco/bbox_mAP_50: 0.7900  coco/bbox_mAP_75: 0.7250  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.6670  data_time: 0.3827  time: 0.4077
2024/05/06 03:47:35 - mmengine - INFO - Epoch(train) [36][ 50/276]  base_lr: 1.0000e-02 lr: 1.7520e-04  eta: 0:41:44  time: 5.7630  data_time: 5.0292  memory: 8168  loss: 1.7598  loss_cls: 1.3451  loss_bbox: 0.4148
2024/05/06 03:51:45 - mmengine - INFO - Epoch(train) [36][100/276]  base_lr: 1.0000e-02 lr: 1.7520e-04  eta: 0:32:24  time: 4.9914  data_time: 2.9110  memory: 8168  loss: 1.7107  loss_cls: 1.3015  loss_bbox: 0.4091
2024/05/06 03:56:08 - mmengine - INFO - Epoch(train) [36][150/276]  base_lr: 1.0000e-02 lr: 1.7520e-04  eta: 0:23:08  time: 5.2717  data_time: 0.9820  memory: 8168  loss: 1.7294  loss_cls: 1.3269  loss_bbox: 0.4025
2024/05/06 04:00:27 - mmengine - INFO - Epoch(train) [36][200/276]  base_lr: 1.0000e-02 lr: 1.7520e-04  eta: 0:13:55  time: 5.1820  data_time: 0.0012  memory: 8168  loss: 1.7683  loss_cls: 1.3581  loss_bbox: 0.4102
2024/05/06 04:04:03 - mmengine - INFO - Epoch(train) [36][250/276]  base_lr: 1.0000e-02 lr: 1.7520e-04  eta: 0:04:44  time: 4.3232  data_time: 0.0007  memory: 8168  loss: 1.7638  loss_cls: 1.3674  loss_bbox: 0.3965
2024/05/06 04:05:47 - mmengine - INFO - Exp name: yolov6_l_syncbn_fast_8xb32-300e_coco_20240504_191744
2024/05/06 04:05:47 - mmengine - INFO - Saving checkpoint at 36 epochs
2024/05/06 04:06:32 - mmengine - INFO - Epoch(val) [36][ 50/552]    eta: 0:06:48  time: 0.8144  data_time: 0.7883  memory: 8168  
2024/05/06 04:07:11 - mmengine - INFO - Epoch(val) [36][100/552]    eta: 0:05:56  time: 0.7640  data_time: 0.7381  memory: 1208  
2024/05/06 04:07:29 - mmengine - INFO - Epoch(val) [36][150/552]    eta: 0:04:20  time: 0.3624  data_time: 0.3384  memory: 1208  
2024/05/06 04:07:48 - mmengine - INFO - Epoch(val) [36][200/552]    eta: 0:03:25  time: 0.3926  data_time: 0.3689  memory: 1194  
2024/05/06 04:08:06 - mmengine - INFO - Epoch(val) [36][250/552]    eta: 0:02:42  time: 0.3643  data_time: 0.3402  memory: 1194  
2024/05/06 04:08:24 - mmengine - INFO - Epoch(val) [36][300/552]    eta: 0:02:08  time: 0.3517  data_time: 0.3275  memory: 1194  
2024/05/06 04:08:42 - mmengine - INFO - Epoch(val) [36][350/552]    eta: 0:01:38  time: 0.3522  data_time: 0.3270  memory: 1196  
2024/05/06 04:08:57 - mmengine - INFO - Epoch(val) [36][400/552]    eta: 0:01:10  time: 0.3043  data_time: 0.2798  memory: 1196  
2024/05/06 04:09:12 - mmengine - INFO - Epoch(val) [36][450/552]    eta: 0:00:45  time: 0.3014  data_time: 0.2776  memory: 1196  
2024/05/06 04:09:26 - mmengine - INFO - Epoch(val) [36][500/552]    eta: 0:00:22  time: 0.2902  data_time: 0.2641  memory: 1196  
2024/05/06 04:09:44 - mmengine - INFO - Epoch(val) [36][550/552]    eta: 0:00:00  time: 0.3401  data_time: 0.3166  memory: 1196  
2024/05/06 04:10:00 - mmengine - INFO - Evaluating bbox...
2024/05/06 04:10:06 - mmengine - INFO - bbox_mAP_copypaste: 0.668 0.789 0.725 -1.000 -1.000 0.668
2024/05/06 04:10:06 - mmengine - INFO - Epoch(val) [36][552/552]    coco/bbox_mAP: 0.6680  coco/bbox_mAP_50: 0.7890  coco/bbox_mAP_75: 0.7250  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.6680  data_time: 0.3950  time: 0.4196
2024/05/06 04:10:06 - mmengine - INFO - The previous best checkpoint /media/iris/Dong/openmmlab/detection/coding/yolov6/yolov6_l_syncbn_fast_8xb32-300e_coco/best_coco_bbox_mAP_epoch_34.pth is removed
2024/05/06 04:10:09 - mmengine - INFO - The best checkpoint with 0.6680 coco/bbox_mAP at 36 epoch is saved to best_coco_bbox_mAP_epoch_36.pth.
