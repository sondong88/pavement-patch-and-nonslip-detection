2024/05/01 20:55:12 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.8.18 (default, Sep 11 2023, 13:40:15) [GCC 11.2.0]
    CUDA available: True
    numpy_random_seed: 2125445880
    GPU 0,1: NVIDIA GeForce RTX 3080 Ti
    CUDA_HOME: /usr/local/cuda
    NVCC: Cuda compilation tools, release 11.4, V11.4.48
    GCC: gcc (Ubuntu 9.4.0-1ubuntu1~20.04.2) 9.4.0
    PyTorch: 1.11.0
    PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.5.2 (Git Hash a9302535553c73243c632ad3c4c80beec3d19a1e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.11.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.12.0
    OpenCV: 4.9.0
    MMEngine: 0.10.2

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 2125445880
    Distributed launcher: pytorch
    Distributed training: True
    GPU number: 2
------------------------------------------------------------

2024/05/01 20:55:12 - mmengine - INFO - Config:
_backend_args = None
_multiscale_resize_transforms = [
    dict(
        transforms=[
            dict(scale=(
                640,
                640,
            ), type='YOLOv5KeepRatioResize'),
            dict(
                allow_scale_up=False,
                pad_val=dict(img=114),
                scale=(
                    640,
                    640,
                ),
                type='LetterResize'),
        ],
        type='Compose'),
    dict(
        transforms=[
            dict(scale=(
                320,
                320,
            ), type='YOLOv5KeepRatioResize'),
            dict(
                allow_scale_up=False,
                pad_val=dict(img=114),
                scale=(
                    320,
                    320,
                ),
                type='LetterResize'),
        ],
        type='Compose'),
    dict(
        transforms=[
            dict(scale=(
                960,
                960,
            ), type='YOLOv5KeepRatioResize'),
            dict(
                allow_scale_up=False,
                pad_val=dict(img=114),
                scale=(
                    960,
                    960,
                ),
                type='LetterResize'),
        ],
        type='Compose'),
]
affine_scale = 0.5
backend_args = None
base_lr = 0.01
batch_shapes_cfg = dict(
    batch_size=1,
    extra_pad_ratio=0.5,
    img_size=640,
    size_divisor=32,
    type='BatchShapePolicy')
custom_hooks = [
    dict(
        ema_type='ExpMomentumEMA',
        momentum=0.0001,
        priority=49,
        strict_load=False,
        type='EMAHook',
        update_buffers=True),
    dict(
        switch_epoch=21,
        switch_pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(scale=(
                640,
                640,
            ), type='YOLOv5KeepRatioResize'),
            dict(
                allow_scale_up=True,
                pad_val=dict(img=114),
                scale=(
                    640,
                    640,
                ),
                type='LetterResize'),
            dict(
                max_rotate_degree=0.0,
                max_shear_degree=0.0,
                max_translate_ratio=0.1,
                scaling_ratio_range=(
                    0.5,
                    1.5,
                ),
                type='YOLOv5RandomAffine'),
            dict(type='YOLOv5HSVRandomAug'),
            dict(prob=0.5, type='mmdet.RandomFlip'),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'flip',
                    'flip_direction',
                ),
                type='mmdet.PackDetInputs'),
        ],
        type='mmdet.PipelineSwitchHook'),
]
data_root = '/media/iris/새 볼륨/nonslip_patching_paper/coco_format/'
dataset_type = 'YOLOv5CocoDataset'
deepen_factor = 0.33
default_hooks = dict(
    checkpoint=dict(
        interval=1, max_keep_ckpts=3, save_best='auto', type='CheckpointHook'),
    logger=dict(interval=50, type='LoggerHook'),
    param_scheduler=dict(
        lr_factor=0.01,
        max_epochs=36,
        scheduler_type='cosine',
        type='YOLOv5ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='mmdet.DetVisualizationHook'))
default_scope = 'mmyolo'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_scale = (
    640,
    640,
)
img_scales = [
    (
        640,
        640,
    ),
    (
        320,
        320,
    ),
    (
        960,
        960,
    ),
]
launcher = 'pytorch'
load_from = None
log_level = 'INFO'
log_processor = dict(by_epoch=True, type='LogProcessor', window_size=50)
lr_factor = 0.01
max_epochs = 36
max_keep_ckpts = 3
model = dict(
    backbone=dict(
        act_cfg=dict(inplace=True, type='ReLU'),
        deepen_factor=0.33,
        norm_cfg=dict(eps=0.001, momentum=0.03, type='BN'),
        type='YOLOv6EfficientRep',
        widen_factor=0.5),
    bbox_head=dict(
        head_module=dict(
            act_cfg=dict(inplace=True, type='SiLU'),
            featmap_strides=[
                8,
                16,
                32,
            ],
            in_channels=[
                128,
                256,
                512,
            ],
            norm_cfg=dict(eps=0.001, momentum=0.03, type='BN'),
            num_classes=4,
            type='YOLOv6HeadModule',
            widen_factor=0.5),
        loss_bbox=dict(
            bbox_format='xyxy',
            iou_mode='giou',
            loss_weight=2.5,
            reduction='mean',
            return_iou=False,
            type='IoULoss'),
        type='YOLOv6Head'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            0.0,
            0.0,
            0.0,
        ],
        std=[
            255.0,
            255.0,
            255.0,
        ],
        type='YOLOv5DetDataPreprocessor'),
    neck=dict(
        act_cfg=dict(inplace=True, type='ReLU'),
        deepen_factor=0.33,
        in_channels=[
            256,
            512,
            1024,
        ],
        norm_cfg=dict(eps=0.001, momentum=0.03, type='BN'),
        num_csp_blocks=12,
        out_channels=[
            128,
            256,
            512,
        ],
        type='YOLOv6RepPAFPN',
        widen_factor=0.5),
    test_cfg=dict(
        max_per_img=300,
        multi_label=True,
        nms=dict(iou_threshold=0.65, type='nms'),
        nms_pre=30000,
        score_thr=0.001),
    train_cfg=dict(
        assigner=dict(
            alpha=1,
            beta=6,
            num_classes=4,
            topk=13,
            type='BatchTaskAlignedAssigner'),
        initial_assigner=dict(
            iou_calculator=dict(type='mmdet.BboxOverlaps2D'),
            num_classes=4,
            topk=9,
            type='BatchATSSAssigner'),
        initial_epoch=4),
    type='YOLODetector')
num_classes = 4
num_last_epochs = 15
optim_wrapper = dict(
    constructor='YOLOv5OptimizerConstructor',
    optimizer=dict(
        batch_size_per_gpu=16,
        lr=0.01,
        momentum=0.937,
        nesterov=True,
        type='SGD',
        weight_decay=0.0005),
    type='OptimWrapper')
persistent_workers = True
pre_transform = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
]
resume = False
save_epoch_intervals = 1
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        ann_file='annotations/instances_val2017.json',
        batch_shapes_cfg=dict(
            batch_size=1,
            extra_pad_ratio=0.5,
            img_size=640,
            size_divisor=32,
            type='BatchShapePolicy'),
        data_prefix=dict(img='val2017/'),
        data_root='/media/iris/새 볼륨/nonslip_patching_paper/coco_format/',
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(scale=(
                640,
                640,
            ), type='YOLOv5KeepRatioResize'),
            dict(
                allow_scale_up=False,
                pad_val=dict(img=114),
                scale=(
                    640,
                    640,
                ),
                type='LetterResize'),
            dict(_scope_='mmdet', type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                    'pad_param',
                ),
                type='mmdet.PackDetInputs'),
        ],
        test_mode=True,
        type='YOLOv5CocoDataset'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    pin_memory=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    ann_file=
    '/media/iris/새 볼륨/nonslip_patching_paper/coco_format/annotations/instances_val2017.json',
    metric='bbox',
    proposal_nums=(
        100,
        1,
        10,
    ),
    type='mmdet.CocoMetric')
test_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(scale=(
        640,
        640,
    ), type='YOLOv5KeepRatioResize'),
    dict(
        allow_scale_up=False,
        pad_val=dict(img=114),
        scale=(
            640,
            640,
        ),
        type='LetterResize'),
    dict(_scope_='mmdet', type='LoadAnnotations', with_bbox=True),
    dict(
        meta_keys=(
            'img_id',
            'img_path',
            'ori_shape',
            'img_shape',
            'scale_factor',
            'pad_param',
        ),
        type='mmdet.PackDetInputs'),
]
train_ann_file = 'annotations/instances_train2017.json'
train_batch_size_per_gpu = 16
train_cfg = dict(
    dynamic_intervals=[
        (
            21,
            1,
        ),
    ],
    max_epochs=36,
    type='EpochBasedTrainLoop',
    val_interval=1)
train_data_prefix = 'train2017/'
train_dataloader = dict(
    batch_size=16,
    collate_fn=dict(type='yolov5_collate'),
    dataset=dict(
        ann_file='annotations/instances_train2017.json',
        data_prefix=dict(img='train2017/'),
        data_root='/media/iris/새 볼륨/nonslip_patching_paper/coco_format/',
        filter_cfg=dict(filter_empty_gt=False, min_size=32),
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                img_scale=(
                    640,
                    640,
                ),
                pad_val=114.0,
                pre_transform=[
                    dict(backend_args=None, type='LoadImageFromFile'),
                    dict(type='LoadAnnotations', with_bbox=True),
                ],
                type='Mosaic'),
            dict(
                border=(
                    -320,
                    -320,
                ),
                border_val=(
                    114,
                    114,
                    114,
                ),
                max_rotate_degree=0.0,
                max_shear_degree=0.0,
                max_translate_ratio=0.1,
                scaling_ratio_range=(
                    0.5,
                    1.5,
                ),
                type='YOLOv5RandomAffine'),
            dict(type='YOLOv5HSVRandomAug'),
            dict(prob=0.5, type='mmdet.RandomFlip'),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'flip',
                    'flip_direction',
                ),
                type='mmdet.PackDetInputs'),
        ],
        type='YOLOv5CocoDataset'),
    num_workers=8,
    persistent_workers=True,
    pin_memory=True,
    sampler=dict(shuffle=True, type='DefaultSampler'))
train_num_workers = 8
train_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(
        img_scale=(
            640,
            640,
        ),
        pad_val=114.0,
        pre_transform=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
        ],
        type='Mosaic'),
    dict(
        border=(
            -320,
            -320,
        ),
        border_val=(
            114,
            114,
            114,
        ),
        max_rotate_degree=0.0,
        max_shear_degree=0.0,
        max_translate_ratio=0.1,
        scaling_ratio_range=(
            0.5,
            1.5,
        ),
        type='YOLOv5RandomAffine'),
    dict(type='YOLOv5HSVRandomAug'),
    dict(prob=0.5, type='mmdet.RandomFlip'),
    dict(
        meta_keys=(
            'img_id',
            'img_path',
            'ori_shape',
            'img_shape',
            'flip',
            'flip_direction',
        ),
        type='mmdet.PackDetInputs'),
]
train_pipeline_stage2 = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(scale=(
        640,
        640,
    ), type='YOLOv5KeepRatioResize'),
    dict(
        allow_scale_up=True,
        pad_val=dict(img=114),
        scale=(
            640,
            640,
        ),
        type='LetterResize'),
    dict(
        max_rotate_degree=0.0,
        max_shear_degree=0.0,
        max_translate_ratio=0.1,
        scaling_ratio_range=(
            0.5,
            1.5,
        ),
        type='YOLOv5RandomAffine'),
    dict(type='YOLOv5HSVRandomAug'),
    dict(prob=0.5, type='mmdet.RandomFlip'),
    dict(
        meta_keys=(
            'img_id',
            'img_path',
            'ori_shape',
            'img_shape',
            'flip',
            'flip_direction',
        ),
        type='mmdet.PackDetInputs'),
]
tta_model = dict(
    tta_cfg=dict(max_per_img=300, nms=dict(iou_threshold=0.65, type='nms')),
    type='mmdet.DetTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(
                    transforms=[
                        dict(scale=(
                            640,
                            640,
                        ), type='YOLOv5KeepRatioResize'),
                        dict(
                            allow_scale_up=False,
                            pad_val=dict(img=114),
                            scale=(
                                640,
                                640,
                            ),
                            type='LetterResize'),
                    ],
                    type='Compose'),
                dict(
                    transforms=[
                        dict(scale=(
                            320,
                            320,
                        ), type='YOLOv5KeepRatioResize'),
                        dict(
                            allow_scale_up=False,
                            pad_val=dict(img=114),
                            scale=(
                                320,
                                320,
                            ),
                            type='LetterResize'),
                    ],
                    type='Compose'),
                dict(
                    transforms=[
                        dict(scale=(
                            960,
                            960,
                        ), type='YOLOv5KeepRatioResize'),
                        dict(
                            allow_scale_up=False,
                            pad_val=dict(img=114),
                            scale=(
                                960,
                                960,
                            ),
                            type='LetterResize'),
                    ],
                    type='Compose'),
            ],
            [
                dict(prob=1.0, type='mmdet.RandomFlip'),
                dict(prob=0.0, type='mmdet.RandomFlip'),
            ],
            [
                dict(type='mmdet.LoadAnnotations', with_bbox=True),
            ],
            [
                dict(
                    meta_keys=(
                        'img_id',
                        'img_path',
                        'ori_shape',
                        'img_shape',
                        'scale_factor',
                        'pad_param',
                        'flip',
                        'flip_direction',
                    ),
                    type='mmdet.PackDetInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_ann_file = 'annotations/instances_val2017.json'
val_batch_size_per_gpu = 1
val_cfg = dict(type='ValLoop')
val_data_prefix = 'val2017/'
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        ann_file='annotations/instances_val2017.json',
        batch_shapes_cfg=dict(
            batch_size=1,
            extra_pad_ratio=0.5,
            img_size=640,
            size_divisor=32,
            type='BatchShapePolicy'),
        data_prefix=dict(img='val2017/'),
        data_root='/media/iris/새 볼륨/nonslip_patching_paper/coco_format/',
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(scale=(
                640,
                640,
            ), type='YOLOv5KeepRatioResize'),
            dict(
                allow_scale_up=False,
                pad_val=dict(img=114),
                scale=(
                    640,
                    640,
                ),
                type='LetterResize'),
            dict(_scope_='mmdet', type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                    'pad_param',
                ),
                type='mmdet.PackDetInputs'),
        ],
        test_mode=True,
        type='YOLOv5CocoDataset'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    pin_memory=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    ann_file=
    '/media/iris/새 볼륨/nonslip_patching_paper/coco_format/annotations/instances_val2017.json',
    metric='bbox',
    proposal_nums=(
        100,
        1,
        10,
    ),
    type='mmdet.CocoMetric')
val_num_workers = 2
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='mmdet.DetLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
weight_decay = 0.0005
widen_factor = 0.5
work_dir = 'yolov6_s_syncbn_fast_8xb32-400e_coco'

2024/05/01 20:55:13 - mmengine - INFO - Using SyncBatchNorm()
2024/05/01 20:55:13 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_load_checkpoint:
(49          ) EMAHook                            
 -------------------- 
before_train:
(9           ) YOLOv5ParamSchedulerHook           
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
(NORMAL      ) PipelineSwitchHook                 
 -------------------- 
before_train_iter:
(9           ) YOLOv5ParamSchedulerHook           
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(9           ) YOLOv5ParamSchedulerHook           
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(9           ) YOLOv5ParamSchedulerHook           
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(9           ) YOLOv5ParamSchedulerHook           
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_save_checkpoint:
(49          ) EMAHook                            
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
2024/05/01 20:55:13 - mmengine - INFO - Optimizer groups: 121 .bias, 93 conv.weight, 113 other
Name of parameter - Initialization information

backbone.stem.rbr_dense.conv.weight - torch.Size([32, 3, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6EfficientRep  

backbone.stem.rbr_dense.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stem.rbr_dense.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stem.rbr_1x1.conv.weight - torch.Size([32, 3, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6EfficientRep  

backbone.stem.rbr_1x1.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stem.rbr_1x1.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage1.0.0.rbr_dense.conv.weight - torch.Size([64, 32, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6EfficientRep  

backbone.stage1.0.0.rbr_dense.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage1.0.0.rbr_dense.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage1.0.0.rbr_1x1.conv.weight - torch.Size([64, 32, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6EfficientRep  

backbone.stage1.0.0.rbr_1x1.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage1.0.0.rbr_1x1.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage1.0.1.conv1.rbr_identity.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage1.0.1.conv1.rbr_identity.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage1.0.1.conv1.rbr_dense.conv.weight - torch.Size([64, 64, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6EfficientRep  

backbone.stage1.0.1.conv1.rbr_dense.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage1.0.1.conv1.rbr_dense.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage1.0.1.conv1.rbr_1x1.conv.weight - torch.Size([64, 64, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6EfficientRep  

backbone.stage1.0.1.conv1.rbr_1x1.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage1.0.1.conv1.rbr_1x1.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage1.0.1.block.0.rbr_identity.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage1.0.1.block.0.rbr_identity.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage1.0.1.block.0.rbr_dense.conv.weight - torch.Size([64, 64, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6EfficientRep  

backbone.stage1.0.1.block.0.rbr_dense.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage1.0.1.block.0.rbr_dense.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage1.0.1.block.0.rbr_1x1.conv.weight - torch.Size([64, 64, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6EfficientRep  

backbone.stage1.0.1.block.0.rbr_1x1.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage1.0.1.block.0.rbr_1x1.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.0.rbr_dense.conv.weight - torch.Size([128, 64, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6EfficientRep  

backbone.stage2.0.0.rbr_dense.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.0.rbr_dense.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.0.rbr_1x1.conv.weight - torch.Size([128, 64, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6EfficientRep  

backbone.stage2.0.0.rbr_1x1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.0.rbr_1x1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.conv1.rbr_identity.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.conv1.rbr_identity.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.conv1.rbr_dense.conv.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6EfficientRep  

backbone.stage2.0.1.conv1.rbr_dense.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.conv1.rbr_dense.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.conv1.rbr_1x1.conv.weight - torch.Size([128, 128, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6EfficientRep  

backbone.stage2.0.1.conv1.rbr_1x1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.conv1.rbr_1x1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.0.rbr_identity.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.0.rbr_identity.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.0.rbr_dense.conv.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6EfficientRep  

backbone.stage2.0.1.block.0.rbr_dense.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.0.rbr_dense.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.0.rbr_1x1.conv.weight - torch.Size([128, 128, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6EfficientRep  

backbone.stage2.0.1.block.0.rbr_1x1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.0.rbr_1x1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.1.rbr_identity.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.1.rbr_identity.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.1.rbr_dense.conv.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6EfficientRep  

backbone.stage2.0.1.block.1.rbr_dense.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.1.rbr_dense.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.1.rbr_1x1.conv.weight - torch.Size([128, 128, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6EfficientRep  

backbone.stage2.0.1.block.1.rbr_1x1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.1.rbr_1x1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.2.rbr_identity.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.2.rbr_identity.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.2.rbr_dense.conv.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6EfficientRep  

backbone.stage2.0.1.block.2.rbr_dense.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.2.rbr_dense.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.2.rbr_1x1.conv.weight - torch.Size([128, 128, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6EfficientRep  

backbone.stage2.0.1.block.2.rbr_1x1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.2.rbr_1x1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.0.rbr_dense.conv.weight - torch.Size([256, 128, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6EfficientRep  

backbone.stage3.0.0.rbr_dense.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.0.rbr_dense.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.0.rbr_1x1.conv.weight - torch.Size([256, 128, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6EfficientRep  

backbone.stage3.0.0.rbr_1x1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.0.rbr_1x1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.conv1.rbr_identity.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.conv1.rbr_identity.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.conv1.rbr_dense.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6EfficientRep  

backbone.stage3.0.1.conv1.rbr_dense.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.conv1.rbr_dense.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.conv1.rbr_1x1.conv.weight - torch.Size([256, 256, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6EfficientRep  

backbone.stage3.0.1.conv1.rbr_1x1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.conv1.rbr_1x1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.0.rbr_identity.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.0.rbr_identity.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.0.rbr_dense.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6EfficientRep  

backbone.stage3.0.1.block.0.rbr_dense.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.0.rbr_dense.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.0.rbr_1x1.conv.weight - torch.Size([256, 256, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6EfficientRep  

backbone.stage3.0.1.block.0.rbr_1x1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.0.rbr_1x1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.1.rbr_identity.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.1.rbr_identity.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.1.rbr_dense.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6EfficientRep  

backbone.stage3.0.1.block.1.rbr_dense.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.1.rbr_dense.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.1.rbr_1x1.conv.weight - torch.Size([256, 256, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6EfficientRep  

backbone.stage3.0.1.block.1.rbr_1x1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.1.rbr_1x1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.2.rbr_identity.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.2.rbr_identity.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.2.rbr_dense.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6EfficientRep  

backbone.stage3.0.1.block.2.rbr_dense.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.2.rbr_dense.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.2.rbr_1x1.conv.weight - torch.Size([256, 256, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6EfficientRep  

backbone.stage3.0.1.block.2.rbr_1x1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.2.rbr_1x1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.3.rbr_identity.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.3.rbr_identity.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.3.rbr_dense.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6EfficientRep  

backbone.stage3.0.1.block.3.rbr_dense.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.3.rbr_dense.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.3.rbr_1x1.conv.weight - torch.Size([256, 256, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6EfficientRep  

backbone.stage3.0.1.block.3.rbr_1x1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.3.rbr_1x1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.4.rbr_identity.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.4.rbr_identity.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.4.rbr_dense.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6EfficientRep  

backbone.stage3.0.1.block.4.rbr_dense.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.4.rbr_dense.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.4.rbr_1x1.conv.weight - torch.Size([256, 256, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6EfficientRep  

backbone.stage3.0.1.block.4.rbr_1x1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.4.rbr_1x1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.0.0.rbr_dense.conv.weight - torch.Size([512, 256, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6EfficientRep  

backbone.stage4.0.0.rbr_dense.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.0.0.rbr_dense.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.0.0.rbr_1x1.conv.weight - torch.Size([512, 256, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6EfficientRep  

backbone.stage4.0.0.rbr_1x1.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.0.0.rbr_1x1.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.0.1.conv1.rbr_identity.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.0.1.conv1.rbr_identity.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.0.1.conv1.rbr_dense.conv.weight - torch.Size([512, 512, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6EfficientRep  

backbone.stage4.0.1.conv1.rbr_dense.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.0.1.conv1.rbr_dense.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.0.1.conv1.rbr_1x1.conv.weight - torch.Size([512, 512, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6EfficientRep  

backbone.stage4.0.1.conv1.rbr_1x1.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.0.1.conv1.rbr_1x1.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.0.1.block.0.rbr_identity.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.0.1.block.0.rbr_identity.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.0.1.block.0.rbr_dense.conv.weight - torch.Size([512, 512, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6EfficientRep  

backbone.stage4.0.1.block.0.rbr_dense.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.0.1.block.0.rbr_dense.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.0.1.block.0.rbr_1x1.conv.weight - torch.Size([512, 512, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6EfficientRep  

backbone.stage4.0.1.block.0.rbr_1x1.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.0.1.block.0.rbr_1x1.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.1.conv1.conv.weight - torch.Size([256, 512, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6EfficientRep  

backbone.stage4.1.conv1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.1.conv1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.1.conv2.conv.weight - torch.Size([512, 1024, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6EfficientRep  

backbone.stage4.1.conv2.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.1.conv2.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.reduce_layers.2.conv.weight - torch.Size([128, 512, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6RepPAFPN  

neck.reduce_layers.2.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.reduce_layers.2.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.upsample_layers.0.weight - torch.Size([128, 128, 2, 2]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.upsample_layers.0.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.upsample_layers.1.weight - torch.Size([64, 64, 2, 2]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.upsample_layers.1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.conv1.rbr_dense.conv.weight - torch.Size([128, 384, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6RepPAFPN  

neck.top_down_layers.0.0.conv1.rbr_dense.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.conv1.rbr_dense.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.conv1.rbr_1x1.conv.weight - torch.Size([128, 384, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6RepPAFPN  

neck.top_down_layers.0.0.conv1.rbr_1x1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.conv1.rbr_1x1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.0.rbr_identity.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.0.rbr_identity.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.0.rbr_dense.conv.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6RepPAFPN  

neck.top_down_layers.0.0.block.0.rbr_dense.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.0.rbr_dense.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.0.rbr_1x1.conv.weight - torch.Size([128, 128, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6RepPAFPN  

neck.top_down_layers.0.0.block.0.rbr_1x1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.0.rbr_1x1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.1.rbr_identity.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.1.rbr_identity.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.1.rbr_dense.conv.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6RepPAFPN  

neck.top_down_layers.0.0.block.1.rbr_dense.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.1.rbr_dense.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.1.rbr_1x1.conv.weight - torch.Size([128, 128, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6RepPAFPN  

neck.top_down_layers.0.0.block.1.rbr_1x1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.1.rbr_1x1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.2.rbr_identity.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.2.rbr_identity.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.2.rbr_dense.conv.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6RepPAFPN  

neck.top_down_layers.0.0.block.2.rbr_dense.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.2.rbr_dense.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.2.rbr_1x1.conv.weight - torch.Size([128, 128, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6RepPAFPN  

neck.top_down_layers.0.0.block.2.rbr_1x1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.2.rbr_1x1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.1.conv.weight - torch.Size([64, 128, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6RepPAFPN  

neck.top_down_layers.0.1.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.1.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.conv1.rbr_dense.conv.weight - torch.Size([64, 192, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6RepPAFPN  

neck.top_down_layers.1.conv1.rbr_dense.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.conv1.rbr_dense.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.conv1.rbr_1x1.conv.weight - torch.Size([64, 192, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6RepPAFPN  

neck.top_down_layers.1.conv1.rbr_1x1.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.conv1.rbr_1x1.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.0.rbr_identity.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.0.rbr_identity.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.0.rbr_dense.conv.weight - torch.Size([64, 64, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6RepPAFPN  

neck.top_down_layers.1.block.0.rbr_dense.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.0.rbr_dense.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.0.rbr_1x1.conv.weight - torch.Size([64, 64, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6RepPAFPN  

neck.top_down_layers.1.block.0.rbr_1x1.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.0.rbr_1x1.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.1.rbr_identity.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.1.rbr_identity.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.1.rbr_dense.conv.weight - torch.Size([64, 64, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6RepPAFPN  

neck.top_down_layers.1.block.1.rbr_dense.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.1.rbr_dense.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.1.rbr_1x1.conv.weight - torch.Size([64, 64, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6RepPAFPN  

neck.top_down_layers.1.block.1.rbr_1x1.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.1.rbr_1x1.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.2.rbr_identity.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.2.rbr_identity.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.2.rbr_dense.conv.weight - torch.Size([64, 64, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6RepPAFPN  

neck.top_down_layers.1.block.2.rbr_dense.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.2.rbr_dense.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.2.rbr_1x1.conv.weight - torch.Size([64, 64, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6RepPAFPN  

neck.top_down_layers.1.block.2.rbr_1x1.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.2.rbr_1x1.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.downsample_layers.0.conv.weight - torch.Size([64, 64, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6RepPAFPN  

neck.downsample_layers.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.downsample_layers.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.downsample_layers.1.conv.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6RepPAFPN  

neck.downsample_layers.1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.downsample_layers.1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.conv1.rbr_identity.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.conv1.rbr_identity.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.conv1.rbr_dense.conv.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6RepPAFPN  

neck.bottom_up_layers.0.conv1.rbr_dense.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.conv1.rbr_dense.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.conv1.rbr_1x1.conv.weight - torch.Size([128, 128, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6RepPAFPN  

neck.bottom_up_layers.0.conv1.rbr_1x1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.conv1.rbr_1x1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.0.rbr_identity.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.0.rbr_identity.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.0.rbr_dense.conv.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6RepPAFPN  

neck.bottom_up_layers.0.block.0.rbr_dense.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.0.rbr_dense.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.0.rbr_1x1.conv.weight - torch.Size([128, 128, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6RepPAFPN  

neck.bottom_up_layers.0.block.0.rbr_1x1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.0.rbr_1x1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.1.rbr_identity.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.1.rbr_identity.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.1.rbr_dense.conv.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6RepPAFPN  

neck.bottom_up_layers.0.block.1.rbr_dense.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.1.rbr_dense.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.1.rbr_1x1.conv.weight - torch.Size([128, 128, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6RepPAFPN  

neck.bottom_up_layers.0.block.1.rbr_1x1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.1.rbr_1x1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.2.rbr_identity.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.2.rbr_identity.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.2.rbr_dense.conv.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6RepPAFPN  

neck.bottom_up_layers.0.block.2.rbr_dense.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.2.rbr_dense.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.2.rbr_1x1.conv.weight - torch.Size([128, 128, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6RepPAFPN  

neck.bottom_up_layers.0.block.2.rbr_1x1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.2.rbr_1x1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.conv1.rbr_identity.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.conv1.rbr_identity.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.conv1.rbr_dense.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6RepPAFPN  

neck.bottom_up_layers.1.conv1.rbr_dense.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.conv1.rbr_dense.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.conv1.rbr_1x1.conv.weight - torch.Size([256, 256, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6RepPAFPN  

neck.bottom_up_layers.1.conv1.rbr_1x1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.conv1.rbr_1x1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.0.rbr_identity.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.0.rbr_identity.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.0.rbr_dense.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6RepPAFPN  

neck.bottom_up_layers.1.block.0.rbr_dense.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.0.rbr_dense.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.0.rbr_1x1.conv.weight - torch.Size([256, 256, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6RepPAFPN  

neck.bottom_up_layers.1.block.0.rbr_1x1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.0.rbr_1x1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.1.rbr_identity.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.1.rbr_identity.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.1.rbr_dense.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6RepPAFPN  

neck.bottom_up_layers.1.block.1.rbr_dense.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.1.rbr_dense.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.1.rbr_1x1.conv.weight - torch.Size([256, 256, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6RepPAFPN  

neck.bottom_up_layers.1.block.1.rbr_1x1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.1.rbr_1x1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.2.rbr_identity.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.2.rbr_identity.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.2.rbr_dense.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6RepPAFPN  

neck.bottom_up_layers.1.block.2.rbr_dense.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.2.rbr_dense.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.2.rbr_1x1.conv.weight - torch.Size([256, 256, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6RepPAFPN  

neck.bottom_up_layers.1.block.2.rbr_1x1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.2.rbr_1x1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

bbox_head.head_module.cls_convs.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of YOLODetector  

bbox_head.head_module.cls_convs.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

bbox_head.head_module.cls_convs.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

bbox_head.head_module.cls_convs.1.conv.weight - torch.Size([128, 128, 3, 3]): 
The value is the same before and after calling `init_weights` of YOLODetector  

bbox_head.head_module.cls_convs.1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

bbox_head.head_module.cls_convs.1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

bbox_head.head_module.cls_convs.2.conv.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of YOLODetector  

bbox_head.head_module.cls_convs.2.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

bbox_head.head_module.cls_convs.2.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

bbox_head.head_module.reg_convs.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of YOLODetector  

bbox_head.head_module.reg_convs.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

bbox_head.head_module.reg_convs.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

bbox_head.head_module.reg_convs.1.conv.weight - torch.Size([128, 128, 3, 3]): 
The value is the same before and after calling `init_weights` of YOLODetector  

bbox_head.head_module.reg_convs.1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

bbox_head.head_module.reg_convs.1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

bbox_head.head_module.reg_convs.2.conv.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of YOLODetector  

bbox_head.head_module.reg_convs.2.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

bbox_head.head_module.reg_convs.2.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

bbox_head.head_module.cls_preds.0.weight - torch.Size([4, 64, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6HeadModule  

bbox_head.head_module.cls_preds.0.bias - torch.Size([4]): 
Initialized by user-defined `init_weights` in YOLOv6HeadModule  

bbox_head.head_module.cls_preds.1.weight - torch.Size([4, 128, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6HeadModule  

bbox_head.head_module.cls_preds.1.bias - torch.Size([4]): 
Initialized by user-defined `init_weights` in YOLOv6HeadModule  

bbox_head.head_module.cls_preds.2.weight - torch.Size([4, 256, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6HeadModule  

bbox_head.head_module.cls_preds.2.bias - torch.Size([4]): 
Initialized by user-defined `init_weights` in YOLOv6HeadModule  

bbox_head.head_module.reg_preds.0.weight - torch.Size([4, 64, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6HeadModule  

bbox_head.head_module.reg_preds.0.bias - torch.Size([4]): 
Initialized by user-defined `init_weights` in YOLOv6HeadModule  

bbox_head.head_module.reg_preds.1.weight - torch.Size([4, 128, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6HeadModule  

bbox_head.head_module.reg_preds.1.bias - torch.Size([4]): 
Initialized by user-defined `init_weights` in YOLOv6HeadModule  

bbox_head.head_module.reg_preds.2.weight - torch.Size([4, 256, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6HeadModule  

bbox_head.head_module.reg_preds.2.bias - torch.Size([4]): 
Initialized by user-defined `init_weights` in YOLOv6HeadModule  

bbox_head.head_module.stems.0.conv.weight - torch.Size([64, 64, 1, 1]): 
The value is the same before and after calling `init_weights` of YOLODetector  

bbox_head.head_module.stems.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

bbox_head.head_module.stems.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

bbox_head.head_module.stems.1.conv.weight - torch.Size([128, 128, 1, 1]): 
The value is the same before and after calling `init_weights` of YOLODetector  

bbox_head.head_module.stems.1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

bbox_head.head_module.stems.1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

bbox_head.head_module.stems.2.conv.weight - torch.Size([256, 256, 1, 1]): 
The value is the same before and after calling `init_weights` of YOLODetector  

bbox_head.head_module.stems.2.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

bbox_head.head_module.stems.2.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  
2024/05/01 20:55:14 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
2024/05/01 20:55:14 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
2024/05/01 20:55:14 - mmengine - INFO - Checkpoints will be saved to /media/iris/Dong/openmmlab/detection/coding/yolov6/yolov6_s_syncbn_fast_8xb32-400e_coco.
2024/05/01 21:26:26 - mmengine - INFO - Epoch(train)  [1][ 50/138]  base_lr: 1.0000e-02 lr: 4.9000e-04  eta: 2 days, 3:08:26  time: 37.4353  data_time: 25.0929  memory: 7866  loss: 6.0375  loss_cls: 2.4592  loss_bbox: 3.5783
2024/05/01 21:50:24 - mmengine - INFO - Epoch(train)  [1][100/138]  base_lr: 1.0000e-02 lr: 9.9000e-04  eta: 1 day, 20:45:28  time: 28.7638  data_time: 6.0922  memory: 4812  loss: 5.7505  loss_cls: 2.6467  loss_bbox: 3.1038
2024/05/01 22:04:05 - mmengine - INFO - Exp name: yolov6_s_syncbn_fast_8xb32-400e_coco_20240501_205508
2024/05/01 22:04:05 - mmengine - INFO - Saving checkpoint at 1 epochs
2024/05/01 22:04:07 - mmengine - WARNING - `save_param_scheduler` is True but `self.param_schedulers` is None, so skip saving parameter schedulers
2024/05/01 22:04:55 - mmengine - INFO - Epoch(val)  [1][ 50/552]    eta: 0:07:37  time: 0.9120  data_time: 0.8835  memory: 4812  
2024/05/01 22:05:36 - mmengine - INFO - Epoch(val)  [1][100/552]    eta: 0:06:34  time: 0.8328  data_time: 0.8048  memory: 4738  
2024/05/01 22:05:55 - mmengine - INFO - Epoch(val)  [1][150/552]    eta: 0:04:43  time: 0.3682  data_time: 0.3414  memory: 4737  
2024/05/01 22:06:13 - mmengine - INFO - Epoch(val)  [1][200/552]    eta: 0:03:38  time: 0.3697  data_time: 0.3478  memory: 408  
2024/05/01 22:06:32 - mmengine - INFO - Epoch(val)  [1][250/552]    eta: 0:02:53  time: 0.3862  data_time: 0.3641  memory: 408  
2024/05/01 22:06:50 - mmengine - INFO - Epoch(val)  [1][300/552]    eta: 0:02:15  time: 0.3465  data_time: 0.3242  memory: 408  
2024/05/01 22:07:07 - mmengine - INFO - Epoch(val)  [1][350/552]    eta: 0:01:42  time: 0.3359  data_time: 0.3100  memory: 4736  
2024/05/01 22:07:23 - mmengine - INFO - Epoch(val)  [1][400/552]    eta: 0:01:13  time: 0.3315  data_time: 0.3100  memory: 405  
2024/05/01 22:07:40 - mmengine - INFO - Epoch(val)  [1][450/552]    eta: 0:00:47  time: 0.3443  data_time: 0.3234  memory: 405  
2024/05/01 22:07:57 - mmengine - INFO - Epoch(val)  [1][500/552]    eta: 0:00:23  time: 0.3404  data_time: 0.3193  memory: 405  
2024/05/01 22:08:15 - mmengine - INFO - Epoch(val)  [1][550/552]    eta: 0:00:00  time: 0.3582  data_time: 0.3372  memory: 405  
2024/05/01 22:08:28 - mmengine - INFO - Evaluating bbox...
2024/05/01 22:08:33 - mmengine - INFO - bbox_mAP_copypaste: 0.000 0.001 0.000 -1.000 -1.000 0.000
2024/05/01 22:08:34 - mmengine - INFO - Epoch(val) [1][552/552]    coco/bbox_mAP: 0.0000  coco/bbox_mAP_50: 0.0010  coco/bbox_mAP_75: 0.0000  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.0000  data_time: 0.4233  time: 0.4469
2024/05/01 22:08:35 - mmengine - INFO - The best checkpoint with 0.0000 coco/bbox_mAP at 1 epoch is saved to best_coco_bbox_mAP_epoch_1.pth.
2024/05/01 22:36:11 - mmengine - INFO - Epoch(train)  [2][ 50/138]  base_lr: 1.0000e-02 lr: 1.8665e-03  eta: 1 day, 16:51:36  time: 33.0846  data_time: 27.4888  memory: 4811  loss: 5.6883  loss_cls: 2.7357  loss_bbox: 2.9527
2024/05/01 22:58:51 - mmengine - INFO - Epoch(train)  [2][100/138]  base_lr: 1.0000e-02 lr: 2.3655e-03  eta: 1 day, 15:26:49  time: 27.2021  data_time: 15.0119  memory: 4811  loss: 5.7003  loss_cls: 2.7596  loss_bbox: 2.9408
2024/05/01 23:13:52 - mmengine - INFO - Exp name: yolov6_s_syncbn_fast_8xb32-400e_coco_20240501_205508
2024/05/01 23:13:52 - mmengine - INFO - Saving checkpoint at 2 epochs
2024/05/01 23:14:41 - mmengine - INFO - Epoch(val)  [2][ 50/552]    eta: 0:07:56  time: 0.9501  data_time: 0.9280  memory: 4821  
2024/05/01 23:15:21 - mmengine - INFO - Epoch(val)  [2][100/552]    eta: 0:06:32  time: 0.7852  data_time: 0.7639  memory: 416  
2024/05/01 23:15:39 - mmengine - INFO - Epoch(val)  [2][150/552]    eta: 0:04:40  time: 0.3577  data_time: 0.3362  memory: 416  
2024/05/01 23:15:57 - mmengine - INFO - Epoch(val)  [2][200/552]    eta: 0:03:37  time: 0.3739  data_time: 0.3523  memory: 408  
2024/05/01 23:16:16 - mmengine - INFO - Epoch(val)  [2][250/552]    eta: 0:02:52  time: 0.3828  data_time: 0.3612  memory: 408  
2024/05/01 23:16:33 - mmengine - INFO - Epoch(val)  [2][300/552]    eta: 0:02:13  time: 0.3383  data_time: 0.3178  memory: 408  
2024/05/01 23:16:52 - mmengine - INFO - Epoch(val)  [2][350/552]    eta: 0:01:42  time: 0.3728  data_time: 0.3523  memory: 408  
2024/05/01 23:17:09 - mmengine - INFO - Epoch(val)  [2][400/552]    eta: 0:01:14  time: 0.3434  data_time: 0.3238  memory: 405  
2024/05/01 23:17:27 - mmengine - INFO - Epoch(val)  [2][450/552]    eta: 0:00:48  time: 0.3486  data_time: 0.3297  memory: 405  
2024/05/01 23:17:43 - mmengine - INFO - Epoch(val)  [2][500/552]    eta: 0:00:23  time: 0.3314  data_time: 0.3115  memory: 405  
2024/05/01 23:18:00 - mmengine - INFO - Epoch(val)  [2][550/552]    eta: 0:00:00  time: 0.3380  data_time: 0.3185  memory: 405  
2024/05/01 23:18:13 - mmengine - INFO - Evaluating bbox...
2024/05/01 23:18:18 - mmengine - INFO - bbox_mAP_copypaste: 0.000 0.001 0.000 -1.000 -1.000 0.000
2024/05/01 23:18:18 - mmengine - INFO - Epoch(val) [2][552/552]    coco/bbox_mAP: 0.0000  coco/bbox_mAP_50: 0.0010  coco/bbox_mAP_75: 0.0000  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.0000  data_time: 0.4260  time: 0.4466
2024/05/01 23:44:18 - mmengine - INFO - Epoch(train)  [3][ 50/138]  base_lr: 1.0000e-02 lr: 3.2256e-03  eta: 1 day, 13:59:44  time: 31.2022  data_time: 19.4959  memory: 4831  loss: 5.5153  loss_cls: 2.7234  loss_bbox: 2.7919
2024/05/02 00:08:44 - mmengine - INFO - Epoch(train)  [3][100/138]  base_lr: 1.0000e-02 lr: 3.7218e-03  eta: 1 day, 13:33:41  time: 29.3203  data_time: 23.2919  memory: 4821  loss: 5.4161  loss_cls: 2.7431  loss_bbox: 2.6730
2024/05/02 00:22:08 - mmengine - INFO - Exp name: yolov6_s_syncbn_fast_8xb32-400e_coco_20240501_205508
2024/05/02 00:22:08 - mmengine - INFO - Saving checkpoint at 3 epochs
2024/05/02 00:22:54 - mmengine - INFO - Epoch(val)  [3][ 50/552]    eta: 0:07:21  time: 0.8798  data_time: 0.8602  memory: 4831  
2024/05/02 00:23:35 - mmengine - INFO - Epoch(val)  [3][100/552]    eta: 0:06:24  time: 0.8204  data_time: 0.8016  memory: 416  
2024/05/02 00:23:54 - mmengine - INFO - Epoch(val)  [3][150/552]    eta: 0:04:37  time: 0.3702  data_time: 0.3524  memory: 416  
2024/05/02 00:24:13 - mmengine - INFO - Epoch(val)  [3][200/552]    eta: 0:03:36  time: 0.3893  data_time: 0.3708  memory: 408  
2024/05/02 00:24:32 - mmengine - INFO - Epoch(val)  [3][250/552]    eta: 0:02:51  time: 0.3855  data_time: 0.3671  memory: 408  
2024/05/02 00:24:50 - mmengine - INFO - Epoch(val)  [3][300/552]    eta: 0:02:14  time: 0.3603  data_time: 0.3419  memory: 408  
2024/05/02 00:25:09 - mmengine - INFO - Epoch(val)  [3][350/552]    eta: 0:01:43  time: 0.3801  data_time: 0.3609  memory: 408  
2024/05/02 00:25:26 - mmengine - INFO - Epoch(val)  [3][400/552]    eta: 0:01:14  time: 0.3225  data_time: 0.3045  memory: 405  
2024/05/02 00:25:43 - mmengine - INFO - Epoch(val)  [3][450/552]    eta: 0:00:48  time: 0.3419  data_time: 0.3242  memory: 405  
2024/05/02 00:26:00 - mmengine - INFO - Epoch(val)  [3][500/552]    eta: 0:00:23  time: 0.3523  data_time: 0.3344  memory: 405  
2024/05/02 00:26:18 - mmengine - INFO - Epoch(val)  [3][550/552]    eta: 0:00:00  time: 0.3493  data_time: 0.3305  memory: 405  
2024/05/02 00:26:30 - mmengine - INFO - Evaluating bbox...
2024/05/02 00:26:36 - mmengine - INFO - bbox_mAP_copypaste: 0.003 0.014 0.001 -1.000 -1.000 0.004
2024/05/02 00:26:36 - mmengine - INFO - Epoch(val) [3][552/552]    coco/bbox_mAP: 0.0030  coco/bbox_mAP_50: 0.0140  coco/bbox_mAP_75: 0.0010  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.0040  data_time: 0.4305  time: 0.4489
2024/05/02 00:26:36 - mmengine - INFO - The previous best checkpoint /media/iris/Dong/openmmlab/detection/coding/yolov6/yolov6_s_syncbn_fast_8xb32-400e_coco/best_coco_bbox_mAP_epoch_1.pth is removed
2024/05/02 00:26:37 - mmengine - INFO - The best checkpoint with 0.0030 coco/bbox_mAP at 3 epoch is saved to best_coco_bbox_mAP_epoch_3.pth.
2024/05/02 00:53:23 - mmengine - INFO - Epoch(train)  [4][ 50/138]  base_lr: 1.0000e-02 lr: 4.5519e-03  eta: 1 day, 12:20:49  time: 32.0872  data_time: 30.9783  memory: 4811  loss: 5.0228  loss_cls: 2.7550  loss_bbox: 2.2678
2024/05/02 01:16:31 - mmengine - INFO - Epoch(train)  [4][100/138]  base_lr: 1.0000e-02 lr: 5.0435e-03  eta: 1 day, 11:47:15  time: 27.7548  data_time: 24.6060  memory: 4841  loss: 4.9014  loss_cls: 2.8013  loss_bbox: 2.1002
2024/05/02 01:29:42 - mmengine - INFO - Exp name: yolov6_s_syncbn_fast_8xb32-400e_coco_20240501_205508
2024/05/02 01:29:42 - mmengine - INFO - Saving checkpoint at 4 epochs
2024/05/02 01:30:29 - mmengine - INFO - Epoch(val)  [4][ 50/552]    eta: 0:07:19  time: 0.8745  data_time: 0.8545  memory: 4811  
2024/05/02 01:31:10 - mmengine - INFO - Epoch(val)  [4][100/552]    eta: 0:06:24  time: 0.8283  data_time: 0.8089  memory: 416  
2024/05/02 01:31:29 - mmengine - INFO - Epoch(val)  [4][150/552]    eta: 0:04:37  time: 0.3698  data_time: 0.3511  memory: 416  
2024/05/02 01:31:48 - mmengine - INFO - Epoch(val)  [4][200/552]    eta: 0:03:36  time: 0.3844  data_time: 0.3658  memory: 408  
2024/05/02 01:32:07 - mmengine - INFO - Epoch(val)  [4][250/552]    eta: 0:02:52  time: 0.3925  data_time: 0.3720  memory: 408  
2024/05/02 01:32:26 - mmengine - INFO - Epoch(val)  [4][300/552]    eta: 0:02:15  time: 0.3655  data_time: 0.3467  memory: 408  
2024/05/02 01:32:44 - mmengine - INFO - Epoch(val)  [4][350/552]    eta: 0:01:43  time: 0.3721  data_time: 0.3522  memory: 408  
2024/05/02 01:33:01 - mmengine - INFO - Epoch(val)  [4][400/552]    eta: 0:01:14  time: 0.3324  data_time: 0.3134  memory: 405  
2024/05/02 01:33:18 - mmengine - INFO - Epoch(val)  [4][450/552]    eta: 0:00:48  time: 0.3367  data_time: 0.3178  memory: 405  
2024/05/02 01:33:36 - mmengine - INFO - Epoch(val)  [4][500/552]    eta: 0:00:24  time: 0.3708  data_time: 0.3524  memory: 405  
2024/05/02 01:33:53 - mmengine - INFO - Epoch(val)  [4][550/552]    eta: 0:00:00  time: 0.3417  data_time: 0.3238  memory: 405  
2024/05/02 01:34:04 - mmengine - INFO - Evaluating bbox...
2024/05/02 01:34:11 - mmengine - INFO - bbox_mAP_copypaste: 0.026 0.074 0.011 -1.000 -1.000 0.026
2024/05/02 01:34:11 - mmengine - INFO - Epoch(val) [4][552/552]    coco/bbox_mAP: 0.0260  coco/bbox_mAP_50: 0.0740  coco/bbox_mAP_75: 0.0110  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.0260  data_time: 0.4315  time: 0.4506
2024/05/02 01:34:11 - mmengine - INFO - The previous best checkpoint /media/iris/Dong/openmmlab/detection/coding/yolov6/yolov6_s_syncbn_fast_8xb32-400e_coco/best_coco_bbox_mAP_epoch_3.pth is removed
2024/05/02 01:34:12 - mmengine - INFO - The best checkpoint with 0.0260 coco/bbox_mAP at 4 epoch is saved to best_coco_bbox_mAP_epoch_4.pth.
2024/05/02 02:00:13 - mmengine - INFO - Epoch(train)  [5][ 50/138]  base_lr: 1.0000e-02 lr: 5.8306e-03  eta: 1 day, 10:41:18  time: 31.1916  data_time: 26.3512  memory: 4855  loss: 3.9416  loss_cls: 2.1134  loss_bbox: 1.8282
2024/05/02 02:23:58 - mmengine - INFO - Epoch(train)  [5][100/138]  base_lr: 1.0000e-02 lr: 6.3157e-03  eta: 1 day, 10:16:52  time: 28.4937  data_time: 26.0432  memory: 4937  loss: 3.7542  loss_cls: 2.1004  loss_bbox: 1.6537
2024/05/02 02:37:53 - mmengine - INFO - Exp name: yolov6_s_syncbn_fast_8xb32-400e_coco_20240501_205508
2024/05/02 02:37:53 - mmengine - INFO - Saving checkpoint at 5 epochs
2024/05/02 02:38:41 - mmengine - INFO - Epoch(val)  [5][ 50/552]    eta: 0:07:20  time: 0.8772  data_time: 0.8583  memory: 4855  
2024/05/02 02:39:22 - mmengine - INFO - Epoch(val)  [5][100/552]    eta: 0:06:25  time: 0.8263  data_time: 0.8084  memory: 416  
2024/05/02 02:39:40 - mmengine - INFO - Epoch(val)  [5][150/552]    eta: 0:04:34  time: 0.3475  data_time: 0.3291  memory: 416  
2024/05/02 02:39:58 - mmengine - INFO - Epoch(val)  [5][200/552]    eta: 0:03:33  time: 0.3784  data_time: 0.3601  memory: 408  
2024/05/02 02:40:16 - mmengine - INFO - Epoch(val)  [5][250/552]    eta: 0:02:48  time: 0.3605  data_time: 0.3424  memory: 408  
2024/05/02 02:40:35 - mmengine - INFO - Epoch(val)  [5][300/552]    eta: 0:02:12  time: 0.3648  data_time: 0.3466  memory: 408  
2024/05/02 02:40:54 - mmengine - INFO - Epoch(val)  [5][350/552]    eta: 0:01:41  time: 0.3799  data_time: 0.3614  memory: 408  
2024/05/02 02:41:10 - mmengine - INFO - Epoch(val)  [5][400/552]    eta: 0:01:13  time: 0.3161  data_time: 0.2987  memory: 405  
2024/05/02 02:41:27 - mmengine - INFO - Epoch(val)  [5][450/552]    eta: 0:00:47  time: 0.3537  data_time: 0.3362  memory: 405  
2024/05/02 02:41:44 - mmengine - INFO - Epoch(val)  [5][500/552]    eta: 0:00:23  time: 0.3432  data_time: 0.3252  memory: 405  
2024/05/02 02:42:02 - mmengine - INFO - Epoch(val)  [5][550/552]    eta: 0:00:00  time: 0.3542  data_time: 0.3363  memory: 405  
2024/05/02 02:42:15 - mmengine - INFO - Evaluating bbox...
2024/05/02 02:42:20 - mmengine - INFO - bbox_mAP_copypaste: 0.105 0.190 0.091 -1.000 -1.000 0.105
2024/05/02 02:42:20 - mmengine - INFO - Epoch(val) [5][552/552]    coco/bbox_mAP: 0.1050  coco/bbox_mAP_50: 0.1900  coco/bbox_mAP_75: 0.0910  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.1050  data_time: 0.4268  time: 0.4449
2024/05/02 02:42:20 - mmengine - INFO - The previous best checkpoint /media/iris/Dong/openmmlab/detection/coding/yolov6/yolov6_s_syncbn_fast_8xb32-400e_coco/best_coco_bbox_mAP_epoch_4.pth is removed
2024/05/02 02:42:22 - mmengine - INFO - The best checkpoint with 0.1050 coco/bbox_mAP at 5 epoch is saved to best_coco_bbox_mAP_epoch_5.pth.
2024/05/02 03:09:36 - mmengine - INFO - Epoch(train)  [6][ 50/138]  base_lr: 1.0000e-02 lr: 7.0473e-03  eta: 1 day, 9:30:19  time: 32.6549  data_time: 32.2240  memory: 4871  loss: 3.4975  loss_cls: 2.0492  loss_bbox: 1.4483
2024/05/02 03:31:54 - mmengine - INFO - Epoch(train)  [6][100/138]  base_lr: 1.0000e-02 lr: 7.5241e-03  eta: 1 day, 8:58:43  time: 26.7533  data_time: 26.2173  memory: 4871  loss: 3.3953  loss_cls: 2.0443  loss_bbox: 1.3510
2024/05/02 03:45:42 - mmengine - INFO - Exp name: yolov6_s_syncbn_fast_8xb32-400e_coco_20240501_205508
2024/05/02 03:45:42 - mmengine - INFO - Saving checkpoint at 6 epochs
2024/05/02 03:46:30 - mmengine - INFO - Epoch(val)  [6][ 50/552]    eta: 0:07:18  time: 0.8743  data_time: 0.8551  memory: 4855  
2024/05/02 03:47:10 - mmengine - INFO - Epoch(val)  [6][100/552]    eta: 0:06:18  time: 0.7988  data_time: 0.7791  memory: 416  
2024/05/02 03:47:29 - mmengine - INFO - Epoch(val)  [6][150/552]    eta: 0:04:35  time: 0.3830  data_time: 0.3636  memory: 416  
2024/05/02 03:47:49 - mmengine - INFO - Epoch(val)  [6][200/552]    eta: 0:03:34  time: 0.3821  data_time: 0.3625  memory: 408  
2024/05/02 03:48:08 - mmengine - INFO - Epoch(val)  [6][250/552]    eta: 0:02:50  time: 0.3884  data_time: 0.3692  memory: 408  
2024/05/02 03:48:25 - mmengine - INFO - Epoch(val)  [6][300/552]    eta: 0:02:13  time: 0.3482  data_time: 0.3290  memory: 408  
2024/05/02 03:48:44 - mmengine - INFO - Epoch(val)  [6][350/552]    eta: 0:01:42  time: 0.3709  data_time: 0.3513  memory: 408  
2024/05/02 03:48:59 - mmengine - INFO - Epoch(val)  [6][400/552]    eta: 0:01:13  time: 0.3089  data_time: 0.2899  memory: 405  
2024/05/02 03:49:16 - mmengine - INFO - Epoch(val)  [6][450/552]    eta: 0:00:47  time: 0.3353  data_time: 0.3164  memory: 405  
2024/05/02 03:49:33 - mmengine - INFO - Epoch(val)  [6][500/552]    eta: 0:00:23  time: 0.3418  data_time: 0.3213  memory: 405  
2024/05/02 03:49:51 - mmengine - INFO - Epoch(val)  [6][550/552]    eta: 0:00:00  time: 0.3568  data_time: 0.3380  memory: 405  
2024/05/02 03:50:03 - mmengine - INFO - Evaluating bbox...
2024/05/02 03:50:09 - mmengine - INFO - bbox_mAP_copypaste: 0.101 0.188 0.099 -1.000 -1.000 0.101
2024/05/02 03:50:09 - mmengine - INFO - Epoch(val) [6][552/552]    coco/bbox_mAP: 0.1010  coco/bbox_mAP_50: 0.1880  coco/bbox_mAP_75: 0.0990  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.1010  data_time: 0.4237  time: 0.4431
2024/05/02 04:17:45 - mmengine - INFO - Epoch(train)  [7][ 50/138]  base_lr: 1.0000e-02 lr: 8.1884e-03  eta: 1 day, 8:15:48  time: 33.1284  data_time: 30.6552  memory: 4855  loss: 3.2217  loss_cls: 2.0013  loss_bbox: 1.2204
2024/05/02 04:40:26 - mmengine - INFO - Epoch(train)  [7][100/138]  base_lr: 1.0000e-02 lr: 8.6552e-03  eta: 1 day, 7:47:49  time: 27.2085  data_time: 26.8352  memory: 4855  loss: 3.1845  loss_cls: 2.0197  loss_bbox: 1.1648
2024/05/02 04:53:21 - mmengine - INFO - Exp name: yolov6_s_syncbn_fast_8xb32-400e_coco_20240501_205508
2024/05/02 04:53:21 - mmengine - INFO - Saving checkpoint at 7 epochs
2024/05/02 04:54:10 - mmengine - INFO - Epoch(val)  [7][ 50/552]    eta: 0:07:38  time: 0.9133  data_time: 0.8936  memory: 4871  
2024/05/02 04:54:50 - mmengine - INFO - Epoch(val)  [7][100/552]    eta: 0:06:29  time: 0.8087  data_time: 0.7898  memory: 416  
2024/05/02 04:55:08 - mmengine - INFO - Epoch(val)  [7][150/552]    eta: 0:04:37  time: 0.3485  data_time: 0.3302  memory: 416  
2024/05/02 04:55:28 - mmengine - INFO - Epoch(val)  [7][200/552]    eta: 0:03:37  time: 0.3956  data_time: 0.3760  memory: 408  
2024/05/02 04:55:47 - mmengine - INFO - Epoch(val)  [7][250/552]    eta: 0:02:52  time: 0.3824  data_time: 0.3625  memory: 408  
2024/05/02 04:56:04 - mmengine - INFO - Epoch(val)  [7][300/552]    eta: 0:02:14  time: 0.3491  data_time: 0.3289  memory: 408  
2024/05/02 04:56:23 - mmengine - INFO - Epoch(val)  [7][350/552]    eta: 0:01:43  time: 0.3817  data_time: 0.3621  memory: 408  
2024/05/02 04:56:40 - mmengine - INFO - Epoch(val)  [7][400/552]    eta: 0:01:14  time: 0.3354  data_time: 0.3168  memory: 405  
2024/05/02 04:56:58 - mmengine - INFO - Epoch(val)  [7][450/552]    eta: 0:00:48  time: 0.3572  data_time: 0.3381  memory: 405  
2024/05/02 04:57:15 - mmengine - INFO - Epoch(val)  [7][500/552]    eta: 0:00:23  time: 0.3373  data_time: 0.3176  memory: 405  
2024/05/02 04:57:33 - mmengine - INFO - Epoch(val)  [7][550/552]    eta: 0:00:00  time: 0.3553  data_time: 0.3361  memory: 405  
2024/05/02 04:57:44 - mmengine - INFO - Evaluating bbox...
2024/05/02 04:57:49 - mmengine - INFO - bbox_mAP_copypaste: 0.165 0.284 0.160 -1.000 -1.000 0.165
2024/05/02 04:57:50 - mmengine - INFO - Epoch(val) [7][552/552]    coco/bbox_mAP: 0.1650  coco/bbox_mAP_50: 0.2840  coco/bbox_mAP_75: 0.1600  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.1650  data_time: 0.4311  time: 0.4504
2024/05/02 04:57:50 - mmengine - INFO - The previous best checkpoint /media/iris/Dong/openmmlab/detection/coding/yolov6/yolov6_s_syncbn_fast_8xb32-400e_coco/best_coco_bbox_mAP_epoch_5.pth is removed
2024/05/02 04:57:51 - mmengine - INFO - The best checkpoint with 0.1650 coco/bbox_mAP at 7 epoch is saved to best_coco_bbox_mAP_epoch_7.pth.
2024/05/02 05:18:16 - mmengine - INFO - Exp name: yolov6_s_syncbn_fast_8xb32-400e_coco_20240501_205508
2024/05/02 05:25:20 - mmengine - INFO - Epoch(train)  [8][ 50/138]  base_lr: 1.0000e-02 lr: 9.1048e-03  eta: 1 day, 7:01:42  time: 32.9498  data_time: 32.4985  memory: 4904  loss: 3.0630  loss_cls: 1.9626  loss_bbox: 1.1004
2024/05/02 05:47:59 - mmengine - INFO - Epoch(train)  [8][100/138]  base_lr: 1.0000e-02 lr: 9.1048e-03  eta: 1 day, 6:34:51  time: 27.1858  data_time: 25.9497  memory: 4871  loss: 3.0463  loss_cls: 1.9681  loss_bbox: 1.0782
2024/05/02 06:01:54 - mmengine - INFO - Exp name: yolov6_s_syncbn_fast_8xb32-400e_coco_20240501_205508
2024/05/02 06:01:54 - mmengine - INFO - Saving checkpoint at 8 epochs
2024/05/02 06:02:42 - mmengine - INFO - Epoch(val)  [8][ 50/552]    eta: 0:07:19  time: 0.8756  data_time: 0.8551  memory: 4871  
2024/05/02 06:03:22 - mmengine - INFO - Epoch(val)  [8][100/552]    eta: 0:06:19  time: 0.8027  data_time: 0.7839  memory: 416  
2024/05/02 06:03:41 - mmengine - INFO - Epoch(val)  [8][150/552]    eta: 0:04:36  time: 0.3814  data_time: 0.3628  memory: 416  
2024/05/02 06:03:59 - mmengine - INFO - Epoch(val)  [8][200/552]    eta: 0:03:33  time: 0.3624  data_time: 0.3432  memory: 408  
2024/05/02 06:04:18 - mmengine - INFO - Epoch(val)  [8][250/552]    eta: 0:02:48  time: 0.3707  data_time: 0.3503  memory: 408  
2024/05/02 06:04:35 - mmengine - INFO - Epoch(val)  [8][300/552]    eta: 0:02:11  time: 0.3409  data_time: 0.3204  memory: 408  
2024/05/02 06:04:52 - mmengine - INFO - Epoch(val)  [8][350/552]    eta: 0:01:40  time: 0.3451  data_time: 0.3254  memory: 408  
2024/05/02 06:05:09 - mmengine - INFO - Epoch(val)  [8][400/552]    eta: 0:01:12  time: 0.3414  data_time: 0.3227  memory: 405  
2024/05/02 06:05:27 - mmengine - INFO - Epoch(val)  [8][450/552]    eta: 0:00:47  time: 0.3656  data_time: 0.3472  memory: 405  
2024/05/02 06:05:45 - mmengine - INFO - Epoch(val)  [8][500/552]    eta: 0:00:23  time: 0.3580  data_time: 0.3393  memory: 405  
2024/05/02 06:06:03 - mmengine - INFO - Epoch(val)  [8][550/552]    eta: 0:00:00  time: 0.3586  data_time: 0.3399  memory: 405  
2024/05/02 06:06:18 - mmengine - INFO - Evaluating bbox...
2024/05/02 06:06:24 - mmengine - INFO - bbox_mAP_copypaste: 0.197 0.321 0.217 -1.000 -1.000 0.197
2024/05/02 06:06:24 - mmengine - INFO - Epoch(val) [8][552/552]    coco/bbox_mAP: 0.1970  coco/bbox_mAP_50: 0.3210  coco/bbox_mAP_75: 0.2170  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.1970  data_time: 0.4253  time: 0.4446
2024/05/02 06:06:24 - mmengine - INFO - The previous best checkpoint /media/iris/Dong/openmmlab/detection/coding/yolov6/yolov6_s_syncbn_fast_8xb32-400e_coco/best_coco_bbox_mAP_epoch_7.pth is removed
2024/05/02 06:06:25 - mmengine - INFO - The best checkpoint with 0.1970 coco/bbox_mAP at 8 epoch is saved to best_coco_bbox_mAP_epoch_8.pth.
2024/05/02 06:32:22 - mmengine - INFO - Epoch(train)  [9][ 50/138]  base_lr: 1.0000e-02 lr: 9.1048e-03  eta: 1 day, 5:48:24  time: 31.1063  data_time: 28.1846  memory: 4904  loss: 2.9149  loss_cls: 1.9173  loss_bbox: 0.9976
2024/05/02 06:56:14 - mmengine - INFO - Epoch(train)  [9][100/138]  base_lr: 1.0000e-02 lr: 9.1048e-03  eta: 1 day, 5:26:14  time: 28.6283  data_time: 25.9209  memory: 4888  loss: 2.9073  loss_cls: 1.9144  loss_bbox: 0.9928
2024/05/02 07:09:59 - mmengine - INFO - Exp name: yolov6_s_syncbn_fast_8xb32-400e_coco_20240501_205508
2024/05/02 07:09:59 - mmengine - INFO - Saving checkpoint at 9 epochs
2024/05/02 07:10:48 - mmengine - INFO - Epoch(val)  [9][ 50/552]    eta: 0:07:17  time: 0.8707  data_time: 0.8516  memory: 4855  
2024/05/02 07:11:28 - mmengine - INFO - Epoch(val)  [9][100/552]    eta: 0:06:17  time: 0.7976  data_time: 0.7789  memory: 416  
2024/05/02 07:11:47 - mmengine - INFO - Epoch(val)  [9][150/552]    eta: 0:04:35  time: 0.3857  data_time: 0.3669  memory: 416  
2024/05/02 07:12:06 - mmengine - INFO - Epoch(val)  [9][200/552]    eta: 0:03:33  time: 0.3736  data_time: 0.3541  memory: 408  
2024/05/02 07:12:26 - mmengine - INFO - Epoch(val)  [9][250/552]    eta: 0:02:50  time: 0.3935  data_time: 0.3737  memory: 408  
2024/05/02 07:12:42 - mmengine - INFO - Epoch(val)  [9][300/552]    eta: 0:02:12  time: 0.3323  data_time: 0.3120  memory: 408  
2024/05/02 07:13:01 - mmengine - INFO - Epoch(val)  [9][350/552]    eta: 0:01:41  time: 0.3717  data_time: 0.3510  memory: 408  
2024/05/02 07:13:18 - mmengine - INFO - Epoch(val)  [9][400/552]    eta: 0:01:13  time: 0.3363  data_time: 0.3171  memory: 405  
2024/05/02 07:13:35 - mmengine - INFO - Epoch(val)  [9][450/552]    eta: 0:00:47  time: 0.3407  data_time: 0.3229  memory: 405  
2024/05/02 07:13:52 - mmengine - INFO - Epoch(val)  [9][500/552]    eta: 0:00:23  time: 0.3434  data_time: 0.3245  memory: 405  
2024/05/02 07:14:09 - mmengine - INFO - Epoch(val)  [9][550/552]    eta: 0:00:00  time: 0.3536  data_time: 0.3353  memory: 405  
2024/05/02 07:14:21 - mmengine - INFO - Evaluating bbox...
2024/05/02 07:14:27 - mmengine - INFO - bbox_mAP_copypaste: 0.243 0.361 0.274 -1.000 -1.000 0.243
2024/05/02 07:14:27 - mmengine - INFO - Epoch(val) [9][552/552]    coco/bbox_mAP: 0.2430  coco/bbox_mAP_50: 0.3610  coco/bbox_mAP_75: 0.2740  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.2430  data_time: 0.4244  time: 0.4436
2024/05/02 07:14:27 - mmengine - INFO - The previous best checkpoint /media/iris/Dong/openmmlab/detection/coding/yolov6/yolov6_s_syncbn_fast_8xb32-400e_coco/best_coco_bbox_mAP_epoch_8.pth is removed
2024/05/02 07:14:28 - mmengine - INFO - The best checkpoint with 0.2430 coco/bbox_mAP at 9 epoch is saved to best_coco_bbox_mAP_epoch_9.pth.
2024/05/02 07:40:26 - mmengine - INFO - Epoch(train) [10][ 50/138]  base_lr: 1.0000e-02 lr: 8.8419e-03  eta: 1 day, 4:40:22  time: 31.1226  data_time: 30.7987  memory: 4871  loss: 2.8245  loss_cls: 1.9043  loss_bbox: 0.9202
2024/05/02 08:03:10 - mmengine - INFO - Epoch(train) [10][100/138]  base_lr: 1.0000e-02 lr: 8.8419e-03  eta: 1 day, 4:15:09  time: 27.2767  data_time: 24.8329  memory: 4871  loss: 2.7592  loss_cls: 1.8566  loss_bbox: 0.9025
2024/05/02 08:17:36 - mmengine - INFO - Exp name: yolov6_s_syncbn_fast_8xb32-400e_coco_20240501_205508
2024/05/02 08:17:36 - mmengine - INFO - Saving checkpoint at 10 epochs
2024/05/02 08:18:24 - mmengine - INFO - Epoch(val) [10][ 50/552]    eta: 0:07:24  time: 0.8845  data_time: 0.8637  memory: 4855  
2024/05/02 08:19:07 - mmengine - INFO - Epoch(val) [10][100/552]    eta: 0:06:33  time: 0.8555  data_time: 0.8358  memory: 416  
2024/05/02 08:19:26 - mmengine - INFO - Epoch(val) [10][150/552]    eta: 0:04:43  time: 0.3733  data_time: 0.3548  memory: 416  
2024/05/02 08:19:44 - mmengine - INFO - Epoch(val) [10][200/552]    eta: 0:03:37  time: 0.3634  data_time: 0.3445  memory: 408  
2024/05/02 08:20:03 - mmengine - INFO - Epoch(val) [10][250/552]    eta: 0:02:52  time: 0.3760  data_time: 0.3564  memory: 408  
2024/05/02 08:20:20 - mmengine - INFO - Epoch(val) [10][300/552]    eta: 0:02:14  time: 0.3445  data_time: 0.3254  memory: 408  
2024/05/02 08:20:37 - mmengine - INFO - Epoch(val) [10][350/552]    eta: 0:01:42  time: 0.3443  data_time: 0.3254  memory: 408  
2024/05/02 08:20:53 - mmengine - INFO - Epoch(val) [10][400/552]    eta: 0:01:13  time: 0.3252  data_time: 0.3071  memory: 405  
2024/05/02 08:21:11 - mmengine - INFO - Epoch(val) [10][450/552]    eta: 0:00:47  time: 0.3544  data_time: 0.3361  memory: 405  
2024/05/02 08:21:28 - mmengine - INFO - Epoch(val) [10][500/552]    eta: 0:00:23  time: 0.3424  data_time: 0.3248  memory: 405  
2024/05/02 08:21:46 - mmengine - INFO - Epoch(val) [10][550/552]    eta: 0:00:00  time: 0.3489  data_time: 0.3303  memory: 405  
2024/05/02 08:21:59 - mmengine - INFO - Evaluating bbox...
2024/05/02 08:22:05 - mmengine - INFO - bbox_mAP_copypaste: 0.365 0.518 0.416 -1.000 -1.000 0.365
2024/05/02 08:22:06 - mmengine - INFO - Epoch(val) [10][552/552]    coco/bbox_mAP: 0.3650  coco/bbox_mAP_50: 0.5180  coco/bbox_mAP_75: 0.4160  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.3650  data_time: 0.4268  time: 0.4457
2024/05/02 08:22:06 - mmengine - INFO - The previous best checkpoint /media/iris/Dong/openmmlab/detection/coding/yolov6/yolov6_s_syncbn_fast_8xb32-400e_coco/best_coco_bbox_mAP_epoch_9.pth is removed
2024/05/02 08:22:07 - mmengine - INFO - The best checkpoint with 0.3650 coco/bbox_mAP at 10 epoch is saved to best_coco_bbox_mAP_epoch_10.pth.
2024/05/02 08:49:29 - mmengine - INFO - Epoch(train) [11][ 50/138]  base_lr: 1.0000e-02 lr: 8.5502e-03  eta: 1 day, 3:35:36  time: 32.8041  data_time: 23.5976  memory: 4888  loss: 2.7449  loss_cls: 1.8725  loss_bbox: 0.8724
2024/05/02 09:12:28 - mmengine - INFO - Epoch(train) [11][100/138]  base_lr: 1.0000e-02 lr: 8.5502e-03  eta: 1 day, 3:11:15  time: 27.5957  data_time: 20.5718  memory: 4855  loss: 2.7163  loss_cls: 1.8617  loss_bbox: 0.8547
2024/05/02 09:25:21 - mmengine - INFO - Exp name: yolov6_s_syncbn_fast_8xb32-400e_coco_20240501_205508
2024/05/02 09:25:21 - mmengine - INFO - Saving checkpoint at 11 epochs
2024/05/02 09:26:09 - mmengine - INFO - Epoch(val) [11][ 50/552]    eta: 0:07:21  time: 0.8804  data_time: 0.8601  memory: 4871  
2024/05/02 09:26:49 - mmengine - INFO - Epoch(val) [11][100/552]    eta: 0:06:22  time: 0.8107  data_time: 0.7903  memory: 416  
2024/05/02 09:27:09 - mmengine - INFO - Epoch(val) [11][150/552]    eta: 0:04:38  time: 0.3860  data_time: 0.3671  memory: 416  
2024/05/02 09:27:27 - mmengine - INFO - Epoch(val) [11][200/552]    eta: 0:03:35  time: 0.3694  data_time: 0.3504  memory: 408  
2024/05/02 09:27:46 - mmengine - INFO - Epoch(val) [11][250/552]    eta: 0:02:50  time: 0.3841  data_time: 0.3655  memory: 408  
2024/05/02 09:28:05 - mmengine - INFO - Epoch(val) [11][300/552]    eta: 0:02:14  time: 0.3701  data_time: 0.3509  memory: 408  
2024/05/02 09:28:22 - mmengine - INFO - Epoch(val) [11][350/552]    eta: 0:01:42  time: 0.3438  data_time: 0.3249  memory: 408  
2024/05/02 09:28:38 - mmengine - INFO - Epoch(val) [11][400/552]    eta: 0:01:13  time: 0.3125  data_time: 0.2934  memory: 405  
2024/05/02 09:28:55 - mmengine - INFO - Epoch(val) [11][450/552]    eta: 0:00:47  time: 0.3383  data_time: 0.3201  memory: 405  
2024/05/02 09:29:13 - mmengine - INFO - Epoch(val) [11][500/552]    eta: 0:00:23  time: 0.3586  data_time: 0.3396  memory: 405  
2024/05/02 09:29:32 - mmengine - INFO - Epoch(val) [11][550/552]    eta: 0:00:00  time: 0.3795  data_time: 0.3615  memory: 405  
2024/05/02 09:29:45 - mmengine - INFO - Evaluating bbox...
2024/05/02 09:29:51 - mmengine - INFO - bbox_mAP_copypaste: 0.323 0.444 0.361 -1.000 -1.000 0.323
2024/05/02 09:29:51 - mmengine - INFO - Epoch(val) [11][552/552]    coco/bbox_mAP: 0.3230  coco/bbox_mAP_50: 0.4440  coco/bbox_mAP_75: 0.3610  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.3230  data_time: 0.4278  time: 0.4468
2024/05/02 09:56:18 - mmengine - INFO - Epoch(train) [12][ 50/138]  base_lr: 1.0000e-02 lr: 8.2318e-03  eta: 1 day, 2:26:08  time: 31.7338  data_time: 28.5618  memory: 4855  loss: 2.6733  loss_cls: 1.8316  loss_bbox: 0.8418
2024/05/02 10:18:43 - mmengine - INFO - Epoch(train) [12][100/138]  base_lr: 1.0000e-02 lr: 8.2318e-03  eta: 1 day, 2:00:54  time: 26.8907  data_time: 18.7967  memory: 4871  loss: 2.6159  loss_cls: 1.8059  loss_bbox: 0.8101
2024/05/02 10:32:56 - mmengine - INFO - Exp name: yolov6_s_syncbn_fast_8xb32-400e_coco_20240501_205508
2024/05/02 10:32:56 - mmengine - INFO - Saving checkpoint at 12 epochs
2024/05/02 10:33:43 - mmengine - INFO - Epoch(val) [12][ 50/552]    eta: 0:07:13  time: 0.8643  data_time: 0.8435  memory: 4871  
2024/05/02 10:34:22 - mmengine - INFO - Epoch(val) [12][100/552]    eta: 0:06:14  time: 0.7919  data_time: 0.7728  memory: 416  
2024/05/02 10:34:41 - mmengine - INFO - Epoch(val) [12][150/552]    eta: 0:04:32  time: 0.3759  data_time: 0.3570  memory: 416  
2024/05/02 10:35:00 - mmengine - INFO - Epoch(val) [12][200/552]    eta: 0:03:31  time: 0.3691  data_time: 0.3495  memory: 408  
2024/05/02 10:35:19 - mmengine - INFO - Epoch(val) [12][250/552]    eta: 0:02:48  time: 0.3848  data_time: 0.3649  memory: 408  
2024/05/02 10:35:35 - mmengine - INFO - Epoch(val) [12][300/552]    eta: 0:02:10  time: 0.3319  data_time: 0.3131  memory: 408  
2024/05/02 10:35:53 - mmengine - INFO - Epoch(val) [12][350/552]    eta: 0:01:40  time: 0.3565  data_time: 0.3380  memory: 408  
2024/05/02 10:36:10 - mmengine - INFO - Epoch(val) [12][400/552]    eta: 0:01:12  time: 0.3287  data_time: 0.3103  memory: 405  
2024/05/02 10:36:27 - mmengine - INFO - Epoch(val) [12][450/552]    eta: 0:00:47  time: 0.3456  data_time: 0.3279  memory: 405  
2024/05/02 10:36:44 - mmengine - INFO - Epoch(val) [12][500/552]    eta: 0:00:23  time: 0.3499  data_time: 0.3307  memory: 405  
2024/05/02 10:37:02 - mmengine - INFO - Epoch(val) [12][550/552]    eta: 0:00:00  time: 0.3495  data_time: 0.3303  memory: 405  
2024/05/02 10:37:19 - mmengine - INFO - Evaluating bbox...
2024/05/02 10:37:25 - mmengine - INFO - bbox_mAP_copypaste: 0.258 0.352 0.288 -1.000 -1.000 0.258
2024/05/02 10:37:25 - mmengine - INFO - Epoch(val) [12][552/552]    coco/bbox_mAP: 0.2580  coco/bbox_mAP_50: 0.3520  coco/bbox_mAP_75: 0.2880  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.2580  data_time: 0.4216  time: 0.4407
2024/05/02 11:04:45 - mmengine - INFO - Epoch(train) [13][ 50/138]  base_lr: 1.0000e-02 lr: 7.8892e-03  eta: 1 day, 1:20:58  time: 32.8017  data_time: 28.9284  memory: 4855  loss: 2.6492  loss_cls: 1.8308  loss_bbox: 0.8184
2024/05/02 11:27:25 - mmengine - INFO - Epoch(train) [13][100/138]  base_lr: 1.0000e-02 lr: 7.8892e-03  eta: 1 day, 0:56:28  time: 27.2003  data_time: 24.9923  memory: 4871  loss: 2.5940  loss_cls: 1.8001  loss_bbox: 0.7939
2024/05/02 11:41:48 - mmengine - INFO - Exp name: yolov6_s_syncbn_fast_8xb32-400e_coco_20240501_205508
2024/05/02 11:41:48 - mmengine - INFO - Saving checkpoint at 13 epochs
2024/05/02 11:42:35 - mmengine - INFO - Epoch(val) [13][ 50/552]    eta: 0:07:15  time: 0.8673  data_time: 0.8465  memory: 4855  
2024/05/02 11:43:17 - mmengine - INFO - Epoch(val) [13][100/552]    eta: 0:06:22  time: 0.8273  data_time: 0.8083  memory: 416  
2024/05/02 11:43:35 - mmengine - INFO - Epoch(val) [13][150/552]    eta: 0:04:35  time: 0.3648  data_time: 0.3454  memory: 416  
2024/05/02 11:43:53 - mmengine - INFO - Epoch(val) [13][200/552]    eta: 0:03:34  time: 0.3729  data_time: 0.3527  memory: 408  
2024/05/02 11:44:12 - mmengine - INFO - Epoch(val) [13][250/552]    eta: 0:02:49  time: 0.3800  data_time: 0.3604  memory: 408  
2024/05/02 11:44:30 - mmengine - INFO - Epoch(val) [13][300/552]    eta: 0:02:12  time: 0.3408  data_time: 0.3208  memory: 408  
2024/05/02 11:44:47 - mmengine - INFO - Epoch(val) [13][350/552]    eta: 0:01:41  time: 0.3479  data_time: 0.3281  memory: 408  
2024/05/02 11:45:03 - mmengine - INFO - Epoch(val) [13][400/552]    eta: 0:01:12  time: 0.3232  data_time: 0.3041  memory: 405  
2024/05/02 11:45:21 - mmengine - INFO - Epoch(val) [13][450/552]    eta: 0:00:47  time: 0.3518  data_time: 0.3339  memory: 405  
2024/05/02 11:45:38 - mmengine - INFO - Epoch(val) [13][500/552]    eta: 0:00:23  time: 0.3471  data_time: 0.3289  memory: 405  
2024/05/02 11:45:56 - mmengine - INFO - Epoch(val) [13][550/552]    eta: 0:00:00  time: 0.3605  data_time: 0.3427  memory: 405  
2024/05/02 11:46:12 - mmengine - INFO - Evaluating bbox...
2024/05/02 11:46:18 - mmengine - INFO - bbox_mAP_copypaste: 0.423 0.562 0.490 -1.000 -1.000 0.423
2024/05/02 11:46:18 - mmengine - INFO - Epoch(val) [13][552/552]    coco/bbox_mAP: 0.4230  coco/bbox_mAP_50: 0.5620  coco/bbox_mAP_75: 0.4900  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.4230  data_time: 0.4227  time: 0.4420
2024/05/02 11:46:18 - mmengine - INFO - The previous best checkpoint /media/iris/Dong/openmmlab/detection/coding/yolov6/yolov6_s_syncbn_fast_8xb32-400e_coco/best_coco_bbox_mAP_epoch_10.pth is removed
2024/05/02 11:46:19 - mmengine - INFO - The best checkpoint with 0.4230 coco/bbox_mAP at 13 epoch is saved to best_coco_bbox_mAP_epoch_13.pth.
2024/05/02 12:12:46 - mmengine - INFO - Epoch(train) [14][ 50/138]  base_lr: 1.0000e-02 lr: 7.5250e-03  eta: 1 day, 0:15:10  time: 31.7137  data_time: 24.2617  memory: 4871  loss: 2.5754  loss_cls: 1.7838  loss_bbox: 0.7916
2024/05/02 12:34:56 - mmengine - INFO - Epoch(train) [14][100/138]  base_lr: 1.0000e-02 lr: 7.5250e-03  eta: 23:50:03  time: 26.5963  data_time: 16.7836  memory: 4855  loss: 2.5371  loss_cls: 1.7809  loss_bbox: 0.7563
2024/05/02 12:49:27 - mmengine - INFO - Exp name: yolov6_s_syncbn_fast_8xb32-400e_coco_20240501_205508
2024/05/02 12:49:27 - mmengine - INFO - Saving checkpoint at 14 epochs
2024/05/02 12:50:19 - mmengine - INFO - Epoch(val) [14][ 50/552]    eta: 0:07:37  time: 0.9111  data_time: 0.8912  memory: 4855  
2024/05/02 12:50:58 - mmengine - INFO - Epoch(val) [14][100/552]    eta: 0:06:21  time: 0.7775  data_time: 0.7589  memory: 416  
2024/05/02 12:51:16 - mmengine - INFO - Epoch(val) [14][150/552]    eta: 0:04:35  time: 0.3693  data_time: 0.3498  memory: 416  
2024/05/02 12:51:35 - mmengine - INFO - Epoch(val) [14][200/552]    eta: 0:03:33  time: 0.3706  data_time: 0.3505  memory: 408  
2024/05/02 12:51:53 - mmengine - INFO - Epoch(val) [14][250/552]    eta: 0:02:48  time: 0.3610  data_time: 0.3411  memory: 408  
2024/05/02 12:52:10 - mmengine - INFO - Epoch(val) [14][300/552]    eta: 0:02:11  time: 0.3382  data_time: 0.3182  memory: 408  
2024/05/02 12:52:27 - mmengine - INFO - Epoch(val) [14][350/552]    eta: 0:01:40  time: 0.3472  data_time: 0.3272  memory: 408  
2024/05/02 12:52:43 - mmengine - INFO - Epoch(val) [14][400/552]    eta: 0:01:12  time: 0.3258  data_time: 0.3074  memory: 405  
2024/05/02 12:52:59 - mmengine - INFO - Epoch(val) [14][450/552]    eta: 0:00:46  time: 0.3218  data_time: 0.3023  memory: 405  
2024/05/02 12:53:16 - mmengine - INFO - Epoch(val) [14][500/552]    eta: 0:00:23  time: 0.3312  data_time: 0.3123  memory: 405  
2024/05/02 12:53:33 - mmengine - INFO - Epoch(val) [14][550/552]    eta: 0:00:00  time: 0.3370  data_time: 0.3172  memory: 405  
2024/05/02 12:53:48 - mmengine - INFO - Evaluating bbox...
2024/05/02 12:53:54 - mmengine - INFO - bbox_mAP_copypaste: 0.412 0.558 0.471 -1.000 -1.000 0.412
2024/05/02 12:53:54 - mmengine - INFO - Epoch(val) [14][552/552]    coco/bbox_mAP: 0.4120  coco/bbox_mAP_50: 0.5580  coco/bbox_mAP_75: 0.4710  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.4120  data_time: 0.4153  time: 0.4347
2024/05/02 13:22:53 - mmengine - INFO - Epoch(train) [15][ 50/138]  base_lr: 1.0000e-02 lr: 7.1420e-03  eta: 23:12:58  time: 34.7828  data_time: 21.7969  memory: 4855  loss: 2.5451  loss_cls: 1.7753  loss_bbox: 0.7698
2024/05/02 13:29:16 - mmengine - INFO - Exp name: yolov6_s_syncbn_fast_8xb32-400e_coco_20240501_205508
2024/05/02 13:44:15 - mmengine - INFO - Epoch(train) [15][100/138]  base_lr: 1.0000e-02 lr: 7.1420e-03  eta: 22:46:49  time: 25.6439  data_time: 22.7157  memory: 4871  loss: 2.5597  loss_cls: 1.7935  loss_bbox: 0.7662
2024/05/02 13:58:21 - mmengine - INFO - Exp name: yolov6_s_syncbn_fast_8xb32-400e_coco_20240501_205508
2024/05/02 13:58:21 - mmengine - INFO - Saving checkpoint at 15 epochs
2024/05/02 13:59:09 - mmengine - INFO - Epoch(val) [15][ 50/552]    eta: 0:07:28  time: 0.8925  data_time: 0.8721  memory: 4920  
2024/05/02 13:59:49 - mmengine - INFO - Epoch(val) [15][100/552]    eta: 0:06:20  time: 0.7917  data_time: 0.7723  memory: 416  
2024/05/02 14:00:07 - mmengine - INFO - Epoch(val) [15][150/552]    eta: 0:04:33  time: 0.3578  data_time: 0.3381  memory: 416  
2024/05/02 14:00:26 - mmengine - INFO - Epoch(val) [15][200/552]    eta: 0:03:33  time: 0.3806  data_time: 0.3603  memory: 408  
2024/05/02 14:00:46 - mmengine - INFO - Epoch(val) [15][250/552]    eta: 0:02:50  time: 0.3929  data_time: 0.3729  memory: 408  
2024/05/02 14:01:04 - mmengine - INFO - Epoch(val) [15][300/552]    eta: 0:02:13  time: 0.3665  data_time: 0.3468  memory: 408  
2024/05/02 14:01:22 - mmengine - INFO - Epoch(val) [15][350/552]    eta: 0:01:42  time: 0.3530  data_time: 0.3336  memory: 408  
2024/05/02 14:01:37 - mmengine - INFO - Epoch(val) [15][400/552]    eta: 0:01:13  time: 0.3123  data_time: 0.2929  memory: 405  
2024/05/02 14:01:54 - mmengine - INFO - Epoch(val) [15][450/552]    eta: 0:00:47  time: 0.3371  data_time: 0.3177  memory: 405  
2024/05/02 14:02:11 - mmengine - INFO - Epoch(val) [15][500/552]    eta: 0:00:23  time: 0.3475  data_time: 0.3286  memory: 405  
2024/05/02 14:02:28 - mmengine - INFO - Epoch(val) [15][550/552]    eta: 0:00:00  time: 0.3241  data_time: 0.3038  memory: 405  
2024/05/02 14:02:43 - mmengine - INFO - Evaluating bbox...
2024/05/02 14:02:49 - mmengine - INFO - bbox_mAP_copypaste: 0.453 0.601 0.521 -1.000 -1.000 0.453
2024/05/02 14:02:50 - mmengine - INFO - Epoch(val) [15][552/552]    coco/bbox_mAP: 0.4530  coco/bbox_mAP_50: 0.6010  coco/bbox_mAP_75: 0.5210  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.4530  data_time: 0.4202  time: 0.4399
2024/05/02 14:02:50 - mmengine - INFO - The previous best checkpoint /media/iris/Dong/openmmlab/detection/coding/yolov6/yolov6_s_syncbn_fast_8xb32-400e_coco/best_coco_bbox_mAP_epoch_13.pth is removed
2024/05/02 14:02:51 - mmengine - INFO - The best checkpoint with 0.4530 coco/bbox_mAP at 15 epoch is saved to best_coco_bbox_mAP_epoch_15.pth.
2024/05/02 14:29:36 - mmengine - INFO - Epoch(train) [16][ 50/138]  base_lr: 1.0000e-02 lr: 6.7430e-03  eta: 22:05:40  time: 32.0750  data_time: 30.6606  memory: 4855  loss: 2.4943  loss_cls: 1.7604  loss_bbox: 0.7339
2024/05/02 14:53:14 - mmengine - INFO - Epoch(train) [16][100/138]  base_lr: 1.0000e-02 lr: 6.7430e-03  eta: 21:42:51  time: 28.3545  data_time: 24.7116  memory: 4871  loss: 2.4873  loss_cls: 1.7572  loss_bbox: 0.7301
2024/05/02 15:06:04 - mmengine - INFO - Exp name: yolov6_s_syncbn_fast_8xb32-400e_coco_20240501_205508
2024/05/02 15:06:04 - mmengine - INFO - Saving checkpoint at 16 epochs
2024/05/02 15:06:53 - mmengine - INFO - Epoch(val) [16][ 50/552]    eta: 0:07:31  time: 0.9001  data_time: 0.8791  memory: 4904  
2024/05/02 15:07:33 - mmengine - INFO - Epoch(val) [16][100/552]    eta: 0:06:27  time: 0.8124  data_time: 0.7930  memory: 416  
2024/05/02 15:07:51 - mmengine - INFO - Epoch(val) [16][150/552]    eta: 0:04:37  time: 0.3591  data_time: 0.3396  memory: 416  
2024/05/02 15:08:10 - mmengine - INFO - Epoch(val) [16][200/552]    eta: 0:03:35  time: 0.3733  data_time: 0.3544  memory: 408  
2024/05/02 15:08:30 - mmengine - INFO - Epoch(val) [16][250/552]    eta: 0:02:51  time: 0.3916  data_time: 0.3725  memory: 408  
2024/05/02 15:08:47 - mmengine - INFO - Epoch(val) [16][300/552]    eta: 0:02:13  time: 0.3510  data_time: 0.3313  memory: 408  
2024/05/02 15:09:05 - mmengine - INFO - Epoch(val) [16][350/552]    eta: 0:01:42  time: 0.3568  data_time: 0.3353  memory: 408  
2024/05/02 15:09:20 - mmengine - INFO - Epoch(val) [16][400/552]    eta: 0:01:13  time: 0.3044  data_time: 0.2853  memory: 405  
2024/05/02 15:09:37 - mmengine - INFO - Epoch(val) [16][450/552]    eta: 0:00:47  time: 0.3398  data_time: 0.3207  memory: 405  
2024/05/02 15:09:54 - mmengine - INFO - Epoch(val) [16][500/552]    eta: 0:00:23  time: 0.3447  data_time: 0.3261  memory: 405  
2024/05/02 15:10:12 - mmengine - INFO - Epoch(val) [16][550/552]    eta: 0:00:00  time: 0.3500  data_time: 0.3310  memory: 405  
2024/05/02 15:10:25 - mmengine - INFO - Evaluating bbox...
2024/05/02 15:10:32 - mmengine - INFO - bbox_mAP_copypaste: 0.358 0.466 0.406 -1.000 -1.000 0.358
2024/05/02 15:10:32 - mmengine - INFO - Epoch(val) [16][552/552]    coco/bbox_mAP: 0.3580  coco/bbox_mAP_50: 0.4660  coco/bbox_mAP_75: 0.4060  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.3580  data_time: 0.4232  time: 0.4427
2024/05/02 15:36:27 - mmengine - INFO - Epoch(train) [17][ 50/138]  base_lr: 1.0000e-02 lr: 6.3312e-03  eta: 20:59:13  time: 31.1081  data_time: 29.4643  memory: 4888  loss: 2.4548  loss_cls: 1.7311  loss_bbox: 0.7237
2024/05/02 16:00:29 - mmengine - INFO - Epoch(train) [17][100/138]  base_lr: 1.0000e-02 lr: 6.3312e-03  eta: 20:36:55  time: 28.8422  data_time: 23.0247  memory: 4904  loss: 2.4449  loss_cls: 1.7262  loss_bbox: 0.7187
2024/05/02 16:14:14 - mmengine - INFO - Exp name: yolov6_s_syncbn_fast_8xb32-400e_coco_20240501_205508
2024/05/02 16:14:14 - mmengine - INFO - Saving checkpoint at 17 epochs
2024/05/02 16:15:04 - mmengine - INFO - Epoch(val) [17][ 50/552]    eta: 0:07:27  time: 0.8907  data_time: 0.8710  memory: 4888  
2024/05/02 16:15:44 - mmengine - INFO - Epoch(val) [17][100/552]    eta: 0:06:22  time: 0.7997  data_time: 0.7808  memory: 416  
2024/05/02 16:16:02 - mmengine - INFO - Epoch(val) [17][150/552]    eta: 0:04:34  time: 0.3615  data_time: 0.3422  memory: 416  
2024/05/02 16:16:21 - mmengine - INFO - Epoch(val) [17][200/552]    eta: 0:03:33  time: 0.3743  data_time: 0.3548  memory: 408  
2024/05/02 16:16:40 - mmengine - INFO - Epoch(val) [17][250/552]    eta: 0:02:49  time: 0.3800  data_time: 0.3604  memory: 408  
2024/05/02 16:16:57 - mmengine - INFO - Epoch(val) [17][300/552]    eta: 0:02:11  time: 0.3333  data_time: 0.3118  memory: 408  
2024/05/02 16:17:14 - mmengine - INFO - Epoch(val) [17][350/552]    eta: 0:01:40  time: 0.3461  data_time: 0.3257  memory: 408  
2024/05/02 16:17:30 - mmengine - INFO - Epoch(val) [17][400/552]    eta: 0:01:12  time: 0.3153  data_time: 0.2967  memory: 405  
2024/05/02 16:17:47 - mmengine - INFO - Epoch(val) [17][450/552]    eta: 0:00:47  time: 0.3491  data_time: 0.3312  memory: 405  
2024/05/02 16:18:04 - mmengine - INFO - Epoch(val) [17][500/552]    eta: 0:00:23  time: 0.3286  data_time: 0.3094  memory: 405  
2024/05/02 16:18:21 - mmengine - INFO - Epoch(val) [17][550/552]    eta: 0:00:00  time: 0.3442  data_time: 0.3253  memory: 405  
2024/05/02 16:18:34 - mmengine - INFO - Evaluating bbox...
2024/05/02 16:18:40 - mmengine - INFO - bbox_mAP_copypaste: 0.459 0.603 0.523 -1.000 -1.000 0.459
2024/05/02 16:18:40 - mmengine - INFO - Epoch(val) [17][552/552]    coco/bbox_mAP: 0.4590  coco/bbox_mAP_50: 0.6030  coco/bbox_mAP_75: 0.5230  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.4590  data_time: 0.4186  time: 0.4380
2024/05/02 16:18:41 - mmengine - INFO - The previous best checkpoint /media/iris/Dong/openmmlab/detection/coding/yolov6/yolov6_s_syncbn_fast_8xb32-400e_coco/best_coco_bbox_mAP_epoch_15.pth is removed
2024/05/02 16:18:42 - mmengine - INFO - The best checkpoint with 0.4590 coco/bbox_mAP at 17 epoch is saved to best_coco_bbox_mAP_epoch_17.pth.
2024/05/02 16:45:15 - mmengine - INFO - Epoch(train) [18][ 50/138]  base_lr: 1.0000e-02 lr: 5.9096e-03  eta: 19:55:18  time: 31.8419  data_time: 27.6758  memory: 4871  loss: 2.4644  loss_cls: 1.7446  loss_bbox: 0.7198
2024/05/02 17:07:14 - mmengine - INFO - Epoch(train) [18][100/138]  base_lr: 1.0000e-02 lr: 5.9096e-03  eta: 19:30:46  time: 26.3778  data_time: 16.3832  memory: 4920  loss: 2.4076  loss_cls: 1.6989  loss_bbox: 0.7086
2024/05/02 17:21:10 - mmengine - INFO - Exp name: yolov6_s_syncbn_fast_8xb32-400e_coco_20240501_205508
2024/05/02 17:21:10 - mmengine - INFO - Saving checkpoint at 18 epochs
2024/05/02 17:22:01 - mmengine - INFO - Epoch(val) [18][ 50/552]    eta: 0:07:28  time: 0.8932  data_time: 0.8715  memory: 4871  
2024/05/02 17:22:40 - mmengine - INFO - Epoch(val) [18][100/552]    eta: 0:06:19  time: 0.7880  data_time: 0.7680  memory: 416  
2024/05/02 17:22:58 - mmengine - INFO - Epoch(val) [18][150/552]    eta: 0:04:34  time: 0.3644  data_time: 0.3456  memory: 416  
2024/05/02 17:23:16 - mmengine - INFO - Epoch(val) [18][200/552]    eta: 0:03:31  time: 0.3582  data_time: 0.3386  memory: 408  
2024/05/02 17:23:34 - mmengine - INFO - Epoch(val) [18][250/552]    eta: 0:02:47  time: 0.3653  data_time: 0.3460  memory: 408  
2024/05/02 17:23:52 - mmengine - INFO - Epoch(val) [18][300/552]    eta: 0:02:11  time: 0.3502  data_time: 0.3310  memory: 408  
2024/05/02 17:24:10 - mmengine - INFO - Epoch(val) [18][350/552]    eta: 0:01:40  time: 0.3528  data_time: 0.3330  memory: 408  
2024/05/02 17:24:25 - mmengine - INFO - Epoch(val) [18][400/552]    eta: 0:01:12  time: 0.3175  data_time: 0.2976  memory: 405  
2024/05/02 17:24:42 - mmengine - INFO - Epoch(val) [18][450/552]    eta: 0:00:46  time: 0.3323  data_time: 0.3134  memory: 405  
2024/05/02 17:25:00 - mmengine - INFO - Epoch(val) [18][500/552]    eta: 0:00:23  time: 0.3550  data_time: 0.3366  memory: 405  
2024/05/02 17:25:17 - mmengine - INFO - Epoch(val) [18][550/552]    eta: 0:00:00  time: 0.3492  data_time: 0.3291  memory: 405  
2024/05/02 17:25:29 - mmengine - INFO - Evaluating bbox...
2024/05/02 17:25:35 - mmengine - INFO - bbox_mAP_copypaste: 0.291 0.379 0.331 -1.000 -1.000 0.291
2024/05/02 17:25:35 - mmengine - INFO - Epoch(val) [18][552/552]    coco/bbox_mAP: 0.2910  coco/bbox_mAP_50: 0.3790  coco/bbox_mAP_75: 0.3310  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.2910  data_time: 0.4181  time: 0.4377
2024/05/02 17:51:15 - mmengine - INFO - Epoch(train) [19][ 50/138]  base_lr: 1.0000e-02 lr: 5.4814e-03  eta: 18:48:43  time: 30.8014  data_time: 22.9370  memory: 4871  loss: 2.3824  loss_cls: 1.7012  loss_bbox: 0.6812
2024/05/02 18:15:30 - mmengine - INFO - Epoch(train) [19][100/138]  base_lr: 1.0000e-02 lr: 5.4814e-03  eta: 18:26:31  time: 29.1058  data_time: 18.8948  memory: 4871  loss: 2.3938  loss_cls: 1.7072  loss_bbox: 0.6866
2024/05/02 18:29:02 - mmengine - INFO - Exp name: yolov6_s_syncbn_fast_8xb32-400e_coco_20240501_205508
2024/05/02 18:29:02 - mmengine - INFO - Saving checkpoint at 19 epochs
2024/05/02 18:29:52 - mmengine - INFO - Epoch(val) [19][ 50/552]    eta: 0:07:25  time: 0.8879  data_time: 0.8670  memory: 4871  
2024/05/02 18:30:31 - mmengine - INFO - Epoch(val) [19][100/552]    eta: 0:06:18  time: 0.7866  data_time: 0.7667  memory: 416  
2024/05/02 18:30:49 - mmengine - INFO - Epoch(val) [19][150/552]    eta: 0:04:32  time: 0.3610  data_time: 0.3417  memory: 416  
2024/05/02 18:31:09 - mmengine - INFO - Epoch(val) [19][200/552]    eta: 0:03:33  time: 0.3867  data_time: 0.3665  memory: 408  
2024/05/02 18:31:26 - mmengine - INFO - Epoch(val) [19][250/552]    eta: 0:02:47  time: 0.3489  data_time: 0.3288  memory: 408  
2024/05/02 18:31:44 - mmengine - INFO - Epoch(val) [19][300/552]    eta: 0:02:11  time: 0.3658  data_time: 0.3460  memory: 408  
2024/05/02 18:32:01 - mmengine - INFO - Epoch(val) [19][350/552]    eta: 0:01:40  time: 0.3402  data_time: 0.3204  memory: 408  
2024/05/02 18:32:18 - mmengine - INFO - Epoch(val) [19][400/552]    eta: 0:01:12  time: 0.3368  data_time: 0.3179  memory: 405  
2024/05/02 18:32:35 - mmengine - INFO - Epoch(val) [19][450/552]    eta: 0:00:47  time: 0.3402  data_time: 0.3212  memory: 405  
2024/05/02 18:32:52 - mmengine - INFO - Epoch(val) [19][500/552]    eta: 0:00:23  time: 0.3339  data_time: 0.3148  memory: 405  
2024/05/02 18:33:09 - mmengine - INFO - Epoch(val) [19][550/552]    eta: 0:00:00  time: 0.3417  data_time: 0.3217  memory: 405  
2024/05/02 18:33:22 - mmengine - INFO - Evaluating bbox...
2024/05/02 18:33:28 - mmengine - INFO - bbox_mAP_copypaste: 0.444 0.576 0.495 -1.000 -1.000 0.444
2024/05/02 18:33:28 - mmengine - INFO - Epoch(val) [19][552/552]    coco/bbox_mAP: 0.4440  coco/bbox_mAP_50: 0.5760  coco/bbox_mAP_75: 0.4950  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.4440  data_time: 0.4195  time: 0.4392
2024/05/02 19:00:53 - mmengine - INFO - Epoch(train) [20][ 50/138]  base_lr: 1.0000e-02 lr: 5.0500e-03  eta: 17:45:45  time: 32.9042  data_time: 26.6167  memory: 4855  loss: 2.3509  loss_cls: 1.6767  loss_bbox: 0.6742
2024/05/02 19:22:56 - mmengine - INFO - Epoch(train) [20][100/138]  base_lr: 1.0000e-02 lr: 5.0500e-03  eta: 17:21:35  time: 26.4582  data_time: 17.4948  memory: 4871  loss: 2.3864  loss_cls: 1.7095  loss_bbox: 0.6769
2024/05/02 19:36:07 - mmengine - INFO - Exp name: yolov6_s_syncbn_fast_8xb32-400e_coco_20240501_205508
2024/05/02 19:36:07 - mmengine - INFO - Saving checkpoint at 20 epochs
2024/05/02 19:36:53 - mmengine - INFO - Epoch(val) [20][ 50/552]    eta: 0:07:06  time: 0.8487  data_time: 0.8272  memory: 4871  
2024/05/02 19:37:34 - mmengine - INFO - Epoch(val) [20][100/552]    eta: 0:06:15  time: 0.8143  data_time: 0.7958  memory: 416  
2024/05/02 19:37:53 - mmengine - INFO - Epoch(val) [20][150/552]    eta: 0:04:32  time: 0.3679  data_time: 0.3487  memory: 416  
2024/05/02 19:38:11 - mmengine - INFO - Epoch(val) [20][200/552]    eta: 0:03:31  time: 0.3775  data_time: 0.3577  memory: 408  
2024/05/02 19:38:30 - mmengine - INFO - Epoch(val) [20][250/552]    eta: 0:02:47  time: 0.3647  data_time: 0.3449  memory: 408  
2024/05/02 19:38:47 - mmengine - INFO - Epoch(val) [20][300/552]    eta: 0:02:11  time: 0.3497  data_time: 0.3305  memory: 408  
2024/05/02 19:39:04 - mmengine - INFO - Epoch(val) [20][350/552]    eta: 0:01:39  time: 0.3375  data_time: 0.3183  memory: 408  
2024/05/02 19:39:21 - mmengine - INFO - Epoch(val) [20][400/552]    eta: 0:01:12  time: 0.3321  data_time: 0.3136  memory: 405  
2024/05/02 19:39:38 - mmengine - INFO - Epoch(val) [20][450/552]    eta: 0:00:46  time: 0.3372  data_time: 0.3184  memory: 405  
2024/05/02 19:39:54 - mmengine - INFO - Epoch(val) [20][500/552]    eta: 0:00:23  time: 0.3213  data_time: 0.2993  memory: 405  
2024/05/02 19:40:10 - mmengine - INFO - Epoch(val) [20][550/552]    eta: 0:00:00  time: 0.3361  data_time: 0.3157  memory: 405  
2024/05/02 19:40:28 - mmengine - INFO - Evaluating bbox...
2024/05/02 19:40:34 - mmengine - INFO - bbox_mAP_copypaste: 0.423 0.545 0.472 -1.000 -1.000 0.423
2024/05/02 19:40:34 - mmengine - INFO - Epoch(val) [20][552/552]    coco/bbox_mAP: 0.4230  coco/bbox_mAP_50: 0.5450  coco/bbox_mAP_75: 0.4720  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.4230  data_time: 0.4141  time: 0.4338
2024/05/02 20:06:30 - mmengine - INFO - Epoch(train) [21][ 50/138]  base_lr: 1.0000e-02 lr: 4.6186e-03  eta: 16:39:28  time: 31.1056  data_time: 20.3693  memory: 4888  loss: 2.3333  loss_cls: 1.6669  loss_bbox: 0.6664
2024/05/02 20:30:44 - mmengine - INFO - Epoch(train) [21][100/138]  base_lr: 1.0000e-02 lr: 4.6186e-03  eta: 16:17:06  time: 29.0794  data_time: 5.9195  memory: 4855  loss: 2.3386  loss_cls: 1.6720  loss_bbox: 0.6667
2024/05/02 20:43:28 - mmengine - INFO - Exp name: yolov6_s_syncbn_fast_8xb32-400e_coco_20240501_205508
2024/05/02 20:43:28 - mmengine - INFO - Saving checkpoint at 21 epochs
2024/05/02 20:44:18 - mmengine - INFO - Epoch(val) [21][ 50/552]    eta: 0:07:48  time: 0.9331  data_time: 0.9138  memory: 4871  
2024/05/02 20:44:58 - mmengine - INFO - Epoch(val) [21][100/552]    eta: 0:06:34  time: 0.8131  data_time: 0.7940  memory: 416  
2024/05/02 20:45:18 - mmengine - INFO - Epoch(val) [21][150/552]    eta: 0:04:45  time: 0.3864  data_time: 0.3668  memory: 416  
2024/05/02 20:45:36 - mmengine - INFO - Epoch(val) [21][200/552]    eta: 0:03:40  time: 0.3712  data_time: 0.3524  memory: 408  
2024/05/02 20:45:54 - mmengine - INFO - Epoch(val) [21][250/552]    eta: 0:02:52  time: 0.3537  data_time: 0.3350  memory: 408  
2024/05/02 20:46:12 - mmengine - INFO - Epoch(val) [21][300/552]    eta: 0:02:14  time: 0.3542  data_time: 0.3335  memory: 408  
2024/05/02 20:46:29 - mmengine - INFO - Epoch(val) [21][350/552]    eta: 0:01:42  time: 0.3505  data_time: 0.3309  memory: 408  
2024/05/02 20:46:45 - mmengine - INFO - Epoch(val) [21][400/552]    eta: 0:01:13  time: 0.3271  data_time: 0.3087  memory: 405  
2024/05/02 20:47:02 - mmengine - INFO - Epoch(val) [21][450/552]    eta: 0:00:47  time: 0.3303  data_time: 0.3115  memory: 405  
2024/05/02 20:47:19 - mmengine - INFO - Epoch(val) [21][500/552]    eta: 0:00:23  time: 0.3495  data_time: 0.3310  memory: 405  
2024/05/02 20:47:36 - mmengine - INFO - Epoch(val) [21][550/552]    eta: 0:00:00  time: 0.3335  data_time: 0.3153  memory: 405  
2024/05/02 20:47:52 - mmengine - INFO - Evaluating bbox...
2024/05/02 20:47:58 - mmengine - INFO - bbox_mAP_copypaste: 0.479 0.621 0.550 -1.000 -1.000 0.479
2024/05/02 20:47:59 - mmengine - INFO - Epoch(val) [21][552/552]    coco/bbox_mAP: 0.4790  coco/bbox_mAP_50: 0.6210  coco/bbox_mAP_75: 0.5500  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.4790  data_time: 0.4262  time: 0.4452
2024/05/02 20:47:59 - mmengine - INFO - The previous best checkpoint /media/iris/Dong/openmmlab/detection/coding/yolov6/yolov6_s_syncbn_fast_8xb32-400e_coco/best_coco_bbox_mAP_epoch_17.pth is removed
2024/05/02 20:48:00 - mmengine - INFO - The best checkpoint with 0.4790 coco/bbox_mAP at 21 epoch is saved to best_coco_bbox_mAP_epoch_21.pth.
2024/05/02 20:48:01 - mmengine - INFO - Switch pipeline now!
2024/05/02 20:56:07 - mmengine - INFO - Epoch(train) [22][ 50/138]  base_lr: 1.0000e-02 lr: 4.1904e-03  eta: 15:22:38  time: 9.7090  data_time: 9.4571  memory: 4806  loss: 2.4646  loss_cls: 1.7452  loss_bbox: 0.7194
2024/05/02 21:03:26 - mmengine - INFO - Epoch(train) [22][100/138]  base_lr: 1.0000e-02 lr: 4.1904e-03  eta: 14:49:36  time: 8.7869  data_time: 8.5335  memory: 4789  loss: 2.3954  loss_cls: 1.7009  loss_bbox: 0.6945
2024/05/02 21:03:27 - mmengine - INFO - Exp name: yolov6_s_syncbn_fast_8xb32-400e_coco_20240501_205508
2024/05/02 21:07:53 - mmengine - INFO - Exp name: yolov6_s_syncbn_fast_8xb32-400e_coco_20240501_205508
2024/05/02 21:07:53 - mmengine - INFO - Saving checkpoint at 22 epochs
2024/05/02 21:08:35 - mmengine - INFO - Epoch(val) [22][ 50/552]    eta: 0:06:43  time: 0.8032  data_time: 0.7833  memory: 4823  
2024/05/02 21:09:17 - mmengine - INFO - Epoch(val) [22][100/552]    eta: 0:06:10  time: 0.8374  data_time: 0.8183  memory: 416  
2024/05/02 21:09:35 - mmengine - INFO - Epoch(val) [22][150/552]    eta: 0:04:27  time: 0.3562  data_time: 0.3371  memory: 416  
2024/05/02 21:09:52 - mmengine - INFO - Epoch(val) [22][200/552]    eta: 0:03:26  time: 0.3478  data_time: 0.3266  memory: 408  
2024/05/02 21:10:10 - mmengine - INFO - Epoch(val) [22][250/552]    eta: 0:02:42  time: 0.3456  data_time: 0.3249  memory: 408  
2024/05/02 21:10:28 - mmengine - INFO - Epoch(val) [22][300/552]    eta: 0:02:08  time: 0.3590  data_time: 0.3389  memory: 408  
2024/05/02 21:10:45 - mmengine - INFO - Epoch(val) [22][350/552]    eta: 0:01:37  time: 0.3435  data_time: 0.3239  memory: 408  
2024/05/02 21:11:00 - mmengine - INFO - Epoch(val) [22][400/552]    eta: 0:01:10  time: 0.2976  data_time: 0.2792  memory: 405  
2024/05/02 21:11:15 - mmengine - INFO - Epoch(val) [22][450/552]    eta: 0:00:45  time: 0.3132  data_time: 0.2952  memory: 405  
2024/05/02 21:11:30 - mmengine - INFO - Epoch(val) [22][500/552]    eta: 0:00:22  time: 0.2927  data_time: 0.2743  memory: 405  
2024/05/02 21:11:46 - mmengine - INFO - Epoch(val) [22][550/552]    eta: 0:00:00  time: 0.3301  data_time: 0.3099  memory: 405  
2024/05/02 21:12:00 - mmengine - INFO - Evaluating bbox...
2024/05/02 21:12:06 - mmengine - INFO - bbox_mAP_copypaste: 0.208 0.293 0.230 -1.000 -1.000 0.208
2024/05/02 21:12:06 - mmengine - INFO - Epoch(val) [22][552/552]    coco/bbox_mAP: 0.2080  coco/bbox_mAP_50: 0.2930  coco/bbox_mAP_75: 0.2300  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.2080  data_time: 0.3991  time: 0.4186
2024/05/02 21:20:48 - mmengine - INFO - Epoch(train) [23][ 50/138]  base_lr: 1.0000e-02 lr: 3.7688e-03  eta: 13:53:39  time: 10.4380  data_time: 9.3127  memory: 4806  loss: 2.2667  loss_cls: 1.6094  loss_bbox: 0.6573
2024/05/02 21:27:56 - mmengine - INFO - Epoch(train) [23][100/138]  base_lr: 1.0000e-02 lr: 3.7688e-03  eta: 13:22:44  time: 8.5646  data_time: 6.5847  memory: 4806  loss: 2.3152  loss_cls: 1.6251  loss_bbox: 0.6900
2024/05/02 21:32:21 - mmengine - INFO - Exp name: yolov6_s_syncbn_fast_8xb32-400e_coco_20240501_205508
2024/05/02 21:32:21 - mmengine - INFO - Saving checkpoint at 23 epochs
2024/05/02 21:33:03 - mmengine - INFO - Epoch(val) [23][ 50/552]    eta: 0:06:51  time: 0.8196  data_time: 0.8002  memory: 4806  
2024/05/02 21:33:43 - mmengine - INFO - Epoch(val) [23][100/552]    eta: 0:06:03  time: 0.7898  data_time: 0.7706  memory: 416  
2024/05/02 21:34:00 - mmengine - INFO - Epoch(val) [23][150/552]    eta: 0:04:22  time: 0.3478  data_time: 0.3279  memory: 416  
2024/05/02 21:34:19 - mmengine - INFO - Epoch(val) [23][200/552]    eta: 0:03:24  time: 0.3699  data_time: 0.3500  memory: 408  
2024/05/02 21:34:37 - mmengine - INFO - Epoch(val) [23][250/552]    eta: 0:02:42  time: 0.3573  data_time: 0.3384  memory: 408  
2024/05/02 21:34:54 - mmengine - INFO - Epoch(val) [23][300/552]    eta: 0:02:07  time: 0.3573  data_time: 0.3381  memory: 408  
2024/05/02 21:35:10 - mmengine - INFO - Epoch(val) [23][350/552]    eta: 0:01:36  time: 0.3045  data_time: 0.2831  memory: 408  
2024/05/02 21:35:24 - mmengine - INFO - Epoch(val) [23][400/552]    eta: 0:01:09  time: 0.2898  data_time: 0.2693  memory: 405  
2024/05/02 21:35:40 - mmengine - INFO - Epoch(val) [23][450/552]    eta: 0:00:44  time: 0.3096  data_time: 0.2901  memory: 405  
2024/05/02 21:35:53 - mmengine - INFO - Epoch(val) [23][500/552]    eta: 0:00:21  time: 0.2721  data_time: 0.2521  memory: 405  
2024/05/02 21:36:10 - mmengine - INFO - Epoch(val) [23][550/552]    eta: 0:00:00  time: 0.3383  data_time: 0.3198  memory: 405  
2024/05/02 21:36:28 - mmengine - INFO - Evaluating bbox...
2024/05/02 21:36:33 - mmengine - INFO - bbox_mAP_copypaste: 0.468 0.613 0.530 -1.000 -1.000 0.468
2024/05/02 21:36:34 - mmengine - INFO - Epoch(val) [23][552/552]    coco/bbox_mAP: 0.4680  coco/bbox_mAP_50: 0.6130  coco/bbox_mAP_75: 0.5300  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.4680  data_time: 0.3928  time: 0.4125
2024/05/02 21:45:08 - mmengine - INFO - Epoch(train) [24][ 50/138]  base_lr: 1.0000e-02 lr: 3.3570e-03  eta: 12:30:20  time: 10.2813  data_time: 8.1850  memory: 4823  loss: 2.2018  loss_cls: 1.5496  loss_bbox: 0.6522
2024/05/02 21:52:23 - mmengine - INFO - Epoch(train) [24][100/138]  base_lr: 1.0000e-02 lr: 3.3570e-03  eta: 12:01:27  time: 8.7123  data_time: 6.4411  memory: 4855  loss: 2.3043  loss_cls: 1.6290  loss_bbox: 0.6753
2024/05/02 21:56:51 - mmengine - INFO - Exp name: yolov6_s_syncbn_fast_8xb32-400e_coco_20240501_205508
2024/05/02 21:56:51 - mmengine - INFO - Saving checkpoint at 24 epochs
2024/05/02 21:57:36 - mmengine - INFO - Epoch(val) [24][ 50/552]    eta: 0:07:17  time: 0.8725  data_time: 0.8537  memory: 4806  
2024/05/02 21:58:14 - mmengine - INFO - Epoch(val) [24][100/552]    eta: 0:06:10  time: 0.7663  data_time: 0.7479  memory: 416  
2024/05/02 21:58:31 - mmengine - INFO - Epoch(val) [24][150/552]    eta: 0:04:24  time: 0.3369  data_time: 0.3176  memory: 416  
2024/05/02 21:58:50 - mmengine - INFO - Epoch(val) [24][200/552]    eta: 0:03:26  time: 0.3677  data_time: 0.3483  memory: 408  
2024/05/02 21:59:07 - mmengine - INFO - Epoch(val) [24][250/552]    eta: 0:02:41  time: 0.3381  data_time: 0.3173  memory: 408  
2024/05/02 21:59:24 - mmengine - INFO - Epoch(val) [24][300/552]    eta: 0:02:07  time: 0.3474  data_time: 0.3283  memory: 408  
2024/05/02 21:59:39 - mmengine - INFO - Epoch(val) [24][350/552]    eta: 0:01:36  time: 0.3033  data_time: 0.2827  memory: 408  
2024/05/02 21:59:55 - mmengine - INFO - Epoch(val) [24][400/552]    eta: 0:01:09  time: 0.3111  data_time: 0.2929  memory: 405  
2024/05/02 22:00:11 - mmengine - INFO - Epoch(val) [24][450/552]    eta: 0:00:44  time: 0.3180  data_time: 0.3005  memory: 405  
2024/05/02 22:00:26 - mmengine - INFO - Epoch(val) [24][500/552]    eta: 0:00:22  time: 0.3022  data_time: 0.2830  memory: 405  
2024/05/02 22:00:42 - mmengine - INFO - Epoch(val) [24][550/552]    eta: 0:00:00  time: 0.3330  data_time: 0.3147  memory: 405  
2024/05/02 22:00:58 - mmengine - INFO - Evaluating bbox...
2024/05/02 22:01:03 - mmengine - INFO - bbox_mAP_copypaste: 0.214 0.284 0.233 -1.000 -1.000 0.214
2024/05/02 22:01:03 - mmengine - INFO - Epoch(val) [24][552/552]    coco/bbox_mAP: 0.2140  coco/bbox_mAP_50: 0.2840  coco/bbox_mAP_75: 0.2330  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.2140  data_time: 0.3971  time: 0.4161
2024/05/02 22:09:57 - mmengine - INFO - Epoch(train) [25][ 50/138]  base_lr: 1.0000e-02 lr: 2.9580e-03  eta: 11:12:27  time: 10.6665  data_time: 9.8329  memory: 4806  loss: 2.1828  loss_cls: 1.5566  loss_bbox: 0.6262
2024/05/02 22:17:32 - mmengine - INFO - Epoch(train) [25][100/138]  base_lr: 1.0000e-02 lr: 2.9580e-03  eta: 10:45:25  time: 9.1083  data_time: 7.9988  memory: 4823  loss: 2.2422  loss_cls: 1.5906  loss_bbox: 0.6516
2024/05/02 22:21:45 - mmengine - INFO - Exp name: yolov6_s_syncbn_fast_8xb32-400e_coco_20240501_205508
2024/05/02 22:21:45 - mmengine - INFO - Saving checkpoint at 25 epochs
2024/05/02 22:22:29 - mmengine - INFO - Epoch(val) [25][ 50/552]    eta: 0:07:10  time: 0.8574  data_time: 0.8383  memory: 4789  
2024/05/02 22:23:10 - mmengine - INFO - Epoch(val) [25][100/552]    eta: 0:06:16  time: 0.8075  data_time: 0.7882  memory: 416  
2024/05/02 22:23:30 - mmengine - INFO - Epoch(val) [25][150/552]    eta: 0:04:36  time: 0.3955  data_time: 0.3759  memory: 416  
2024/05/02 22:23:48 - mmengine - INFO - Epoch(val) [25][200/552]    eta: 0:03:34  time: 0.3741  data_time: 0.3556  memory: 408  
2024/05/02 22:24:08 - mmengine - INFO - Epoch(val) [25][250/552]    eta: 0:02:50  time: 0.3851  data_time: 0.3658  memory: 408  
2024/05/02 22:24:24 - mmengine - INFO - Epoch(val) [25][300/552]    eta: 0:02:12  time: 0.3385  data_time: 0.3193  memory: 408  
2024/05/02 22:24:41 - mmengine - INFO - Epoch(val) [25][350/552]    eta: 0:01:40  time: 0.3370  data_time: 0.3170  memory: 408  
2024/05/02 22:24:57 - mmengine - INFO - Epoch(val) [25][400/552]    eta: 0:01:12  time: 0.3182  data_time: 0.2996  memory: 405  
2024/05/02 22:25:13 - mmengine - INFO - Epoch(val) [25][450/552]    eta: 0:00:46  time: 0.3085  data_time: 0.2890  memory: 405  
2024/05/02 22:25:27 - mmengine - INFO - Epoch(val) [25][500/552]    eta: 0:00:22  time: 0.2944  data_time: 0.2740  memory: 405  
2024/05/02 22:25:44 - mmengine - INFO - Epoch(val) [25][550/552]    eta: 0:00:00  time: 0.3283  data_time: 0.3092  memory: 405  
2024/05/02 22:25:58 - mmengine - INFO - Evaluating bbox...
2024/05/02 22:26:03 - mmengine - INFO - bbox_mAP_copypaste: 0.379 0.507 0.420 -1.000 -1.000 0.379
2024/05/02 22:26:03 - mmengine - INFO - Epoch(val) [25][552/552]    coco/bbox_mAP: 0.3790  coco/bbox_mAP_50: 0.5070  coco/bbox_mAP_75: 0.4200  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.3790  data_time: 0.4110  time: 0.4303
2024/05/02 22:34:34 - mmengine - INFO - Epoch(train) [26][ 50/138]  base_lr: 1.0000e-02 lr: 2.5750e-03  eta: 9:58:57  time: 10.2140  data_time: 3.6157  memory: 4855  loss: 2.0800  loss_cls: 1.4948  loss_bbox: 0.5852
2024/05/02 22:42:27 - mmengine - INFO - Epoch(train) [26][100/138]  base_lr: 1.0000e-02 lr: 2.5750e-03  eta: 9:33:33  time: 9.4669  data_time: 5.3479  memory: 4823  loss: 2.1362  loss_cls: 1.5202  loss_bbox: 0.6159
2024/05/02 22:47:20 - mmengine - INFO - Exp name: yolov6_s_syncbn_fast_8xb32-400e_coco_20240501_205508
2024/05/02 22:47:20 - mmengine - INFO - Saving checkpoint at 26 epochs
2024/05/02 22:48:04 - mmengine - INFO - Epoch(val) [26][ 50/552]    eta: 0:07:08  time: 0.8545  data_time: 0.8341  memory: 4823  
2024/05/02 22:48:46 - mmengine - INFO - Epoch(val) [26][100/552]    eta: 0:06:21  time: 0.8320  data_time: 0.8132  memory: 416  
2024/05/02 22:49:05 - mmengine - INFO - Epoch(val) [26][150/552]    eta: 0:04:36  time: 0.3791  data_time: 0.3596  memory: 416  
2024/05/02 22:49:22 - mmengine - INFO - Epoch(val) [26][200/552]    eta: 0:03:33  time: 0.3577  data_time: 0.3368  memory: 408  
2024/05/02 22:49:41 - mmengine - INFO - Epoch(val) [26][250/552]    eta: 0:02:48  time: 0.3733  data_time: 0.3529  memory: 408  
2024/05/02 22:49:57 - mmengine - INFO - Epoch(val) [26][300/552]    eta: 0:02:11  time: 0.3276  data_time: 0.3086  memory: 408  
2024/05/02 22:50:15 - mmengine - INFO - Epoch(val) [26][350/552]    eta: 0:01:40  time: 0.3457  data_time: 0.3273  memory: 408  
2024/05/02 22:50:31 - mmengine - INFO - Epoch(val) [26][400/552]    eta: 0:01:11  time: 0.3192  data_time: 0.3011  memory: 405  
2024/05/02 22:50:47 - mmengine - INFO - Epoch(val) [26][450/552]    eta: 0:00:46  time: 0.3254  data_time: 0.3067  memory: 405  
2024/05/02 22:51:03 - mmengine - INFO - Epoch(val) [26][500/552]    eta: 0:00:23  time: 0.3136  data_time: 0.2956  memory: 405  
2024/05/02 22:51:19 - mmengine - INFO - Epoch(val) [26][550/552]    eta: 0:00:00  time: 0.3243  data_time: 0.3052  memory: 405  
2024/05/02 22:51:33 - mmengine - INFO - Evaluating bbox...
2024/05/02 22:51:38 - mmengine - INFO - bbox_mAP_copypaste: 0.548 0.699 0.611 -1.000 -1.000 0.548
2024/05/02 22:51:39 - mmengine - INFO - Epoch(val) [26][552/552]    coco/bbox_mAP: 0.5480  coco/bbox_mAP_50: 0.6990  coco/bbox_mAP_75: 0.6110  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.5480  data_time: 0.4109  time: 0.4301
2024/05/02 22:51:39 - mmengine - INFO - The previous best checkpoint /media/iris/Dong/openmmlab/detection/coding/yolov6/yolov6_s_syncbn_fast_8xb32-400e_coco/best_coco_bbox_mAP_epoch_21.pth is removed
2024/05/02 22:51:40 - mmengine - INFO - The best checkpoint with 0.5480 coco/bbox_mAP at 26 epoch is saved to best_coco_bbox_mAP_epoch_26.pth.
2024/05/02 23:00:55 - mmengine - INFO - Epoch(train) [27][ 50/138]  base_lr: 1.0000e-02 lr: 2.2108e-03  eta: 8:50:06  time: 11.0689  data_time: 10.0855  memory: 4806  loss: 2.0982  loss_cls: 1.4906  loss_bbox: 0.6076
2024/05/02 23:08:07 - mmengine - INFO - Epoch(train) [27][100/138]  base_lr: 1.0000e-02 lr: 2.2108e-03  eta: 8:25:45  time: 8.6363  data_time: 7.6174  memory: 4806  loss: 2.1488  loss_cls: 1.5542  loss_bbox: 0.5946
2024/05/02 23:13:05 - mmengine - INFO - Exp name: yolov6_s_syncbn_fast_8xb32-400e_coco_20240501_205508
2024/05/02 23:13:05 - mmengine - INFO - Saving checkpoint at 27 epochs
2024/05/02 23:13:50 - mmengine - INFO - Epoch(val) [27][ 50/552]    eta: 0:07:19  time: 0.8751  data_time: 0.8559  memory: 4855  
2024/05/02 23:14:31 - mmengine - INFO - Epoch(val) [27][100/552]    eta: 0:06:22  time: 0.8181  data_time: 0.7992  memory: 416  
2024/05/02 23:14:50 - mmengine - INFO - Epoch(val) [27][150/552]    eta: 0:04:38  time: 0.3861  data_time: 0.3677  memory: 416  
2024/05/02 23:15:08 - mmengine - INFO - Epoch(val) [27][200/552]    eta: 0:03:34  time: 0.3622  data_time: 0.3436  memory: 408  
2024/05/02 23:15:27 - mmengine - INFO - Epoch(val) [27][250/552]    eta: 0:02:50  time: 0.3746  data_time: 0.3552  memory: 408  
2024/05/02 23:15:44 - mmengine - INFO - Epoch(val) [27][300/552]    eta: 0:02:12  time: 0.3448  data_time: 0.3254  memory: 408  
2024/05/02 23:16:02 - mmengine - INFO - Epoch(val) [27][350/552]    eta: 0:01:41  time: 0.3484  data_time: 0.3274  memory: 408  
2024/05/02 23:16:18 - mmengine - INFO - Epoch(val) [27][400/552]    eta: 0:01:12  time: 0.3276  data_time: 0.3084  memory: 405  
2024/05/02 23:16:34 - mmengine - INFO - Epoch(val) [27][450/552]    eta: 0:00:47  time: 0.3129  data_time: 0.2927  memory: 405  
2024/05/02 23:16:49 - mmengine - INFO - Epoch(val) [27][500/552]    eta: 0:00:23  time: 0.3004  data_time: 0.2823  memory: 405  
2024/05/02 23:17:06 - mmengine - INFO - Epoch(val) [27][550/552]    eta: 0:00:00  time: 0.3339  data_time: 0.3158  memory: 405  
2024/05/02 23:17:18 - mmengine - INFO - Evaluating bbox...
2024/05/02 23:17:23 - mmengine - INFO - bbox_mAP_copypaste: 0.516 0.657 0.573 -1.000 -1.000 0.516
2024/05/02 23:17:23 - mmengine - INFO - Epoch(val) [27][552/552]    coco/bbox_mAP: 0.5160  coco/bbox_mAP_50: 0.6570  coco/bbox_mAP_75: 0.5730  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.5160  data_time: 0.4141  time: 0.4333
2024/05/02 23:26:55 - mmengine - INFO - Epoch(train) [28][ 50/138]  base_lr: 1.0000e-02 lr: 1.8682e-03  eta: 7:44:35  time: 11.4338  data_time: 9.4882  memory: 4806  loss: 2.0955  loss_cls: 1.4993  loss_bbox: 0.5962
2024/05/02 23:34:35 - mmengine - INFO - Epoch(train) [28][100/138]  base_lr: 1.0000e-02 lr: 1.8682e-03  eta: 7:21:34  time: 9.1992  data_time: 1.8361  memory: 4823  loss: 2.0437  loss_cls: 1.4499  loss_bbox: 0.5937
2024/05/02 23:38:51 - mmengine - INFO - Exp name: yolov6_s_syncbn_fast_8xb32-400e_coco_20240501_205508
2024/05/02 23:38:51 - mmengine - INFO - Saving checkpoint at 28 epochs
2024/05/02 23:39:35 - mmengine - INFO - Epoch(val) [28][ 50/552]    eta: 0:07:02  time: 0.8414  data_time: 0.8211  memory: 4789  
2024/05/02 23:40:17 - mmengine - INFO - Epoch(val) [28][100/552]    eta: 0:06:17  time: 0.8293  data_time: 0.8111  memory: 416  
2024/05/02 23:40:35 - mmengine - INFO - Epoch(val) [28][150/552]    eta: 0:04:32  time: 0.3609  data_time: 0.3420  memory: 416  
2024/05/02 23:40:55 - mmengine - INFO - Epoch(val) [28][200/552]    eta: 0:03:34  time: 0.4109  data_time: 0.3916  memory: 408  
2024/05/02 23:41:13 - mmengine - INFO - Epoch(val) [28][250/552]    eta: 0:02:49  time: 0.3675  data_time: 0.3492  memory: 408  
2024/05/02 23:41:31 - mmengine - INFO - Epoch(val) [28][300/552]    eta: 0:02:13  time: 0.3584  data_time: 0.3388  memory: 408  
2024/05/02 23:41:49 - mmengine - INFO - Epoch(val) [28][350/552]    eta: 0:01:41  time: 0.3433  data_time: 0.3248  memory: 408  
2024/05/02 23:42:04 - mmengine - INFO - Epoch(val) [28][400/552]    eta: 0:01:12  time: 0.3104  data_time: 0.2921  memory: 405  
2024/05/02 23:42:21 - mmengine - INFO - Epoch(val) [28][450/552]    eta: 0:00:47  time: 0.3289  data_time: 0.3113  memory: 405  
2024/05/02 23:42:36 - mmengine - INFO - Epoch(val) [28][500/552]    eta: 0:00:23  time: 0.3054  data_time: 0.2875  memory: 405  
2024/05/02 23:42:52 - mmengine - INFO - Epoch(val) [28][550/552]    eta: 0:00:00  time: 0.3307  data_time: 0.3130  memory: 405  
2024/05/02 23:43:06 - mmengine - INFO - Evaluating bbox...
2024/05/02 23:43:11 - mmengine - INFO - bbox_mAP_copypaste: 0.467 0.592 0.517 -1.000 -1.000 0.467
2024/05/02 23:43:12 - mmengine - INFO - Epoch(val) [28][552/552]    coco/bbox_mAP: 0.4670  coco/bbox_mAP_50: 0.5920  coco/bbox_mAP_75: 0.5170  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.4670  data_time: 0.4149  time: 0.4335
2024/05/02 23:52:49 - mmengine - INFO - Epoch(train) [29][ 50/138]  base_lr: 1.0000e-02 lr: 1.5498e-03  eta: 6:42:07  time: 11.5397  data_time: 2.6876  memory: 4806  loss: 2.0121  loss_cls: 1.4463  loss_bbox: 0.5658
2024/05/03 00:00:37 - mmengine - INFO - Epoch(train) [29][100/138]  base_lr: 1.0000e-02 lr: 1.5498e-03  eta: 6:20:11  time: 9.3598  data_time: 0.0007  memory: 4806  loss: 1.9528  loss_cls: 1.4043  loss_bbox: 0.5485
2024/05/03 00:05:01 - mmengine - INFO - Exp name: yolov6_s_syncbn_fast_8xb32-400e_coco_20240501_205508
2024/05/03 00:05:09 - mmengine - INFO - Exp name: yolov6_s_syncbn_fast_8xb32-400e_coco_20240501_205508
2024/05/03 00:05:09 - mmengine - INFO - Saving checkpoint at 29 epochs
2024/05/03 00:05:53 - mmengine - INFO - Epoch(val) [29][ 50/552]    eta: 0:07:12  time: 0.8619  data_time: 0.8432  memory: 4855  
2024/05/03 00:06:32 - mmengine - INFO - Epoch(val) [29][100/552]    eta: 0:06:12  time: 0.7860  data_time: 0.7674  memory: 416  
2024/05/03 00:06:51 - mmengine - INFO - Epoch(val) [29][150/552]    eta: 0:04:31  time: 0.3752  data_time: 0.3568  memory: 416  
2024/05/03 00:07:10 - mmengine - INFO - Epoch(val) [29][200/552]    eta: 0:03:31  time: 0.3788  data_time: 0.3600  memory: 408  
2024/05/03 00:07:28 - mmengine - INFO - Epoch(val) [29][250/552]    eta: 0:02:47  time: 0.3652  data_time: 0.3457  memory: 408  
2024/05/03 00:07:45 - mmengine - INFO - Epoch(val) [29][300/552]    eta: 0:02:10  time: 0.3409  data_time: 0.3218  memory: 408  
2024/05/03 00:08:03 - mmengine - INFO - Epoch(val) [29][350/552]    eta: 0:01:39  time: 0.3410  data_time: 0.3213  memory: 408  
2024/05/03 00:08:17 - mmengine - INFO - Epoch(val) [29][400/552]    eta: 0:01:11  time: 0.2979  data_time: 0.2786  memory: 405  
2024/05/03 00:08:33 - mmengine - INFO - Epoch(val) [29][450/552]    eta: 0:00:45  time: 0.3113  data_time: 0.2931  memory: 405  
2024/05/03 00:08:49 - mmengine - INFO - Epoch(val) [29][500/552]    eta: 0:00:22  time: 0.3107  data_time: 0.2930  memory: 405  
2024/05/03 00:09:05 - mmengine - INFO - Epoch(val) [29][550/552]    eta: 0:00:00  time: 0.3214  data_time: 0.3019  memory: 405  
2024/05/03 00:09:22 - mmengine - INFO - Evaluating bbox...
2024/05/03 00:09:27 - mmengine - INFO - bbox_mAP_copypaste: 0.582 0.733 0.646 -1.000 -1.000 0.582
2024/05/03 00:09:27 - mmengine - INFO - Epoch(val) [29][552/552]    coco/bbox_mAP: 0.5820  coco/bbox_mAP_50: 0.7330  coco/bbox_mAP_75: 0.6460  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.5820  data_time: 0.4065  time: 0.4253
2024/05/03 00:09:27 - mmengine - INFO - The previous best checkpoint /media/iris/Dong/openmmlab/detection/coding/yolov6/yolov6_s_syncbn_fast_8xb32-400e_coco/best_coco_bbox_mAP_epoch_26.pth is removed
2024/05/03 00:09:28 - mmengine - INFO - The best checkpoint with 0.5820 coco/bbox_mAP at 29 epoch is saved to best_coco_bbox_mAP_epoch_29.pth.
2024/05/03 00:18:32 - mmengine - INFO - Epoch(train) [30][ 50/138]  base_lr: 1.0000e-02 lr: 1.2581e-03  eta: 5:42:23  time: 10.8357  data_time: 9.0354  memory: 4789  loss: 1.9938  loss_cls: 1.4381  loss_bbox: 0.5558
2024/05/03 00:26:10 - mmengine - INFO - Epoch(train) [30][100/138]  base_lr: 1.0000e-02 lr: 1.2581e-03  eta: 5:21:22  time: 9.1677  data_time: 6.8933  memory: 4823  loss: 1.9874  loss_cls: 1.4447  loss_bbox: 0.5427
2024/05/03 00:31:10 - mmengine - INFO - Exp name: yolov6_s_syncbn_fast_8xb32-400e_coco_20240501_205508
2024/05/03 00:31:10 - mmengine - INFO - Saving checkpoint at 30 epochs
2024/05/03 00:31:53 - mmengine - INFO - Epoch(val) [30][ 50/552]    eta: 0:06:58  time: 0.8334  data_time: 0.8137  memory: 4806  
2024/05/03 00:32:36 - mmengine - INFO - Epoch(val) [30][100/552]    eta: 0:06:21  time: 0.8539  data_time: 0.8348  memory: 416  
2024/05/03 00:32:54 - mmengine - INFO - Epoch(val) [30][150/552]    eta: 0:04:36  time: 0.3764  data_time: 0.3560  memory: 416  
2024/05/03 00:33:13 - mmengine - INFO - Epoch(val) [30][200/552]    eta: 0:03:33  time: 0.3651  data_time: 0.3463  memory: 408  
2024/05/03 00:33:30 - mmengine - INFO - Epoch(val) [30][250/552]    eta: 0:02:47  time: 0.3455  data_time: 0.3262  memory: 408  
2024/05/03 00:33:48 - mmengine - INFO - Epoch(val) [30][300/552]    eta: 0:02:11  time: 0.3568  data_time: 0.3379  memory: 408  
2024/05/03 00:34:04 - mmengine - INFO - Epoch(val) [30][350/552]    eta: 0:01:39  time: 0.3225  data_time: 0.3033  memory: 408  
2024/05/03 00:34:20 - mmengine - INFO - Epoch(val) [30][400/552]    eta: 0:01:11  time: 0.3309  data_time: 0.3123  memory: 405  
2024/05/03 00:34:37 - mmengine - INFO - Epoch(val) [30][450/552]    eta: 0:00:46  time: 0.3276  data_time: 0.3096  memory: 405  
2024/05/03 00:34:52 - mmengine - INFO - Epoch(val) [30][500/552]    eta: 0:00:22  time: 0.2956  data_time: 0.2766  memory: 405  
2024/05/03 00:35:08 - mmengine - INFO - Epoch(val) [30][550/552]    eta: 0:00:00  time: 0.3297  data_time: 0.3112  memory: 405  
2024/05/03 00:35:23 - mmengine - INFO - Evaluating bbox...
2024/05/03 00:35:28 - mmengine - INFO - bbox_mAP_copypaste: 0.565 0.712 0.622 -1.000 -1.000 0.565
2024/05/03 00:35:28 - mmengine - INFO - Epoch(val) [30][552/552]    coco/bbox_mAP: 0.5650  coco/bbox_mAP_50: 0.7120  coco/bbox_mAP_75: 0.6220  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.5650  data_time: 0.4096  time: 0.4287
2024/05/03 00:44:32 - mmengine - INFO - Epoch(train) [31][ 50/138]  base_lr: 1.0000e-02 lr: 9.9520e-04  eta: 4:45:15  time: 10.8806  data_time: 9.1185  memory: 4806  loss: 1.9840  loss_cls: 1.4076  loss_bbox: 0.5764
2024/05/03 00:52:06 - mmengine - INFO - Epoch(train) [31][100/138]  base_lr: 1.0000e-02 lr: 9.9520e-04  eta: 4:25:05  time: 9.0744  data_time: 3.7309  memory: 4789  loss: 1.9259  loss_cls: 1.3992  loss_bbox: 0.5267
2024/05/03 00:57:15 - mmengine - INFO - Exp name: yolov6_s_syncbn_fast_8xb32-400e_coco_20240501_205508
2024/05/03 00:57:15 - mmengine - INFO - Saving checkpoint at 31 epochs
2024/05/03 00:57:58 - mmengine - INFO - Epoch(val) [31][ 50/552]    eta: 0:06:49  time: 0.8161  data_time: 0.7958  memory: 4789  
2024/05/03 00:58:41 - mmengine - INFO - Epoch(val) [31][100/552]    eta: 0:06:17  time: 0.8529  data_time: 0.8341  memory: 416  
2024/05/03 00:59:00 - mmengine - INFO - Epoch(val) [31][150/552]    eta: 0:04:35  time: 0.3875  data_time: 0.3686  memory: 416  
2024/05/03 00:59:17 - mmengine - INFO - Epoch(val) [31][200/552]    eta: 0:03:30  time: 0.3382  data_time: 0.3179  memory: 408  
2024/05/03 00:59:36 - mmengine - INFO - Epoch(val) [31][250/552]    eta: 0:02:47  time: 0.3829  data_time: 0.3635  memory: 408  
2024/05/03 00:59:54 - mmengine - INFO - Epoch(val) [31][300/552]    eta: 0:02:11  time: 0.3600  data_time: 0.3393  memory: 408  
2024/05/03 01:00:12 - mmengine - INFO - Epoch(val) [31][350/552]    eta: 0:01:40  time: 0.3481  data_time: 0.3298  memory: 408  
2024/05/03 01:00:27 - mmengine - INFO - Epoch(val) [31][400/552]    eta: 0:01:12  time: 0.3073  data_time: 0.2882  memory: 405  
2024/05/03 01:00:42 - mmengine - INFO - Epoch(val) [31][450/552]    eta: 0:00:46  time: 0.3053  data_time: 0.2864  memory: 405  
2024/05/03 01:00:59 - mmengine - INFO - Epoch(val) [31][500/552]    eta: 0:00:23  time: 0.3420  data_time: 0.3236  memory: 405  
2024/05/03 01:01:16 - mmengine - INFO - Epoch(val) [31][550/552]    eta: 0:00:00  time: 0.3354  data_time: 0.3168  memory: 405  
2024/05/03 01:01:30 - mmengine - INFO - Evaluating bbox...
2024/05/03 01:01:36 - mmengine - INFO - bbox_mAP_copypaste: 0.591 0.747 0.653 -1.000 -1.000 0.591
2024/05/03 01:01:36 - mmengine - INFO - Epoch(val) [31][552/552]    coco/bbox_mAP: 0.5910  coco/bbox_mAP_50: 0.7470  coco/bbox_mAP_75: 0.6530  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.5910  data_time: 0.4131  time: 0.4324
2024/05/03 01:01:36 - mmengine - INFO - The previous best checkpoint /media/iris/Dong/openmmlab/detection/coding/yolov6/yolov6_s_syncbn_fast_8xb32-400e_coco/best_coco_bbox_mAP_epoch_29.pth is removed
2024/05/03 01:01:37 - mmengine - INFO - The best checkpoint with 0.5910 coco/bbox_mAP at 31 epoch is saved to best_coco_bbox_mAP_epoch_31.pth.
2024/05/03 01:10:37 - mmengine - INFO - Epoch(train) [32][ 50/138]  base_lr: 1.0000e-02 lr: 7.6317e-04  eta: 3:50:23  time: 10.7607  data_time: 9.6074  memory: 4789  loss: 1.9275  loss_cls: 1.3857  loss_bbox: 0.5418
2024/05/03 01:18:51 - mmengine - INFO - Epoch(train) [32][100/138]  base_lr: 1.0000e-02 lr: 7.6317e-04  eta: 3:31:04  time: 9.8761  data_time: 6.4299  memory: 4806  loss: 1.9264  loss_cls: 1.3927  loss_bbox: 0.5337
2024/05/03 01:23:44 - mmengine - INFO - Exp name: yolov6_s_syncbn_fast_8xb32-400e_coco_20240501_205508
2024/05/03 01:23:44 - mmengine - INFO - Saving checkpoint at 32 epochs
2024/05/03 01:24:30 - mmengine - INFO - Epoch(val) [32][ 50/552]    eta: 0:07:24  time: 0.8859  data_time: 0.8656  memory: 4823  
2024/05/03 01:25:10 - mmengine - INFO - Epoch(val) [32][100/552]    eta: 0:06:21  time: 0.8006  data_time: 0.7810  memory: 416  
2024/05/03 01:25:27 - mmengine - INFO - Epoch(val) [32][150/552]    eta: 0:04:33  time: 0.3539  data_time: 0.3351  memory: 416  
2024/05/03 01:25:47 - mmengine - INFO - Epoch(val) [32][200/552]    eta: 0:03:33  time: 0.3886  data_time: 0.3691  memory: 408  
2024/05/03 01:26:04 - mmengine - INFO - Epoch(val) [32][250/552]    eta: 0:02:47  time: 0.3481  data_time: 0.3288  memory: 408  
2024/05/03 01:26:22 - mmengine - INFO - Epoch(val) [32][300/552]    eta: 0:02:11  time: 0.3563  data_time: 0.3378  memory: 408  
2024/05/03 01:26:40 - mmengine - INFO - Epoch(val) [32][350/552]    eta: 0:01:40  time: 0.3514  data_time: 0.3321  memory: 408  
2024/05/03 01:26:55 - mmengine - INFO - Epoch(val) [32][400/552]    eta: 0:01:12  time: 0.3052  data_time: 0.2863  memory: 405  
2024/05/03 01:27:11 - mmengine - INFO - Epoch(val) [32][450/552]    eta: 0:00:46  time: 0.3283  data_time: 0.3093  memory: 405  
2024/05/03 01:27:26 - mmengine - INFO - Epoch(val) [32][500/552]    eta: 0:00:22  time: 0.3013  data_time: 0.2828  memory: 405  
2024/05/03 01:27:43 - mmengine - INFO - Epoch(val) [32][550/552]    eta: 0:00:00  time: 0.3268  data_time: 0.3079  memory: 405  
2024/05/03 01:27:57 - mmengine - INFO - Evaluating bbox...
2024/05/03 01:28:02 - mmengine - INFO - bbox_mAP_copypaste: 0.585 0.739 0.645 -1.000 -1.000 0.585
2024/05/03 01:28:02 - mmengine - INFO - Epoch(val) [32][552/552]    coco/bbox_mAP: 0.5850  coco/bbox_mAP_50: 0.7390  coco/bbox_mAP_75: 0.6450  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.5850  data_time: 0.4115  time: 0.4306
2024/05/03 01:37:53 - mmengine - INFO - Epoch(train) [33][ 50/138]  base_lr: 1.0000e-02 lr: 5.6378e-04  eta: 2:57:42  time: 11.8178  data_time: 5.8423  memory: 4823  loss: 1.8981  loss_cls: 1.3733  loss_bbox: 0.5248
2024/05/03 01:45:13 - mmengine - INFO - Epoch(train) [33][100/138]  base_lr: 1.0000e-02 lr: 5.6378e-04  eta: 2:38:58  time: 8.8003  data_time: 3.3571  memory: 4806  loss: 1.8909  loss_cls: 1.3638  loss_bbox: 0.5271
2024/05/03 01:50:05 - mmengine - INFO - Exp name: yolov6_s_syncbn_fast_8xb32-400e_coco_20240501_205508
2024/05/03 01:50:05 - mmengine - INFO - Saving checkpoint at 33 epochs
2024/05/03 01:50:52 - mmengine - INFO - Epoch(val) [33][ 50/552]    eta: 0:07:28  time: 0.8930  data_time: 0.8733  memory: 4823  
2024/05/03 01:51:32 - mmengine - INFO - Epoch(val) [33][100/552]    eta: 0:06:22  time: 0.8000  data_time: 0.7807  memory: 416  
2024/05/03 01:51:50 - mmengine - INFO - Epoch(val) [33][150/552]    eta: 0:04:36  time: 0.3686  data_time: 0.3496  memory: 416  
2024/05/03 01:52:11 - mmengine - INFO - Epoch(val) [33][200/552]    eta: 0:03:38  time: 0.4163  data_time: 0.3963  memory: 408  
2024/05/03 01:52:30 - mmengine - INFO - Epoch(val) [33][250/552]    eta: 0:02:52  time: 0.3728  data_time: 0.3536  memory: 408  
2024/05/03 01:52:47 - mmengine - INFO - Epoch(val) [33][300/552]    eta: 0:02:14  time: 0.3471  data_time: 0.3283  memory: 408  
2024/05/03 01:53:04 - mmengine - INFO - Epoch(val) [33][350/552]    eta: 0:01:42  time: 0.3497  data_time: 0.3311  memory: 408  
2024/05/03 01:53:20 - mmengine - INFO - Epoch(val) [33][400/552]    eta: 0:01:13  time: 0.3071  data_time: 0.2889  memory: 405  
2024/05/03 01:53:35 - mmengine - INFO - Epoch(val) [33][450/552]    eta: 0:00:47  time: 0.3114  data_time: 0.2920  memory: 405  
2024/05/03 01:53:50 - mmengine - INFO - Epoch(val) [33][500/552]    eta: 0:00:23  time: 0.2956  data_time: 0.2761  memory: 405  
2024/05/03 01:54:07 - mmengine - INFO - Epoch(val) [33][550/552]    eta: 0:00:00  time: 0.3288  data_time: 0.3101  memory: 405  
2024/05/03 01:54:21 - mmengine - INFO - Evaluating bbox...
2024/05/03 01:54:26 - mmengine - INFO - bbox_mAP_copypaste: 0.604 0.753 0.663 -1.000 -1.000 0.604
2024/05/03 01:54:26 - mmengine - INFO - Epoch(val) [33][552/552]    coco/bbox_mAP: 0.6040  coco/bbox_mAP_50: 0.7530  coco/bbox_mAP_75: 0.6630  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.6040  data_time: 0.4151  time: 0.4343
2024/05/03 01:54:27 - mmengine - INFO - The previous best checkpoint /media/iris/Dong/openmmlab/detection/coding/yolov6/yolov6_s_syncbn_fast_8xb32-400e_coco/best_coco_bbox_mAP_epoch_31.pth is removed
2024/05/03 01:54:28 - mmengine - INFO - The best checkpoint with 0.6040 coco/bbox_mAP at 33 epoch is saved to best_coco_bbox_mAP_epoch_33.pth.
2024/05/03 02:03:51 - mmengine - INFO - Epoch(train) [34][ 50/138]  base_lr: 1.0000e-02 lr: 3.9852e-04  eta: 2:06:41  time: 11.2295  data_time: 10.1303  memory: 4823  loss: 1.8695  loss_cls: 1.3514  loss_bbox: 0.5181
2024/05/03 02:11:45 - mmengine - INFO - Epoch(train) [34][100/138]  base_lr: 1.0000e-02 lr: 3.9852e-04  eta: 1:48:39  time: 9.4815  data_time: 6.2006  memory: 4855  loss: 1.8782  loss_cls: 1.3734  loss_bbox: 0.5048
2024/05/03 02:16:25 - mmengine - INFO - Exp name: yolov6_s_syncbn_fast_8xb32-400e_coco_20240501_205508
2024/05/03 02:16:25 - mmengine - INFO - Saving checkpoint at 34 epochs
2024/05/03 02:17:10 - mmengine - INFO - Epoch(val) [34][ 50/552]    eta: 0:07:11  time: 0.8587  data_time: 0.8387  memory: 4806  
2024/05/03 02:17:51 - mmengine - INFO - Epoch(val) [34][100/552]    eta: 0:06:19  time: 0.8199  data_time: 0.8000  memory: 416  
2024/05/03 02:18:09 - mmengine - INFO - Epoch(val) [34][150/552]    eta: 0:04:34  time: 0.3666  data_time: 0.3471  memory: 416  
2024/05/03 02:18:28 - mmengine - INFO - Epoch(val) [34][200/552]    eta: 0:03:32  time: 0.3752  data_time: 0.3561  memory: 408  
2024/05/03 02:18:45 - mmengine - INFO - Epoch(val) [34][250/552]    eta: 0:02:47  time: 0.3447  data_time: 0.3256  memory: 408  
2024/05/03 02:19:03 - mmengine - INFO - Epoch(val) [34][300/552]    eta: 0:02:11  time: 0.3550  data_time: 0.3350  memory: 408  
2024/05/03 02:19:21 - mmengine - INFO - Epoch(val) [34][350/552]    eta: 0:01:40  time: 0.3665  data_time: 0.3479  memory: 408  
2024/05/03 02:19:36 - mmengine - INFO - Epoch(val) [34][400/552]    eta: 0:01:11  time: 0.2862  data_time: 0.2668  memory: 405  
2024/05/03 02:19:52 - mmengine - INFO - Epoch(val) [34][450/552]    eta: 0:00:46  time: 0.3349  data_time: 0.3160  memory: 405  
2024/05/03 02:20:08 - mmengine - INFO - Epoch(val) [34][500/552]    eta: 0:00:23  time: 0.3209  data_time: 0.3020  memory: 405  
2024/05/03 02:20:25 - mmengine - INFO - Epoch(val) [34][550/552]    eta: 0:00:00  time: 0.3407  data_time: 0.3223  memory: 405  
2024/05/03 02:20:38 - mmengine - INFO - Evaluating bbox...
2024/05/03 02:20:44 - mmengine - INFO - bbox_mAP_copypaste: 0.614 0.766 0.675 -1.000 -1.000 0.614
2024/05/03 02:20:44 - mmengine - INFO - Epoch(val) [34][552/552]    coco/bbox_mAP: 0.6140  coco/bbox_mAP_50: 0.7660  coco/bbox_mAP_75: 0.6750  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.6140  data_time: 0.4123  time: 0.4316
2024/05/03 02:20:44 - mmengine - INFO - The previous best checkpoint /media/iris/Dong/openmmlab/detection/coding/yolov6/yolov6_s_syncbn_fast_8xb32-400e_coco/best_coco_bbox_mAP_epoch_33.pth is removed
2024/05/03 02:20:45 - mmengine - INFO - The best checkpoint with 0.6140 coco/bbox_mAP at 34 epoch is saved to best_coco_bbox_mAP_epoch_34.pth.
2024/05/03 02:29:32 - mmengine - INFO - Epoch(train) [35][ 50/138]  base_lr: 1.0000e-02 lr: 2.6867e-04  eta: 1:17:23  time: 10.5007  data_time: 9.5554  memory: 4806  loss: 1.8330  loss_cls: 1.3330  loss_bbox: 0.5000
2024/05/03 02:38:22 - mmengine - INFO - Epoch(train) [35][100/138]  base_lr: 1.0000e-02 lr: 2.6867e-04  eta: 0:59:57  time: 10.5986  data_time: 7.9955  memory: 4806  loss: 1.8414  loss_cls: 1.3360  loss_bbox: 0.5054
2024/05/03 02:42:51 - mmengine - INFO - Exp name: yolov6_s_syncbn_fast_8xb32-400e_coco_20240501_205508
2024/05/03 02:42:51 - mmengine - INFO - Saving checkpoint at 35 epochs
2024/05/03 02:43:35 - mmengine - INFO - Epoch(val) [35][ 50/552]    eta: 0:07:03  time: 0.8432  data_time: 0.8231  memory: 4789  
2024/05/03 02:44:16 - mmengine - INFO - Epoch(val) [35][100/552]    eta: 0:06:19  time: 0.8341  data_time: 0.8155  memory: 416  
2024/05/03 02:44:34 - mmengine - INFO - Epoch(val) [35][150/552]    eta: 0:04:31  time: 0.3520  data_time: 0.3323  memory: 416  
2024/05/03 02:44:52 - mmengine - INFO - Epoch(val) [35][200/552]    eta: 0:03:31  time: 0.3706  data_time: 0.3512  memory: 408  
2024/05/03 02:45:11 - mmengine - INFO - Epoch(val) [35][250/552]    eta: 0:02:47  time: 0.3799  data_time: 0.3611  memory: 408  
2024/05/03 02:45:28 - mmengine - INFO - Epoch(val) [35][300/552]    eta: 0:02:11  time: 0.3409  data_time: 0.3217  memory: 408  
2024/05/03 02:45:45 - mmengine - INFO - Epoch(val) [35][350/552]    eta: 0:01:39  time: 0.3298  data_time: 0.3094  memory: 408  
2024/05/03 02:46:01 - mmengine - INFO - Epoch(val) [35][400/552]    eta: 0:01:11  time: 0.3237  data_time: 0.3058  memory: 405  
2024/05/03 02:46:17 - mmengine - INFO - Epoch(val) [35][450/552]    eta: 0:00:46  time: 0.3099  data_time: 0.2916  memory: 405  
2024/05/03 02:46:32 - mmengine - INFO - Epoch(val) [35][500/552]    eta: 0:00:22  time: 0.3006  data_time: 0.2824  memory: 405  
2024/05/03 02:46:48 - mmengine - INFO - Epoch(val) [35][550/552]    eta: 0:00:00  time: 0.3348  data_time: 0.3163  memory: 405  
2024/05/03 02:47:03 - mmengine - INFO - Evaluating bbox...
2024/05/03 02:47:08 - mmengine - INFO - bbox_mAP_copypaste: 0.625 0.783 0.683 -1.000 -1.000 0.625
2024/05/03 02:47:08 - mmengine - INFO - Epoch(val) [35][552/552]    coco/bbox_mAP: 0.6250  coco/bbox_mAP_50: 0.7830  coco/bbox_mAP_75: 0.6830  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.6250  data_time: 0.4086  time: 0.4277
2024/05/03 02:47:08 - mmengine - INFO - The previous best checkpoint /media/iris/Dong/openmmlab/detection/coding/yolov6/yolov6_s_syncbn_fast_8xb32-400e_coco/best_coco_bbox_mAP_epoch_34.pth is removed
2024/05/03 02:47:09 - mmengine - INFO - The best checkpoint with 0.6250 coco/bbox_mAP at 35 epoch is saved to best_coco_bbox_mAP_epoch_35.pth.
2024/05/03 02:56:26 - mmengine - INFO - Epoch(train) [36][ 50/138]  base_lr: 1.0000e-02 lr: 1.7520e-04  eta: 0:29:41  time: 11.1020  data_time: 10.0098  memory: 4789  loss: 1.8357  loss_cls: 1.3401  loss_bbox: 0.4956
2024/05/03 03:04:40 - mmengine - INFO - Epoch(train) [36][100/138]  base_lr: 1.0000e-02 lr: 1.7520e-04  eta: 0:12:45  time: 9.8871  data_time: 9.6140  memory: 4806  loss: 1.8249  loss_cls: 1.3249  loss_bbox: 0.5000
2024/05/03 03:09:10 - mmengine - INFO - Exp name: yolov6_s_syncbn_fast_8xb32-400e_coco_20240501_205508
2024/05/03 03:09:10 - mmengine - INFO - Saving checkpoint at 36 epochs
2024/05/03 03:09:56 - mmengine - INFO - Epoch(val) [36][ 50/552]    eta: 0:07:24  time: 0.8854  data_time: 0.8658  memory: 4823  
2024/05/03 03:10:37 - mmengine - INFO - Epoch(val) [36][100/552]    eta: 0:06:25  time: 0.8209  data_time: 0.8012  memory: 416  
2024/05/03 03:10:54 - mmengine - INFO - Epoch(val) [36][150/552]    eta: 0:04:35  time: 0.3468  data_time: 0.3266  memory: 416  
2024/05/03 03:11:13 - mmengine - INFO - Epoch(val) [36][200/552]    eta: 0:03:33  time: 0.3695  data_time: 0.3497  memory: 408  
2024/05/03 03:11:31 - mmengine - INFO - Epoch(val) [36][250/552]    eta: 0:02:48  time: 0.3602  data_time: 0.3410  memory: 408  
2024/05/03 03:11:49 - mmengine - INFO - Epoch(val) [36][300/552]    eta: 0:02:12  time: 0.3645  data_time: 0.3451  memory: 408  
2024/05/03 03:12:05 - mmengine - INFO - Epoch(val) [36][350/552]    eta: 0:01:40  time: 0.3222  data_time: 0.3031  memory: 408  
2024/05/03 03:12:20 - mmengine - INFO - Epoch(val) [36][400/552]    eta: 0:01:11  time: 0.2916  data_time: 0.2712  memory: 405  
2024/05/03 03:12:36 - mmengine - INFO - Epoch(val) [36][450/552]    eta: 0:00:46  time: 0.3228  data_time: 0.3040  memory: 405  
2024/05/03 03:12:50 - mmengine - INFO - Epoch(val) [36][500/552]    eta: 0:00:22  time: 0.2877  data_time: 0.2668  memory: 405  
2024/05/03 03:13:06 - mmengine - INFO - Epoch(val) [36][550/552]    eta: 0:00:00  time: 0.3193  data_time: 0.3000  memory: 405  
2024/05/03 03:13:24 - mmengine - INFO - Evaluating bbox...
2024/05/03 03:13:30 - mmengine - INFO - bbox_mAP_copypaste: 0.627 0.775 0.682 -1.000 -1.000 0.627
2024/05/03 03:13:30 - mmengine - INFO - Epoch(val) [36][552/552]    coco/bbox_mAP: 0.6270  coco/bbox_mAP_50: 0.7750  coco/bbox_mAP_75: 0.6820  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.6270  data_time: 0.4066  time: 0.4262
2024/05/03 03:13:30 - mmengine - INFO - The previous best checkpoint /media/iris/Dong/openmmlab/detection/coding/yolov6/yolov6_s_syncbn_fast_8xb32-400e_coco/best_coco_bbox_mAP_epoch_35.pth is removed
2024/05/03 03:13:31 - mmengine - INFO - The best checkpoint with 0.6270 coco/bbox_mAP at 36 epoch is saved to best_coco_bbox_mAP_epoch_36.pth.
