2024/05/03 10:24:05 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.8.18 (default, Sep 11 2023, 13:40:15) [GCC 11.2.0]
    CUDA available: True
    numpy_random_seed: 418549195
    GPU 0,1: NVIDIA GeForce RTX 3080 Ti
    CUDA_HOME: /usr/local/cuda
    NVCC: Cuda compilation tools, release 11.4, V11.4.48
    GCC: gcc (Ubuntu 9.4.0-1ubuntu1~20.04.2) 9.4.0
    PyTorch: 1.11.0
    PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.5.2 (Git Hash a9302535553c73243c632ad3c4c80beec3d19a1e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.11.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.12.0
    OpenCV: 4.9.0
    MMEngine: 0.10.2

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 418549195
    Distributed launcher: pytorch
    Distributed training: True
    GPU number: 2
------------------------------------------------------------

2024/05/03 10:24:05 - mmengine - INFO - Config:
_backend_args = None
_multiscale_resize_transforms = [
    dict(
        transforms=[
            dict(scale=(
                640,
                640,
            ), type='YOLOv5KeepRatioResize'),
            dict(
                allow_scale_up=False,
                pad_val=dict(img=114),
                scale=(
                    640,
                    640,
                ),
                type='LetterResize'),
        ],
        type='Compose'),
    dict(
        transforms=[
            dict(scale=(
                320,
                320,
            ), type='YOLOv5KeepRatioResize'),
            dict(
                allow_scale_up=False,
                pad_val=dict(img=114),
                scale=(
                    320,
                    320,
                ),
                type='LetterResize'),
        ],
        type='Compose'),
    dict(
        transforms=[
            dict(scale=(
                960,
                960,
            ), type='YOLOv5KeepRatioResize'),
            dict(
                allow_scale_up=False,
                pad_val=dict(img=114),
                scale=(
                    960,
                    960,
                ),
                type='LetterResize'),
        ],
        type='Compose'),
]
affine_scale = 0.9
backend_args = None
base_lr = 0.01
batch_shapes_cfg = dict(
    batch_size=1,
    extra_pad_ratio=0.5,
    img_size=640,
    size_divisor=32,
    type='BatchShapePolicy')
custom_hooks = [
    dict(
        ema_type='ExpMomentumEMA',
        momentum=0.0001,
        priority=49,
        strict_load=False,
        type='EMAHook',
        update_buffers=True),
    dict(
        switch_epoch=21,
        switch_pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(scale=(
                640,
                640,
            ), type='YOLOv5KeepRatioResize'),
            dict(
                allow_scale_up=True,
                pad_val=dict(img=114),
                scale=(
                    640,
                    640,
                ),
                type='LetterResize'),
            dict(
                max_rotate_degree=0.0,
                max_shear_degree=0.0,
                max_translate_ratio=0.1,
                scaling_ratio_range=(
                    0.5,
                    1.5,
                ),
                type='YOLOv5RandomAffine'),
            dict(type='YOLOv5HSVRandomAug'),
            dict(prob=0.5, type='mmdet.RandomFlip'),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'flip',
                    'flip_direction',
                ),
                type='mmdet.PackDetInputs'),
        ],
        type='mmdet.PipelineSwitchHook'),
]
data_root = '/media/iris/새 볼륨/nonslip_patching_paper/coco_format/'
dataset_type = 'YOLOv5CocoDataset'
deepen_factor = 0.6
default_hooks = dict(
    checkpoint=dict(
        interval=1, max_keep_ckpts=3, save_best='auto', type='CheckpointHook'),
    logger=dict(interval=50, type='LoggerHook'),
    param_scheduler=dict(
        lr_factor=0.01,
        max_epochs=36,
        scheduler_type='cosine',
        type='YOLOv5ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='mmdet.DetVisualizationHook'))
default_scope = 'mmyolo'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_scale = (
    640,
    640,
)
img_scales = [
    (
        640,
        640,
    ),
    (
        320,
        320,
    ),
    (
        960,
        960,
    ),
]
launcher = 'pytorch'
load_from = None
log_level = 'INFO'
log_processor = dict(by_epoch=True, type='LogProcessor', window_size=50)
lr_factor = 0.01
max_epochs = 36
max_keep_ckpts = 3
model = dict(
    backbone=dict(
        act_cfg=dict(inplace=True, type='ReLU'),
        block_cfg=dict(type='RepVGGBlock'),
        deepen_factor=0.6,
        hidden_ratio=0.6666666666666666,
        norm_cfg=dict(eps=0.001, momentum=0.03, type='BN'),
        type='YOLOv6CSPBep',
        widen_factor=0.75),
    bbox_head=dict(
        head_module=dict(
            act_cfg=dict(inplace=True, type='SiLU'),
            featmap_strides=[
                8,
                16,
                32,
            ],
            in_channels=[
                128,
                256,
                512,
            ],
            norm_cfg=dict(eps=0.001, momentum=0.03, type='BN'),
            num_classes=4,
            type='YOLOv6HeadModule',
            widen_factor=0.75),
        loss_bbox=dict(
            bbox_format='xyxy',
            iou_mode='giou',
            loss_weight=2.5,
            reduction='mean',
            return_iou=False,
            type='IoULoss'),
        type='YOLOv6Head'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            0.0,
            0.0,
            0.0,
        ],
        std=[
            255.0,
            255.0,
            255.0,
        ],
        type='YOLOv5DetDataPreprocessor'),
    neck=dict(
        act_cfg=dict(inplace=True, type='ReLU'),
        block_act_cfg=dict(inplace=True, type='ReLU'),
        block_cfg=dict(type='RepVGGBlock'),
        deepen_factor=0.6,
        hidden_ratio=0.6666666666666666,
        in_channels=[
            256,
            512,
            1024,
        ],
        norm_cfg=dict(eps=0.001, momentum=0.03, type='BN'),
        num_csp_blocks=12,
        out_channels=[
            128,
            256,
            512,
        ],
        type='YOLOv6CSPRepPAFPN',
        widen_factor=0.75),
    test_cfg=dict(
        max_per_img=300,
        multi_label=True,
        nms=dict(iou_threshold=0.65, type='nms'),
        nms_pre=30000,
        score_thr=0.001),
    train_cfg=dict(
        assigner=dict(
            alpha=1,
            beta=6,
            num_classes=4,
            topk=13,
            type='BatchTaskAlignedAssigner'),
        initial_assigner=dict(
            iou_calculator=dict(type='mmdet.BboxOverlaps2D'),
            num_classes=4,
            topk=9,
            type='BatchATSSAssigner'),
        initial_epoch=4),
    type='YOLODetector')
mosaic_affine_pipeline = [
    dict(
        img_scale=(
            640,
            640,
        ),
        pad_val=114.0,
        pre_transform=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
        ],
        type='Mosaic'),
    dict(
        border=(
            -320,
            -320,
        ),
        border_val=(
            114,
            114,
            114,
        ),
        max_rotate_degree=0.0,
        max_shear_degree=0.0,
        scaling_ratio_range=(
            0.09999999999999998,
            1.9,
        ),
        type='YOLOv5RandomAffine'),
]
num_classes = 4
num_last_epochs = 15
optim_wrapper = dict(
    constructor='YOLOv5OptimizerConstructor',
    optimizer=dict(
        batch_size_per_gpu=16,
        lr=0.01,
        momentum=0.937,
        nesterov=True,
        type='SGD',
        weight_decay=0.0005),
    type='OptimWrapper')
persistent_workers = True
pre_transform = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
]
resume = False
save_epoch_intervals = 1
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        ann_file='annotations/instances_val2017.json',
        batch_shapes_cfg=dict(
            batch_size=1,
            extra_pad_ratio=0.5,
            img_size=640,
            size_divisor=32,
            type='BatchShapePolicy'),
        data_prefix=dict(img='val2017/'),
        data_root='/media/iris/새 볼륨/nonslip_patching_paper/coco_format/',
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(scale=(
                640,
                640,
            ), type='YOLOv5KeepRatioResize'),
            dict(
                allow_scale_up=False,
                pad_val=dict(img=114),
                scale=(
                    640,
                    640,
                ),
                type='LetterResize'),
            dict(_scope_='mmdet', type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                    'pad_param',
                ),
                type='mmdet.PackDetInputs'),
        ],
        test_mode=True,
        type='YOLOv5CocoDataset'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    pin_memory=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    ann_file=
    '/media/iris/새 볼륨/nonslip_patching_paper/coco_format/annotations/instances_val2017.json',
    metric='bbox',
    proposal_nums=(
        100,
        1,
        10,
    ),
    type='mmdet.CocoMetric')
test_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(scale=(
        640,
        640,
    ), type='YOLOv5KeepRatioResize'),
    dict(
        allow_scale_up=False,
        pad_val=dict(img=114),
        scale=(
            640,
            640,
        ),
        type='LetterResize'),
    dict(_scope_='mmdet', type='LoadAnnotations', with_bbox=True),
    dict(
        meta_keys=(
            'img_id',
            'img_path',
            'ori_shape',
            'img_shape',
            'scale_factor',
            'pad_param',
        ),
        type='mmdet.PackDetInputs'),
]
train_ann_file = 'annotations/instances_train2017.json'
train_batch_size_per_gpu = 12
train_cfg = dict(
    dynamic_intervals=[
        (
            21,
            1,
        ),
    ],
    max_epochs=36,
    type='EpochBasedTrainLoop',
    val_interval=1)
train_data_prefix = 'train2017/'
train_dataloader = dict(
    batch_size=12,
    collate_fn=dict(type='yolov5_collate'),
    dataset=dict(
        ann_file='annotations/instances_train2017.json',
        data_prefix=dict(img='train2017/'),
        data_root='/media/iris/새 볼륨/nonslip_patching_paper/coco_format/',
        filter_cfg=dict(filter_empty_gt=False, min_size=32),
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                img_scale=(
                    640,
                    640,
                ),
                pad_val=114.0,
                pre_transform=[
                    dict(backend_args=None, type='LoadImageFromFile'),
                    dict(type='LoadAnnotations', with_bbox=True),
                ],
                type='Mosaic'),
            dict(
                border=(
                    -320,
                    -320,
                ),
                border_val=(
                    114,
                    114,
                    114,
                ),
                max_rotate_degree=0.0,
                max_shear_degree=0.0,
                scaling_ratio_range=(
                    0.09999999999999998,
                    1.9,
                ),
                type='YOLOv5RandomAffine'),
            dict(
                pre_transform=[
                    dict(backend_args=None, type='LoadImageFromFile'),
                    dict(type='LoadAnnotations', with_bbox=True),
                    dict(
                        img_scale=(
                            640,
                            640,
                        ),
                        pad_val=114.0,
                        pre_transform=[
                            dict(backend_args=None, type='LoadImageFromFile'),
                            dict(type='LoadAnnotations', with_bbox=True),
                        ],
                        type='Mosaic'),
                    dict(
                        border=(
                            -320,
                            -320,
                        ),
                        border_val=(
                            114,
                            114,
                            114,
                        ),
                        max_rotate_degree=0.0,
                        max_shear_degree=0.0,
                        scaling_ratio_range=(
                            0.09999999999999998,
                            1.9,
                        ),
                        type='YOLOv5RandomAffine'),
                ],
                prob=0.1,
                type='YOLOv5MixUp'),
            dict(type='YOLOv5HSVRandomAug'),
            dict(prob=0.5, type='mmdet.RandomFlip'),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'flip',
                    'flip_direction',
                ),
                type='mmdet.PackDetInputs'),
        ],
        type='YOLOv5CocoDataset'),
    num_workers=8,
    persistent_workers=True,
    pin_memory=True,
    sampler=dict(shuffle=True, type='DefaultSampler'))
train_num_workers = 8
train_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(
        img_scale=(
            640,
            640,
        ),
        pad_val=114.0,
        pre_transform=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
        ],
        type='Mosaic'),
    dict(
        border=(
            -320,
            -320,
        ),
        border_val=(
            114,
            114,
            114,
        ),
        max_rotate_degree=0.0,
        max_shear_degree=0.0,
        scaling_ratio_range=(
            0.09999999999999998,
            1.9,
        ),
        type='YOLOv5RandomAffine'),
    dict(
        pre_transform=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                img_scale=(
                    640,
                    640,
                ),
                pad_val=114.0,
                pre_transform=[
                    dict(backend_args=None, type='LoadImageFromFile'),
                    dict(type='LoadAnnotations', with_bbox=True),
                ],
                type='Mosaic'),
            dict(
                border=(
                    -320,
                    -320,
                ),
                border_val=(
                    114,
                    114,
                    114,
                ),
                max_rotate_degree=0.0,
                max_shear_degree=0.0,
                scaling_ratio_range=(
                    0.09999999999999998,
                    1.9,
                ),
                type='YOLOv5RandomAffine'),
        ],
        prob=0.1,
        type='YOLOv5MixUp'),
    dict(type='YOLOv5HSVRandomAug'),
    dict(prob=0.5, type='mmdet.RandomFlip'),
    dict(
        meta_keys=(
            'img_id',
            'img_path',
            'ori_shape',
            'img_shape',
            'flip',
            'flip_direction',
        ),
        type='mmdet.PackDetInputs'),
]
train_pipeline_stage2 = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(scale=(
        640,
        640,
    ), type='YOLOv5KeepRatioResize'),
    dict(
        allow_scale_up=True,
        pad_val=dict(img=114),
        scale=(
            640,
            640,
        ),
        type='LetterResize'),
    dict(
        max_rotate_degree=0.0,
        max_shear_degree=0.0,
        max_translate_ratio=0.1,
        scaling_ratio_range=(
            0.5,
            1.5,
        ),
        type='YOLOv5RandomAffine'),
    dict(type='YOLOv5HSVRandomAug'),
    dict(prob=0.5, type='mmdet.RandomFlip'),
    dict(
        meta_keys=(
            'img_id',
            'img_path',
            'ori_shape',
            'img_shape',
            'flip',
            'flip_direction',
        ),
        type='mmdet.PackDetInputs'),
]
tta_model = dict(
    tta_cfg=dict(max_per_img=300, nms=dict(iou_threshold=0.65, type='nms')),
    type='mmdet.DetTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(
                    transforms=[
                        dict(scale=(
                            640,
                            640,
                        ), type='YOLOv5KeepRatioResize'),
                        dict(
                            allow_scale_up=False,
                            pad_val=dict(img=114),
                            scale=(
                                640,
                                640,
                            ),
                            type='LetterResize'),
                    ],
                    type='Compose'),
                dict(
                    transforms=[
                        dict(scale=(
                            320,
                            320,
                        ), type='YOLOv5KeepRatioResize'),
                        dict(
                            allow_scale_up=False,
                            pad_val=dict(img=114),
                            scale=(
                                320,
                                320,
                            ),
                            type='LetterResize'),
                    ],
                    type='Compose'),
                dict(
                    transforms=[
                        dict(scale=(
                            960,
                            960,
                        ), type='YOLOv5KeepRatioResize'),
                        dict(
                            allow_scale_up=False,
                            pad_val=dict(img=114),
                            scale=(
                                960,
                                960,
                            ),
                            type='LetterResize'),
                    ],
                    type='Compose'),
            ],
            [
                dict(prob=1.0, type='mmdet.RandomFlip'),
                dict(prob=0.0, type='mmdet.RandomFlip'),
            ],
            [
                dict(type='mmdet.LoadAnnotations', with_bbox=True),
            ],
            [
                dict(
                    meta_keys=(
                        'img_id',
                        'img_path',
                        'ori_shape',
                        'img_shape',
                        'scale_factor',
                        'pad_param',
                        'flip',
                        'flip_direction',
                    ),
                    type='mmdet.PackDetInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_ann_file = 'annotations/instances_val2017.json'
val_batch_size_per_gpu = 1
val_cfg = dict(type='ValLoop')
val_data_prefix = 'val2017/'
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        ann_file='annotations/instances_val2017.json',
        batch_shapes_cfg=dict(
            batch_size=1,
            extra_pad_ratio=0.5,
            img_size=640,
            size_divisor=32,
            type='BatchShapePolicy'),
        data_prefix=dict(img='val2017/'),
        data_root='/media/iris/새 볼륨/nonslip_patching_paper/coco_format/',
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(scale=(
                640,
                640,
            ), type='YOLOv5KeepRatioResize'),
            dict(
                allow_scale_up=False,
                pad_val=dict(img=114),
                scale=(
                    640,
                    640,
                ),
                type='LetterResize'),
            dict(_scope_='mmdet', type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                    'pad_param',
                ),
                type='mmdet.PackDetInputs'),
        ],
        test_mode=True,
        type='YOLOv5CocoDataset'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    pin_memory=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    ann_file=
    '/media/iris/새 볼륨/nonslip_patching_paper/coco_format/annotations/instances_val2017.json',
    metric='bbox',
    proposal_nums=(
        100,
        1,
        10,
    ),
    type='mmdet.CocoMetric')
val_num_workers = 2
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='mmdet.DetLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
weight_decay = 0.0005
widen_factor = 0.75
work_dir = 'yolov6_m_syncbn_fast_8xb32-300e_coco'

2024/05/03 10:24:06 - mmengine - INFO - Using SyncBatchNorm()
2024/05/03 10:24:07 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_load_checkpoint:
(49          ) EMAHook                            
 -------------------- 
before_train:
(9           ) YOLOv5ParamSchedulerHook           
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
(NORMAL      ) PipelineSwitchHook                 
 -------------------- 
before_train_iter:
(9           ) YOLOv5ParamSchedulerHook           
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(9           ) YOLOv5ParamSchedulerHook           
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(9           ) YOLOv5ParamSchedulerHook           
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(9           ) YOLOv5ParamSchedulerHook           
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_save_checkpoint:
(49          ) EMAHook                            
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
2024/05/03 10:24:07 - mmengine - INFO - Optimizer groups: 201 .bias, 153 conv.weight, 193 other
Name of parameter - Initialization information

backbone.stem.rbr_dense.conv.weight - torch.Size([48, 3, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stem.rbr_dense.bn.weight - torch.Size([48]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stem.rbr_dense.bn.bias - torch.Size([48]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stem.rbr_1x1.conv.weight - torch.Size([48, 3, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stem.rbr_1x1.bn.weight - torch.Size([48]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stem.rbr_1x1.bn.bias - torch.Size([48]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage1.0.0.rbr_dense.conv.weight - torch.Size([96, 48, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage1.0.0.rbr_dense.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage1.0.0.rbr_dense.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage1.0.0.rbr_1x1.conv.weight - torch.Size([96, 48, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage1.0.0.rbr_1x1.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage1.0.0.rbr_1x1.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage1.0.1.conv1.conv.weight - torch.Size([64, 96, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage1.0.1.conv1.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage1.0.1.conv1.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage1.0.1.conv2.conv.weight - torch.Size([64, 96, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage1.0.1.conv2.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage1.0.1.conv2.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage1.0.1.conv3.conv.weight - torch.Size([96, 128, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage1.0.1.conv3.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage1.0.1.conv3.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage1.0.1.block.conv1.alpha - torch.Size([1]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage1.0.1.block.conv1.conv1.rbr_identity.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage1.0.1.block.conv1.conv1.rbr_identity.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage1.0.1.block.conv1.conv1.rbr_dense.conv.weight - torch.Size([64, 64, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage1.0.1.block.conv1.conv1.rbr_dense.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage1.0.1.block.conv1.conv1.rbr_dense.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage1.0.1.block.conv1.conv1.rbr_1x1.conv.weight - torch.Size([64, 64, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage1.0.1.block.conv1.conv1.rbr_1x1.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage1.0.1.block.conv1.conv1.rbr_1x1.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage1.0.1.block.conv1.conv2.rbr_identity.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage1.0.1.block.conv1.conv2.rbr_identity.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage1.0.1.block.conv1.conv2.rbr_dense.conv.weight - torch.Size([64, 64, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage1.0.1.block.conv1.conv2.rbr_dense.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage1.0.1.block.conv1.conv2.rbr_dense.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage1.0.1.block.conv1.conv2.rbr_1x1.conv.weight - torch.Size([64, 64, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage1.0.1.block.conv1.conv2.rbr_1x1.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage1.0.1.block.conv1.conv2.rbr_1x1.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage1.0.1.block.block.0.alpha - torch.Size([1]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage1.0.1.block.block.0.conv1.rbr_identity.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage1.0.1.block.block.0.conv1.rbr_identity.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage1.0.1.block.block.0.conv1.rbr_dense.conv.weight - torch.Size([64, 64, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage1.0.1.block.block.0.conv1.rbr_dense.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage1.0.1.block.block.0.conv1.rbr_dense.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage1.0.1.block.block.0.conv1.rbr_1x1.conv.weight - torch.Size([64, 64, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage1.0.1.block.block.0.conv1.rbr_1x1.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage1.0.1.block.block.0.conv1.rbr_1x1.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage1.0.1.block.block.0.conv2.rbr_identity.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage1.0.1.block.block.0.conv2.rbr_identity.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage1.0.1.block.block.0.conv2.rbr_dense.conv.weight - torch.Size([64, 64, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage1.0.1.block.block.0.conv2.rbr_dense.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage1.0.1.block.block.0.conv2.rbr_dense.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage1.0.1.block.block.0.conv2.rbr_1x1.conv.weight - torch.Size([64, 64, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage1.0.1.block.block.0.conv2.rbr_1x1.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage1.0.1.block.block.0.conv2.rbr_1x1.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.0.rbr_dense.conv.weight - torch.Size([192, 96, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage2.0.0.rbr_dense.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.0.rbr_dense.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.0.rbr_1x1.conv.weight - torch.Size([192, 96, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage2.0.0.rbr_1x1.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.0.rbr_1x1.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.conv1.conv.weight - torch.Size([128, 192, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage2.0.1.conv1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.conv1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.conv2.conv.weight - torch.Size([128, 192, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage2.0.1.conv2.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.conv2.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.conv3.conv.weight - torch.Size([192, 256, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage2.0.1.conv3.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.conv3.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.conv1.alpha - torch.Size([1]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.conv1.conv1.rbr_identity.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.conv1.conv1.rbr_identity.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.conv1.conv1.rbr_dense.conv.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage2.0.1.block.conv1.conv1.rbr_dense.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.conv1.conv1.rbr_dense.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.conv1.conv1.rbr_1x1.conv.weight - torch.Size([128, 128, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage2.0.1.block.conv1.conv1.rbr_1x1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.conv1.conv1.rbr_1x1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.conv1.conv2.rbr_identity.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.conv1.conv2.rbr_identity.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.conv1.conv2.rbr_dense.conv.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage2.0.1.block.conv1.conv2.rbr_dense.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.conv1.conv2.rbr_dense.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.conv1.conv2.rbr_1x1.conv.weight - torch.Size([128, 128, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage2.0.1.block.conv1.conv2.rbr_1x1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.conv1.conv2.rbr_1x1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.block.0.alpha - torch.Size([1]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.block.0.conv1.rbr_identity.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.block.0.conv1.rbr_identity.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.block.0.conv1.rbr_dense.conv.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage2.0.1.block.block.0.conv1.rbr_dense.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.block.0.conv1.rbr_dense.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.block.0.conv1.rbr_1x1.conv.weight - torch.Size([128, 128, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage2.0.1.block.block.0.conv1.rbr_1x1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.block.0.conv1.rbr_1x1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.block.0.conv2.rbr_identity.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.block.0.conv2.rbr_identity.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.block.0.conv2.rbr_dense.conv.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage2.0.1.block.block.0.conv2.rbr_dense.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.block.0.conv2.rbr_dense.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.block.0.conv2.rbr_1x1.conv.weight - torch.Size([128, 128, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage2.0.1.block.block.0.conv2.rbr_1x1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.block.0.conv2.rbr_1x1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.block.1.alpha - torch.Size([1]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.block.1.conv1.rbr_identity.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.block.1.conv1.rbr_identity.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.block.1.conv1.rbr_dense.conv.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage2.0.1.block.block.1.conv1.rbr_dense.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.block.1.conv1.rbr_dense.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.block.1.conv1.rbr_1x1.conv.weight - torch.Size([128, 128, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage2.0.1.block.block.1.conv1.rbr_1x1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.block.1.conv1.rbr_1x1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.block.1.conv2.rbr_identity.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.block.1.conv2.rbr_identity.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.block.1.conv2.rbr_dense.conv.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage2.0.1.block.block.1.conv2.rbr_dense.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.block.1.conv2.rbr_dense.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.block.1.conv2.rbr_1x1.conv.weight - torch.Size([128, 128, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage2.0.1.block.block.1.conv2.rbr_1x1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage2.0.1.block.block.1.conv2.rbr_1x1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.0.rbr_dense.conv.weight - torch.Size([384, 192, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage3.0.0.rbr_dense.bn.weight - torch.Size([384]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.0.rbr_dense.bn.bias - torch.Size([384]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.0.rbr_1x1.conv.weight - torch.Size([384, 192, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage3.0.0.rbr_1x1.bn.weight - torch.Size([384]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.0.rbr_1x1.bn.bias - torch.Size([384]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.conv1.conv.weight - torch.Size([256, 384, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage3.0.1.conv1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.conv1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.conv2.conv.weight - torch.Size([256, 384, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage3.0.1.conv2.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.conv2.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.conv3.conv.weight - torch.Size([384, 512, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage3.0.1.conv3.bn.weight - torch.Size([384]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.conv3.bn.bias - torch.Size([384]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.conv1.alpha - torch.Size([1]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.conv1.conv1.rbr_identity.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.conv1.conv1.rbr_identity.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.conv1.conv1.rbr_dense.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage3.0.1.block.conv1.conv1.rbr_dense.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.conv1.conv1.rbr_dense.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.conv1.conv1.rbr_1x1.conv.weight - torch.Size([256, 256, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage3.0.1.block.conv1.conv1.rbr_1x1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.conv1.conv1.rbr_1x1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.conv1.conv2.rbr_identity.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.conv1.conv2.rbr_identity.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.conv1.conv2.rbr_dense.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage3.0.1.block.conv1.conv2.rbr_dense.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.conv1.conv2.rbr_dense.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.conv1.conv2.rbr_1x1.conv.weight - torch.Size([256, 256, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage3.0.1.block.conv1.conv2.rbr_1x1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.conv1.conv2.rbr_1x1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.0.alpha - torch.Size([1]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.0.conv1.rbr_identity.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.0.conv1.rbr_identity.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.0.conv1.rbr_dense.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage3.0.1.block.block.0.conv1.rbr_dense.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.0.conv1.rbr_dense.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.0.conv1.rbr_1x1.conv.weight - torch.Size([256, 256, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage3.0.1.block.block.0.conv1.rbr_1x1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.0.conv1.rbr_1x1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.0.conv2.rbr_identity.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.0.conv2.rbr_identity.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.0.conv2.rbr_dense.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage3.0.1.block.block.0.conv2.rbr_dense.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.0.conv2.rbr_dense.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.0.conv2.rbr_1x1.conv.weight - torch.Size([256, 256, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage3.0.1.block.block.0.conv2.rbr_1x1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.0.conv2.rbr_1x1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.1.alpha - torch.Size([1]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.1.conv1.rbr_identity.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.1.conv1.rbr_identity.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.1.conv1.rbr_dense.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage3.0.1.block.block.1.conv1.rbr_dense.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.1.conv1.rbr_dense.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.1.conv1.rbr_1x1.conv.weight - torch.Size([256, 256, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage3.0.1.block.block.1.conv1.rbr_1x1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.1.conv1.rbr_1x1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.1.conv2.rbr_identity.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.1.conv2.rbr_identity.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.1.conv2.rbr_dense.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage3.0.1.block.block.1.conv2.rbr_dense.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.1.conv2.rbr_dense.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.1.conv2.rbr_1x1.conv.weight - torch.Size([256, 256, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage3.0.1.block.block.1.conv2.rbr_1x1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.1.conv2.rbr_1x1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.2.alpha - torch.Size([1]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.2.conv1.rbr_identity.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.2.conv1.rbr_identity.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.2.conv1.rbr_dense.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage3.0.1.block.block.2.conv1.rbr_dense.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.2.conv1.rbr_dense.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.2.conv1.rbr_1x1.conv.weight - torch.Size([256, 256, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage3.0.1.block.block.2.conv1.rbr_1x1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.2.conv1.rbr_1x1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.2.conv2.rbr_identity.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.2.conv2.rbr_identity.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.2.conv2.rbr_dense.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage3.0.1.block.block.2.conv2.rbr_dense.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.2.conv2.rbr_dense.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.2.conv2.rbr_1x1.conv.weight - torch.Size([256, 256, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage3.0.1.block.block.2.conv2.rbr_1x1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.2.conv2.rbr_1x1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.3.alpha - torch.Size([1]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.3.conv1.rbr_identity.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.3.conv1.rbr_identity.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.3.conv1.rbr_dense.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage3.0.1.block.block.3.conv1.rbr_dense.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.3.conv1.rbr_dense.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.3.conv1.rbr_1x1.conv.weight - torch.Size([256, 256, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage3.0.1.block.block.3.conv1.rbr_1x1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.3.conv1.rbr_1x1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.3.conv2.rbr_identity.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.3.conv2.rbr_identity.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.3.conv2.rbr_dense.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage3.0.1.block.block.3.conv2.rbr_dense.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.3.conv2.rbr_dense.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.3.conv2.rbr_1x1.conv.weight - torch.Size([256, 256, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage3.0.1.block.block.3.conv2.rbr_1x1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage3.0.1.block.block.3.conv2.rbr_1x1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.0.0.rbr_dense.conv.weight - torch.Size([768, 384, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage4.0.0.rbr_dense.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.0.0.rbr_dense.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.0.0.rbr_1x1.conv.weight - torch.Size([768, 384, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage4.0.0.rbr_1x1.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.0.0.rbr_1x1.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.0.1.conv1.conv.weight - torch.Size([512, 768, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage4.0.1.conv1.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.0.1.conv1.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.0.1.conv2.conv.weight - torch.Size([512, 768, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage4.0.1.conv2.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.0.1.conv2.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.0.1.conv3.conv.weight - torch.Size([768, 1024, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage4.0.1.conv3.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.0.1.conv3.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.0.1.block.conv1.alpha - torch.Size([1]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.0.1.block.conv1.conv1.rbr_identity.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.0.1.block.conv1.conv1.rbr_identity.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.0.1.block.conv1.conv1.rbr_dense.conv.weight - torch.Size([512, 512, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage4.0.1.block.conv1.conv1.rbr_dense.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.0.1.block.conv1.conv1.rbr_dense.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.0.1.block.conv1.conv1.rbr_1x1.conv.weight - torch.Size([512, 512, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage4.0.1.block.conv1.conv1.rbr_1x1.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.0.1.block.conv1.conv1.rbr_1x1.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.0.1.block.conv1.conv2.rbr_identity.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.0.1.block.conv1.conv2.rbr_identity.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.0.1.block.conv1.conv2.rbr_dense.conv.weight - torch.Size([512, 512, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage4.0.1.block.conv1.conv2.rbr_dense.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.0.1.block.conv1.conv2.rbr_dense.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.0.1.block.conv1.conv2.rbr_1x1.conv.weight - torch.Size([512, 512, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage4.0.1.block.conv1.conv2.rbr_1x1.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.0.1.block.conv1.conv2.rbr_1x1.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.0.1.block.block.0.alpha - torch.Size([1]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.0.1.block.block.0.conv1.rbr_identity.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.0.1.block.block.0.conv1.rbr_identity.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.0.1.block.block.0.conv1.rbr_dense.conv.weight - torch.Size([512, 512, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage4.0.1.block.block.0.conv1.rbr_dense.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.0.1.block.block.0.conv1.rbr_dense.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.0.1.block.block.0.conv1.rbr_1x1.conv.weight - torch.Size([512, 512, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage4.0.1.block.block.0.conv1.rbr_1x1.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.0.1.block.block.0.conv1.rbr_1x1.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.0.1.block.block.0.conv2.rbr_identity.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.0.1.block.block.0.conv2.rbr_identity.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.0.1.block.block.0.conv2.rbr_dense.conv.weight - torch.Size([512, 512, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage4.0.1.block.block.0.conv2.rbr_dense.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.0.1.block.block.0.conv2.rbr_dense.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.0.1.block.block.0.conv2.rbr_1x1.conv.weight - torch.Size([512, 512, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage4.0.1.block.block.0.conv2.rbr_1x1.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.0.1.block.block.0.conv2.rbr_1x1.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.1.conv1.conv.weight - torch.Size([384, 768, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage4.1.conv1.bn.weight - torch.Size([384]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.1.conv1.bn.bias - torch.Size([384]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.1.conv2.conv.weight - torch.Size([768, 1536, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPBep  

backbone.stage4.1.conv2.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of YOLODetector  

backbone.stage4.1.conv2.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.reduce_layers.2.conv.weight - torch.Size([192, 768, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.reduce_layers.2.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.reduce_layers.2.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.upsample_layers.0.weight - torch.Size([192, 192, 2, 2]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.upsample_layers.0.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.upsample_layers.1.weight - torch.Size([96, 96, 2, 2]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.upsample_layers.1.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.conv1.conv.weight - torch.Size([128, 576, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.0.0.conv1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.conv1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.conv2.conv.weight - torch.Size([128, 576, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.0.0.conv2.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.conv2.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.conv3.conv.weight - torch.Size([192, 256, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.0.0.conv3.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.conv3.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.conv1.alpha - torch.Size([1]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.conv1.conv1.rbr_identity.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.conv1.conv1.rbr_identity.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.conv1.conv1.rbr_dense.conv.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.0.0.block.conv1.conv1.rbr_dense.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.conv1.conv1.rbr_dense.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.conv1.conv1.rbr_1x1.conv.weight - torch.Size([128, 128, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.0.0.block.conv1.conv1.rbr_1x1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.conv1.conv1.rbr_1x1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.conv1.conv2.rbr_identity.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.conv1.conv2.rbr_identity.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.conv1.conv2.rbr_dense.conv.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.0.0.block.conv1.conv2.rbr_dense.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.conv1.conv2.rbr_dense.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.conv1.conv2.rbr_1x1.conv.weight - torch.Size([128, 128, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.0.0.block.conv1.conv2.rbr_1x1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.conv1.conv2.rbr_1x1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.block.0.alpha - torch.Size([1]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.block.0.conv1.rbr_identity.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.block.0.conv1.rbr_identity.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.block.0.conv1.rbr_dense.conv.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.0.0.block.block.0.conv1.rbr_dense.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.block.0.conv1.rbr_dense.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.block.0.conv1.rbr_1x1.conv.weight - torch.Size([128, 128, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.0.0.block.block.0.conv1.rbr_1x1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.block.0.conv1.rbr_1x1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.block.0.conv2.rbr_identity.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.block.0.conv2.rbr_identity.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.block.0.conv2.rbr_dense.conv.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.0.0.block.block.0.conv2.rbr_dense.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.block.0.conv2.rbr_dense.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.block.0.conv2.rbr_1x1.conv.weight - torch.Size([128, 128, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.0.0.block.block.0.conv2.rbr_1x1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.block.0.conv2.rbr_1x1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.block.1.alpha - torch.Size([1]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.block.1.conv1.rbr_identity.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.block.1.conv1.rbr_identity.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.block.1.conv1.rbr_dense.conv.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.0.0.block.block.1.conv1.rbr_dense.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.block.1.conv1.rbr_dense.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.block.1.conv1.rbr_1x1.conv.weight - torch.Size([128, 128, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.0.0.block.block.1.conv1.rbr_1x1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.block.1.conv1.rbr_1x1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.block.1.conv2.rbr_identity.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.block.1.conv2.rbr_identity.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.block.1.conv2.rbr_dense.conv.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.0.0.block.block.1.conv2.rbr_dense.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.block.1.conv2.rbr_dense.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.block.1.conv2.rbr_1x1.conv.weight - torch.Size([128, 128, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.0.0.block.block.1.conv2.rbr_1x1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.0.block.block.1.conv2.rbr_1x1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.1.conv.weight - torch.Size([96, 192, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.0.1.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.0.1.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.conv1.conv.weight - torch.Size([64, 288, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.1.conv1.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.conv1.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.conv2.conv.weight - torch.Size([64, 288, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.1.conv2.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.conv2.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.conv3.conv.weight - torch.Size([96, 128, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.1.conv3.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.conv3.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.conv1.alpha - torch.Size([1]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.conv1.conv1.rbr_identity.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.conv1.conv1.rbr_identity.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.conv1.conv1.rbr_dense.conv.weight - torch.Size([64, 64, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.1.block.conv1.conv1.rbr_dense.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.conv1.conv1.rbr_dense.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.conv1.conv1.rbr_1x1.conv.weight - torch.Size([64, 64, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.1.block.conv1.conv1.rbr_1x1.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.conv1.conv1.rbr_1x1.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.conv1.conv2.rbr_identity.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.conv1.conv2.rbr_identity.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.conv1.conv2.rbr_dense.conv.weight - torch.Size([64, 64, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.1.block.conv1.conv2.rbr_dense.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.conv1.conv2.rbr_dense.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.conv1.conv2.rbr_1x1.conv.weight - torch.Size([64, 64, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.1.block.conv1.conv2.rbr_1x1.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.conv1.conv2.rbr_1x1.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.block.0.alpha - torch.Size([1]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.block.0.conv1.rbr_identity.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.block.0.conv1.rbr_identity.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.block.0.conv1.rbr_dense.conv.weight - torch.Size([64, 64, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.1.block.block.0.conv1.rbr_dense.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.block.0.conv1.rbr_dense.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.block.0.conv1.rbr_1x1.conv.weight - torch.Size([64, 64, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.1.block.block.0.conv1.rbr_1x1.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.block.0.conv1.rbr_1x1.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.block.0.conv2.rbr_identity.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.block.0.conv2.rbr_identity.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.block.0.conv2.rbr_dense.conv.weight - torch.Size([64, 64, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.1.block.block.0.conv2.rbr_dense.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.block.0.conv2.rbr_dense.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.block.0.conv2.rbr_1x1.conv.weight - torch.Size([64, 64, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.1.block.block.0.conv2.rbr_1x1.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.block.0.conv2.rbr_1x1.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.block.1.alpha - torch.Size([1]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.block.1.conv1.rbr_identity.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.block.1.conv1.rbr_identity.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.block.1.conv1.rbr_dense.conv.weight - torch.Size([64, 64, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.1.block.block.1.conv1.rbr_dense.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.block.1.conv1.rbr_dense.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.block.1.conv1.rbr_1x1.conv.weight - torch.Size([64, 64, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.1.block.block.1.conv1.rbr_1x1.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.block.1.conv1.rbr_1x1.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.block.1.conv2.rbr_identity.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.block.1.conv2.rbr_identity.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.block.1.conv2.rbr_dense.conv.weight - torch.Size([64, 64, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.1.block.block.1.conv2.rbr_dense.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.block.1.conv2.rbr_dense.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.block.1.conv2.rbr_1x1.conv.weight - torch.Size([64, 64, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.top_down_layers.1.block.block.1.conv2.rbr_1x1.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.top_down_layers.1.block.block.1.conv2.rbr_1x1.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.downsample_layers.0.conv.weight - torch.Size([96, 96, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.downsample_layers.0.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.downsample_layers.0.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.downsample_layers.1.conv.weight - torch.Size([192, 192, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.downsample_layers.1.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.downsample_layers.1.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.conv1.conv.weight - torch.Size([128, 192, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.0.conv1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.conv1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.conv2.conv.weight - torch.Size([128, 192, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.0.conv2.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.conv2.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.conv3.conv.weight - torch.Size([192, 256, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.0.conv3.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.conv3.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.conv1.alpha - torch.Size([1]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.conv1.conv1.rbr_identity.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.conv1.conv1.rbr_identity.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.conv1.conv1.rbr_dense.conv.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.0.block.conv1.conv1.rbr_dense.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.conv1.conv1.rbr_dense.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.conv1.conv1.rbr_1x1.conv.weight - torch.Size([128, 128, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.0.block.conv1.conv1.rbr_1x1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.conv1.conv1.rbr_1x1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.conv1.conv2.rbr_identity.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.conv1.conv2.rbr_identity.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.conv1.conv2.rbr_dense.conv.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.0.block.conv1.conv2.rbr_dense.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.conv1.conv2.rbr_dense.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.conv1.conv2.rbr_1x1.conv.weight - torch.Size([128, 128, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.0.block.conv1.conv2.rbr_1x1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.conv1.conv2.rbr_1x1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.block.0.alpha - torch.Size([1]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.block.0.conv1.rbr_identity.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.block.0.conv1.rbr_identity.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.block.0.conv1.rbr_dense.conv.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.0.block.block.0.conv1.rbr_dense.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.block.0.conv1.rbr_dense.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.block.0.conv1.rbr_1x1.conv.weight - torch.Size([128, 128, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.0.block.block.0.conv1.rbr_1x1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.block.0.conv1.rbr_1x1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.block.0.conv2.rbr_identity.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.block.0.conv2.rbr_identity.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.block.0.conv2.rbr_dense.conv.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.0.block.block.0.conv2.rbr_dense.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.block.0.conv2.rbr_dense.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.block.0.conv2.rbr_1x1.conv.weight - torch.Size([128, 128, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.0.block.block.0.conv2.rbr_1x1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.block.0.conv2.rbr_1x1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.block.1.alpha - torch.Size([1]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.block.1.conv1.rbr_identity.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.block.1.conv1.rbr_identity.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.block.1.conv1.rbr_dense.conv.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.0.block.block.1.conv1.rbr_dense.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.block.1.conv1.rbr_dense.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.block.1.conv1.rbr_1x1.conv.weight - torch.Size([128, 128, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.0.block.block.1.conv1.rbr_1x1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.block.1.conv1.rbr_1x1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.block.1.conv2.rbr_identity.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.block.1.conv2.rbr_identity.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.block.1.conv2.rbr_dense.conv.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.0.block.block.1.conv2.rbr_dense.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.block.1.conv2.rbr_dense.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.block.1.conv2.rbr_1x1.conv.weight - torch.Size([128, 128, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.0.block.block.1.conv2.rbr_1x1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.0.block.block.1.conv2.rbr_1x1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.conv1.conv.weight - torch.Size([256, 384, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.1.conv1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.conv1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.conv2.conv.weight - torch.Size([256, 384, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.1.conv2.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.conv2.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.conv3.conv.weight - torch.Size([384, 512, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.1.conv3.bn.weight - torch.Size([384]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.conv3.bn.bias - torch.Size([384]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.conv1.alpha - torch.Size([1]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.conv1.conv1.rbr_identity.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.conv1.conv1.rbr_identity.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.conv1.conv1.rbr_dense.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.1.block.conv1.conv1.rbr_dense.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.conv1.conv1.rbr_dense.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.conv1.conv1.rbr_1x1.conv.weight - torch.Size([256, 256, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.1.block.conv1.conv1.rbr_1x1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.conv1.conv1.rbr_1x1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.conv1.conv2.rbr_identity.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.conv1.conv2.rbr_identity.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.conv1.conv2.rbr_dense.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.1.block.conv1.conv2.rbr_dense.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.conv1.conv2.rbr_dense.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.conv1.conv2.rbr_1x1.conv.weight - torch.Size([256, 256, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.1.block.conv1.conv2.rbr_1x1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.conv1.conv2.rbr_1x1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.block.0.alpha - torch.Size([1]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.block.0.conv1.rbr_identity.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.block.0.conv1.rbr_identity.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.block.0.conv1.rbr_dense.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.1.block.block.0.conv1.rbr_dense.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.block.0.conv1.rbr_dense.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.block.0.conv1.rbr_1x1.conv.weight - torch.Size([256, 256, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.1.block.block.0.conv1.rbr_1x1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.block.0.conv1.rbr_1x1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.block.0.conv2.rbr_identity.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.block.0.conv2.rbr_identity.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.block.0.conv2.rbr_dense.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.1.block.block.0.conv2.rbr_dense.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.block.0.conv2.rbr_dense.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.block.0.conv2.rbr_1x1.conv.weight - torch.Size([256, 256, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.1.block.block.0.conv2.rbr_1x1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.block.0.conv2.rbr_1x1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.block.1.alpha - torch.Size([1]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.block.1.conv1.rbr_identity.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.block.1.conv1.rbr_identity.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.block.1.conv1.rbr_dense.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.1.block.block.1.conv1.rbr_dense.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.block.1.conv1.rbr_dense.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.block.1.conv1.rbr_1x1.conv.weight - torch.Size([256, 256, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.1.block.block.1.conv1.rbr_1x1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.block.1.conv1.rbr_1x1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.block.1.conv2.rbr_identity.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.block.1.conv2.rbr_identity.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.block.1.conv2.rbr_dense.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.1.block.block.1.conv2.rbr_dense.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.block.1.conv2.rbr_dense.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.block.1.conv2.rbr_1x1.conv.weight - torch.Size([256, 256, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6CSPRepPAFPN  

neck.bottom_up_layers.1.block.block.1.conv2.rbr_1x1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

neck.bottom_up_layers.1.block.block.1.conv2.rbr_1x1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLODetector  

bbox_head.head_module.cls_convs.0.conv.weight - torch.Size([96, 96, 3, 3]): 
The value is the same before and after calling `init_weights` of YOLODetector  

bbox_head.head_module.cls_convs.0.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of YOLODetector  

bbox_head.head_module.cls_convs.0.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of YOLODetector  

bbox_head.head_module.cls_convs.1.conv.weight - torch.Size([192, 192, 3, 3]): 
The value is the same before and after calling `init_weights` of YOLODetector  

bbox_head.head_module.cls_convs.1.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of YOLODetector  

bbox_head.head_module.cls_convs.1.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of YOLODetector  

bbox_head.head_module.cls_convs.2.conv.weight - torch.Size([384, 384, 3, 3]): 
The value is the same before and after calling `init_weights` of YOLODetector  

bbox_head.head_module.cls_convs.2.bn.weight - torch.Size([384]): 
The value is the same before and after calling `init_weights` of YOLODetector  

bbox_head.head_module.cls_convs.2.bn.bias - torch.Size([384]): 
The value is the same before and after calling `init_weights` of YOLODetector  

bbox_head.head_module.reg_convs.0.conv.weight - torch.Size([96, 96, 3, 3]): 
The value is the same before and after calling `init_weights` of YOLODetector  

bbox_head.head_module.reg_convs.0.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of YOLODetector  

bbox_head.head_module.reg_convs.0.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of YOLODetector  

bbox_head.head_module.reg_convs.1.conv.weight - torch.Size([192, 192, 3, 3]): 
The value is the same before and after calling `init_weights` of YOLODetector  

bbox_head.head_module.reg_convs.1.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of YOLODetector  

bbox_head.head_module.reg_convs.1.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of YOLODetector  

bbox_head.head_module.reg_convs.2.conv.weight - torch.Size([384, 384, 3, 3]): 
The value is the same before and after calling `init_weights` of YOLODetector  

bbox_head.head_module.reg_convs.2.bn.weight - torch.Size([384]): 
The value is the same before and after calling `init_weights` of YOLODetector  

bbox_head.head_module.reg_convs.2.bn.bias - torch.Size([384]): 
The value is the same before and after calling `init_weights` of YOLODetector  

bbox_head.head_module.cls_preds.0.weight - torch.Size([4, 96, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6HeadModule  

bbox_head.head_module.cls_preds.0.bias - torch.Size([4]): 
Initialized by user-defined `init_weights` in YOLOv6HeadModule  

bbox_head.head_module.cls_preds.1.weight - torch.Size([4, 192, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6HeadModule  

bbox_head.head_module.cls_preds.1.bias - torch.Size([4]): 
Initialized by user-defined `init_weights` in YOLOv6HeadModule  

bbox_head.head_module.cls_preds.2.weight - torch.Size([4, 384, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6HeadModule  

bbox_head.head_module.cls_preds.2.bias - torch.Size([4]): 
Initialized by user-defined `init_weights` in YOLOv6HeadModule  

bbox_head.head_module.reg_preds.0.weight - torch.Size([4, 96, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6HeadModule  

bbox_head.head_module.reg_preds.0.bias - torch.Size([4]): 
Initialized by user-defined `init_weights` in YOLOv6HeadModule  

bbox_head.head_module.reg_preds.1.weight - torch.Size([4, 192, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6HeadModule  

bbox_head.head_module.reg_preds.1.bias - torch.Size([4]): 
Initialized by user-defined `init_weights` in YOLOv6HeadModule  

bbox_head.head_module.reg_preds.2.weight - torch.Size([4, 384, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOv6HeadModule  

bbox_head.head_module.reg_preds.2.bias - torch.Size([4]): 
Initialized by user-defined `init_weights` in YOLOv6HeadModule  

bbox_head.head_module.stems.0.conv.weight - torch.Size([96, 96, 1, 1]): 
The value is the same before and after calling `init_weights` of YOLODetector  

bbox_head.head_module.stems.0.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of YOLODetector  

bbox_head.head_module.stems.0.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of YOLODetector  

bbox_head.head_module.stems.1.conv.weight - torch.Size([192, 192, 1, 1]): 
The value is the same before and after calling `init_weights` of YOLODetector  

bbox_head.head_module.stems.1.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of YOLODetector  

bbox_head.head_module.stems.1.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of YOLODetector  

bbox_head.head_module.stems.2.conv.weight - torch.Size([384, 384, 1, 1]): 
The value is the same before and after calling `init_weights` of YOLODetector  

bbox_head.head_module.stems.2.bn.weight - torch.Size([384]): 
The value is the same before and after calling `init_weights` of YOLODetector  

bbox_head.head_module.stems.2.bn.bias - torch.Size([384]): 
The value is the same before and after calling `init_weights` of YOLODetector  
2024/05/03 10:24:08 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
2024/05/03 10:24:08 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
2024/05/03 10:24:08 - mmengine - INFO - Checkpoints will be saved to /media/iris/Dong/openmmlab/detection/coding/yolov6/yolov6_m_syncbn_fast_8xb32-300e_coco.
2024/05/03 10:46:57 - mmengine - INFO - Epoch(train)  [1][ 50/184]  base_lr: 1.0000e-02 lr: 4.9000e-04  eta: 2 days, 1:58:41  time: 27.3686  data_time: 15.9860  memory: 8798  loss: 6.1928  loss_cls: 2.5341  loss_bbox: 3.6587
2024/05/03 11:06:25 - mmengine - INFO - Epoch(train)  [1][100/184]  base_lr: 1.0000e-02 lr: 9.9000e-04  eta: 1 day, 21:58:21  time: 23.3676  data_time: 13.3152  memory: 7926  loss: 5.9965  loss_cls: 2.8929  loss_bbox: 3.1037
2024/05/03 11:26:16 - mmengine - INFO - Epoch(train)  [1][150/184]  base_lr: 1.0000e-02 lr: 1.4900e-03  eta: 1 day, 20:41:16  time: 23.8127  data_time: 21.2530  memory: 7933  loss: 5.9935  loss_cls: 2.9432  loss_bbox: 3.0503
2024/05/03 11:35:54 - mmengine - INFO - Exp name: yolov6_m_syncbn_fast_8xb32-300e_coco_20240503_102402
2024/05/03 11:35:54 - mmengine - INFO - Saving checkpoint at 1 epochs
2024/05/03 11:35:57 - mmengine - WARNING - `save_param_scheduler` is True but `self.param_schedulers` is None, so skip saving parameter schedulers
2024/05/03 11:36:40 - mmengine - INFO - Epoch(val)  [1][ 50/552]    eta: 0:06:47  time: 0.8117  data_time: 0.7804  memory: 7933  
2024/05/03 11:37:18 - mmengine - INFO - Epoch(val)  [1][100/552]    eta: 0:05:55  time: 0.7614  data_time: 0.7313  memory: 3137  
2024/05/03 11:37:36 - mmengine - INFO - Epoch(val)  [1][150/552]    eta: 0:04:20  time: 0.3727  data_time: 0.3429  memory: 3134  
2024/05/03 11:37:56 - mmengine - INFO - Epoch(val)  [1][200/552]    eta: 0:03:25  time: 0.3929  data_time: 0.3682  memory: 787  
2024/05/03 11:38:15 - mmengine - INFO - Epoch(val)  [1][250/552]    eta: 0:02:44  time: 0.3863  data_time: 0.3616  memory: 787  
2024/05/03 11:38:34 - mmengine - INFO - Epoch(val)  [1][300/552]    eta: 0:02:10  time: 0.3813  data_time: 0.3567  memory: 787  
2024/05/03 11:38:52 - mmengine - INFO - Epoch(val)  [1][350/552]    eta: 0:01:39  time: 0.3459  data_time: 0.3164  memory: 3132  
2024/05/03 11:39:08 - mmengine - INFO - Epoch(val)  [1][400/552]    eta: 0:01:11  time: 0.3242  data_time: 0.3003  memory: 783  
2024/05/03 11:39:24 - mmengine - INFO - Epoch(val)  [1][450/552]    eta: 0:00:46  time: 0.3311  data_time: 0.3075  memory: 783  
2024/05/03 11:39:42 - mmengine - INFO - Epoch(val)  [1][500/552]    eta: 0:00:23  time: 0.3545  data_time: 0.3299  memory: 783  
2024/05/03 11:39:59 - mmengine - INFO - Epoch(val)  [1][550/552]    eta: 0:00:00  time: 0.3450  data_time: 0.3205  memory: 783  
2024/05/03 11:40:16 - mmengine - INFO - Evaluating bbox...
2024/05/03 11:40:22 - mmengine - INFO - bbox_mAP_copypaste: 0.000 0.000 0.000 -1.000 -1.000 0.000
2024/05/03 11:40:22 - mmengine - INFO - Epoch(val) [1][552/552]    coco/bbox_mAP: 0.0000  coco/bbox_mAP_50: 0.0000  coco/bbox_mAP_75: 0.0000  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.0000  data_time: 0.4094  time: 0.4358
2024/05/03 11:40:25 - mmengine - INFO - The best checkpoint with 0.0000 coco/bbox_mAP at 1 epoch is saved to best_coco_bbox_mAP_epoch_1.pth.
2024/05/03 12:03:33 - mmengine - INFO - Epoch(train)  [2][ 50/184]  base_lr: 1.0000e-02 lr: 2.3256e-03  eta: 1 day, 19:10:19  time: 27.7054  data_time: 23.1310  memory: 7925  loss: 5.9247  loss_cls: 2.9442  loss_bbox: 2.9804
2024/05/03 12:22:51 - mmengine - INFO - Epoch(train)  [2][100/184]  base_lr: 1.0000e-02 lr: 2.8247e-03  eta: 1 day, 18:28:33  time: 23.1661  data_time: 22.4976  memory: 7939  loss: 5.9505  loss_cls: 2.9284  loss_bbox: 3.0221
2024/05/03 12:42:22 - mmengine - INFO - Epoch(train)  [2][150/184]  base_lr: 1.0000e-02 lr: 3.3237e-03  eta: 1 day, 17:57:15  time: 23.4057  data_time: 22.9979  memory: 7925  loss: 5.8311  loss_cls: 2.9158  loss_bbox: 2.9153
2024/05/03 12:51:50 - mmengine - INFO - Exp name: yolov6_m_syncbn_fast_8xb32-300e_coco_20240503_102402
2024/05/03 12:51:50 - mmengine - INFO - Saving checkpoint at 2 epochs
2024/05/03 12:52:37 - mmengine - INFO - Epoch(val)  [2][ 50/552]    eta: 0:07:00  time: 0.8373  data_time: 0.8124  memory: 7918  
2024/05/03 12:53:17 - mmengine - INFO - Epoch(val)  [2][100/552]    eta: 0:06:09  time: 0.7955  data_time: 0.7729  memory: 799  
2024/05/03 12:53:35 - mmengine - INFO - Epoch(val)  [2][150/552]    eta: 0:04:27  time: 0.3658  data_time: 0.3407  memory: 799  
2024/05/03 12:53:54 - mmengine - INFO - Epoch(val)  [2][200/552]    eta: 0:03:29  time: 0.3851  data_time: 0.3607  memory: 787  
2024/05/03 12:54:14 - mmengine - INFO - Epoch(val)  [2][250/552]    eta: 0:02:47  time: 0.3939  data_time: 0.3697  memory: 787  
2024/05/03 12:54:32 - mmengine - INFO - Epoch(val)  [2][300/552]    eta: 0:02:11  time: 0.3503  data_time: 0.3264  memory: 787  
2024/05/03 12:54:50 - mmengine - INFO - Epoch(val)  [2][350/552]    eta: 0:01:40  time: 0.3692  data_time: 0.3451  memory: 787  
2024/05/03 12:55:06 - mmengine - INFO - Epoch(val)  [2][400/552]    eta: 0:01:12  time: 0.3224  data_time: 0.2982  memory: 783  
2024/05/03 12:55:23 - mmengine - INFO - Epoch(val)  [2][450/552]    eta: 0:00:47  time: 0.3390  data_time: 0.3155  memory: 783  
2024/05/03 12:55:40 - mmengine - INFO - Epoch(val)  [2][500/552]    eta: 0:00:23  time: 0.3423  data_time: 0.3187  memory: 783  
2024/05/03 12:55:58 - mmengine - INFO - Epoch(val)  [2][550/552]    eta: 0:00:00  time: 0.3536  data_time: 0.3299  memory: 783  
2024/05/03 12:56:11 - mmengine - INFO - Evaluating bbox...
2024/05/03 12:56:16 - mmengine - INFO - bbox_mAP_copypaste: 0.000 0.000 0.000 -1.000 -1.000 0.000
2024/05/03 12:56:16 - mmengine - INFO - Epoch(val) [2][552/552]    coco/bbox_mAP: 0.0000  coco/bbox_mAP_50: 0.0000  coco/bbox_mAP_75: 0.0000  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.0000  data_time: 0.4167  time: 0.4407
2024/05/03 13:20:16 - mmengine - INFO - Epoch(train)  [3][ 50/184]  base_lr: 1.0000e-02 lr: 4.1386e-03  eta: 1 day, 17:21:32  time: 28.7973  data_time: 21.5748  memory: 7932  loss: 5.7242  loss_cls: 2.8670  loss_bbox: 2.8571
2024/05/03 13:39:19 - mmengine - INFO - Epoch(train)  [3][100/184]  base_lr: 1.0000e-02 lr: 4.6349e-03  eta: 1 day, 16:49:01  time: 22.8494  data_time: 5.0972  memory: 7918  loss: 5.6000  loss_cls: 2.8604  loss_bbox: 2.7396
2024/05/03 13:58:41 - mmengine - INFO - Epoch(train)  [3][150/184]  base_lr: 1.0000e-02 lr: 5.1311e-03  eta: 1 day, 16:23:00  time: 23.2461  data_time: 2.1073  memory: 7939  loss: 5.5100  loss_cls: 2.8800  loss_bbox: 2.6300
2024/05/03 14:07:11 - mmengine - INFO - Exp name: yolov6_m_syncbn_fast_8xb32-300e_coco_20240503_102402
2024/05/03 14:07:11 - mmengine - INFO - Saving checkpoint at 3 epochs
2024/05/03 14:07:58 - mmengine - INFO - Epoch(val)  [3][ 50/552]    eta: 0:07:11  time: 0.8605  data_time: 0.8370  memory: 7918  
2024/05/03 14:08:38 - mmengine - INFO - Epoch(val)  [3][100/552]    eta: 0:06:15  time: 0.7997  data_time: 0.7775  memory: 799  
2024/05/03 14:08:56 - mmengine - INFO - Epoch(val)  [3][150/552]    eta: 0:04:33  time: 0.3789  data_time: 0.3561  memory: 799  
2024/05/03 14:09:16 - mmengine - INFO - Epoch(val)  [3][200/552]    eta: 0:03:33  time: 0.3868  data_time: 0.3641  memory: 787  
2024/05/03 14:09:34 - mmengine - INFO - Epoch(val)  [3][250/552]    eta: 0:02:49  time: 0.3724  data_time: 0.3499  memory: 787  
2024/05/03 14:09:51 - mmengine - INFO - Epoch(val)  [3][300/552]    eta: 0:02:11  time: 0.3371  data_time: 0.3142  memory: 787  
2024/05/03 14:10:09 - mmengine - INFO - Epoch(val)  [3][350/552]    eta: 0:01:40  time: 0.3618  data_time: 0.3391  memory: 787  
2024/05/03 14:10:26 - mmengine - INFO - Epoch(val)  [3][400/552]    eta: 0:01:12  time: 0.3252  data_time: 0.3031  memory: 783  
2024/05/03 14:10:43 - mmengine - INFO - Epoch(val)  [3][450/552]    eta: 0:00:47  time: 0.3498  data_time: 0.3270  memory: 783  
2024/05/03 14:11:00 - mmengine - INFO - Epoch(val)  [3][500/552]    eta: 0:00:23  time: 0.3290  data_time: 0.3068  memory: 783  
2024/05/03 14:11:18 - mmengine - INFO - Epoch(val)  [3][550/552]    eta: 0:00:00  time: 0.3612  data_time: 0.3385  memory: 783  
2024/05/03 14:11:31 - mmengine - INFO - Evaluating bbox...
2024/05/03 14:11:37 - mmengine - INFO - bbox_mAP_copypaste: 0.005 0.016 0.002 -1.000 -1.000 0.005
2024/05/03 14:11:37 - mmengine - INFO - Epoch(val) [3][552/552]    coco/bbox_mAP: 0.0050  coco/bbox_mAP_50: 0.0160  coco/bbox_mAP_75: 0.0020  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.0050  data_time: 0.4181  time: 0.4408
2024/05/03 14:11:37 - mmengine - INFO - The previous best checkpoint /media/iris/Dong/openmmlab/detection/coding/yolov6/yolov6_m_syncbn_fast_8xb32-300e_coco/best_coco_bbox_mAP_epoch_1.pth is removed
2024/05/03 14:11:39 - mmengine - INFO - The best checkpoint with 0.0050 coco/bbox_mAP at 3 epoch is saved to best_coco_bbox_mAP_epoch_3.pth.
2024/05/03 14:34:52 - mmengine - INFO - Epoch(train)  [4][ 50/184]  base_lr: 1.0000e-02 lr: 5.9086e-03  eta: 1 day, 15:32:50  time: 27.7829  data_time: 27.2356  memory: 7925  loss: 5.3040  loss_cls: 2.9967  loss_bbox: 2.3073
2024/05/03 14:53:56 - mmengine - INFO - Epoch(train)  [4][100/184]  base_lr: 1.0000e-02 lr: 6.4002e-03  eta: 1 day, 15:07:24  time: 22.8910  data_time: 22.1285  memory: 7932  loss: 5.0976  loss_cls: 2.9528  loss_bbox: 2.1449
2024/05/03 15:12:07 - mmengine - INFO - Epoch(train)  [4][150/184]  base_lr: 1.0000e-02 lr: 6.8918e-03  eta: 1 day, 14:35:16  time: 21.8083  data_time: 16.2458  memory: 7954  loss: 4.8817  loss_cls: 2.9436  loss_bbox: 1.9381
2024/05/03 15:22:49 - mmengine - INFO - Exp name: yolov6_m_syncbn_fast_8xb32-300e_coco_20240503_102402
2024/05/03 15:22:49 - mmengine - INFO - Saving checkpoint at 4 epochs
2024/05/03 15:23:37 - mmengine - INFO - Epoch(val)  [4][ 50/552]    eta: 0:07:13  time: 0.8627  data_time: 0.8368  memory: 7947  
2024/05/03 15:24:16 - mmengine - INFO - Epoch(val)  [4][100/552]    eta: 0:06:09  time: 0.7728  data_time: 0.7480  memory: 799  
2024/05/03 15:24:37 - mmengine - INFO - Epoch(val)  [4][150/552]    eta: 0:04:34  time: 0.4145  data_time: 0.3893  memory: 799  
2024/05/03 15:24:56 - mmengine - INFO - Epoch(val)  [4][200/552]    eta: 0:03:33  time: 0.3801  data_time: 0.3548  memory: 787  
2024/05/03 15:25:14 - mmengine - INFO - Epoch(val)  [4][250/552]    eta: 0:02:49  time: 0.3688  data_time: 0.3429  memory: 787  
2024/05/03 15:25:32 - mmengine - INFO - Epoch(val)  [4][300/552]    eta: 0:02:12  time: 0.3501  data_time: 0.3254  memory: 787  
2024/05/03 15:25:50 - mmengine - INFO - Epoch(val)  [4][350/552]    eta: 0:01:41  time: 0.3670  data_time: 0.3417  memory: 787  
2024/05/03 15:26:06 - mmengine - INFO - Epoch(val)  [4][400/552]    eta: 0:01:12  time: 0.3096  data_time: 0.2850  memory: 783  
2024/05/03 15:26:23 - mmengine - INFO - Epoch(val)  [4][450/552]    eta: 0:00:47  time: 0.3421  data_time: 0.3172  memory: 783  
2024/05/03 15:26:40 - mmengine - INFO - Epoch(val)  [4][500/552]    eta: 0:00:23  time: 0.3513  data_time: 0.3272  memory: 783  
2024/05/03 15:26:58 - mmengine - INFO - Epoch(val)  [4][550/552]    eta: 0:00:00  time: 0.3614  data_time: 0.3357  memory: 783  
2024/05/03 15:27:10 - mmengine - INFO - Evaluating bbox...
2024/05/03 15:27:16 - mmengine - INFO - bbox_mAP_copypaste: 0.005 0.013 0.002 -1.000 -1.000 0.005
2024/05/03 15:27:17 - mmengine - INFO - Epoch(val) [4][552/552]    coco/bbox_mAP: 0.0050  coco/bbox_mAP_50: 0.0130  coco/bbox_mAP_75: 0.0020  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.0050  data_time: 0.4176  time: 0.4427
2024/05/03 15:49:24 - mmengine - INFO - Epoch(train)  [5][ 50/184]  base_lr: 1.0000e-02 lr: 7.6157e-03  eta: 1 day, 14:02:22  time: 26.5458  data_time: 19.3851  memory: 7985  loss: 3.8495  loss_cls: 2.1781  loss_bbox: 1.6714
2024/05/03 16:09:24 - mmengine - INFO - Epoch(train)  [5][100/184]  base_lr: 1.0000e-02 lr: 8.1007e-03  eta: 1 day, 13:46:00  time: 24.0076  data_time: 19.6531  memory: 8021  loss: 3.7593  loss_cls: 2.1807  loss_bbox: 1.5786
2024/05/03 16:28:30 - mmengine - INFO - Epoch(train)  [5][150/184]  base_lr: 1.0000e-02 lr: 8.5858e-03  eta: 1 day, 13:23:18  time: 22.9109  data_time: 22.5059  memory: 7997  loss: 3.6891  loss_cls: 2.1859  loss_bbox: 1.5032
2024/05/03 16:38:15 - mmengine - INFO - Exp name: yolov6_m_syncbn_fast_8xb32-300e_coco_20240503_102402
2024/05/03 16:38:15 - mmengine - INFO - Saving checkpoint at 5 epochs
2024/05/03 16:39:03 - mmengine - INFO - Epoch(val)  [5][ 50/552]    eta: 0:07:09  time: 0.8548  data_time: 0.8296  memory: 7985  
2024/05/03 16:39:42 - mmengine - INFO - Epoch(val)  [5][100/552]    eta: 0:06:09  time: 0.7813  data_time: 0.7567  memory: 799  
2024/05/03 16:40:00 - mmengine - INFO - Epoch(val)  [5][150/552]    eta: 0:04:28  time: 0.3665  data_time: 0.3407  memory: 799  
2024/05/03 16:40:19 - mmengine - INFO - Epoch(val)  [5][200/552]    eta: 0:03:29  time: 0.3765  data_time: 0.3503  memory: 787  
2024/05/03 16:40:38 - mmengine - INFO - Epoch(val)  [5][250/552]    eta: 0:02:46  time: 0.3750  data_time: 0.3487  memory: 787  
2024/05/03 16:40:56 - mmengine - INFO - Epoch(val)  [5][300/552]    eta: 0:02:10  time: 0.3578  data_time: 0.3324  memory: 787  
2024/05/03 16:41:14 - mmengine - INFO - Epoch(val)  [5][350/552]    eta: 0:01:40  time: 0.3739  data_time: 0.3487  memory: 787  
2024/05/03 16:41:30 - mmengine - INFO - Epoch(val)  [5][400/552]    eta: 0:01:12  time: 0.3111  data_time: 0.2860  memory: 783  
2024/05/03 16:41:47 - mmengine - INFO - Epoch(val)  [5][450/552]    eta: 0:00:46  time: 0.3390  data_time: 0.3141  memory: 783  
2024/05/03 16:42:06 - mmengine - INFO - Epoch(val)  [5][500/552]    eta: 0:00:23  time: 0.3732  data_time: 0.3489  memory: 783  
2024/05/03 16:42:23 - mmengine - INFO - Epoch(val)  [5][550/552]    eta: 0:00:00  time: 0.3402  data_time: 0.3151  memory: 783  
2024/05/03 16:42:35 - mmengine - INFO - Evaluating bbox...
2024/05/03 16:42:41 - mmengine - INFO - bbox_mAP_copypaste: 0.054 0.093 0.057 -1.000 -1.000 0.054
2024/05/03 16:42:41 - mmengine - INFO - Epoch(val) [5][552/552]    coco/bbox_mAP: 0.0540  coco/bbox_mAP_50: 0.0930  coco/bbox_mAP_75: 0.0570  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.0540  data_time: 0.4147  time: 0.4400
2024/05/03 16:42:41 - mmengine - INFO - The previous best checkpoint /media/iris/Dong/openmmlab/detection/coding/yolov6/yolov6_m_syncbn_fast_8xb32-300e_coco/best_coco_bbox_mAP_epoch_3.pth is removed
2024/05/03 16:42:44 - mmengine - INFO - The best checkpoint with 0.0540 coco/bbox_mAP at 5 epoch is saved to best_coco_bbox_mAP_epoch_5.pth.
2024/05/03 17:05:11 - mmengine - INFO - Epoch(train)  [6][ 50/184]  base_lr: 1.0000e-02 lr: 9.2406e-03  eta: 1 day, 12:46:25  time: 26.8831  data_time: 14.6754  memory: 7997  loss: 3.5780  loss_cls: 2.1984  loss_bbox: 1.3795
2024/05/03 17:14:40 - mmengine - INFO - Exp name: yolov6_m_syncbn_fast_8xb32-300e_coco_20240503_102402
2024/05/03 17:24:05 - mmengine - INFO - Epoch(train)  [6][100/184]  base_lr: 1.0000e-02 lr: 9.5362e-03  eta: 1 day, 12:23:34  time: 22.6866  data_time: 18.0074  memory: 8021  loss: 3.5419  loss_cls: 2.1794  loss_bbox: 1.3625
2024/05/03 17:42:14 - mmengine - INFO - Epoch(train)  [6][150/184]  base_lr: 1.0000e-02 lr: 9.5362e-03  eta: 1 day, 11:57:08  time: 21.7700  data_time: 21.3625  memory: 8009  loss: 3.4412  loss_cls: 2.1663  loss_bbox: 1.2748
2024/05/03 17:52:48 - mmengine - INFO - Exp name: yolov6_m_syncbn_fast_8xb32-300e_coco_20240503_102402
2024/05/03 17:52:48 - mmengine - INFO - Saving checkpoint at 6 epochs
2024/05/03 17:53:38 - mmengine - INFO - Epoch(val)  [6][ 50/552]    eta: 0:07:03  time: 0.8430  data_time: 0.8175  memory: 7985  
2024/05/03 17:54:15 - mmengine - INFO - Epoch(val)  [6][100/552]    eta: 0:06:00  time: 0.7510  data_time: 0.7259  memory: 799  
2024/05/03 17:54:34 - mmengine - INFO - Epoch(val)  [6][150/552]    eta: 0:04:24  time: 0.3766  data_time: 0.3526  memory: 799  
2024/05/03 17:54:54 - mmengine - INFO - Epoch(val)  [6][200/552]    eta: 0:03:27  time: 0.3904  data_time: 0.3661  memory: 787  
2024/05/03 17:55:12 - mmengine - INFO - Epoch(val)  [6][250/552]    eta: 0:02:45  time: 0.3741  data_time: 0.3491  memory: 787  
2024/05/03 17:55:30 - mmengine - INFO - Epoch(val)  [6][300/552]    eta: 0:02:10  time: 0.3624  data_time: 0.3378  memory: 787  
2024/05/03 17:55:48 - mmengine - INFO - Epoch(val)  [6][350/552]    eta: 0:01:39  time: 0.3611  data_time: 0.3359  memory: 787  
2024/05/03 17:56:06 - mmengine - INFO - Epoch(val)  [6][400/552]    eta: 0:01:12  time: 0.3487  data_time: 0.3244  memory: 783  
2024/05/03 17:56:22 - mmengine - INFO - Epoch(val)  [6][450/552]    eta: 0:00:46  time: 0.3242  data_time: 0.2997  memory: 783  
2024/05/03 17:56:38 - mmengine - INFO - Epoch(val)  [6][500/552]    eta: 0:00:23  time: 0.3183  data_time: 0.2936  memory: 783  
2024/05/03 17:56:56 - mmengine - INFO - Epoch(val)  [6][550/552]    eta: 0:00:00  time: 0.3624  data_time: 0.3377  memory: 783  
2024/05/03 17:57:08 - mmengine - INFO - Evaluating bbox...
2024/05/03 17:57:14 - mmengine - INFO - bbox_mAP_copypaste: 0.127 0.208 0.144 -1.000 -1.000 0.127
2024/05/03 17:57:14 - mmengine - INFO - Epoch(val) [6][552/552]    coco/bbox_mAP: 0.1270  coco/bbox_mAP_50: 0.2080  coco/bbox_mAP_75: 0.1440  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.1270  data_time: 0.4108  time: 0.4355
2024/05/03 17:57:14 - mmengine - INFO - The previous best checkpoint /media/iris/Dong/openmmlab/detection/coding/yolov6/yolov6_m_syncbn_fast_8xb32-300e_coco/best_coco_bbox_mAP_epoch_5.pth is removed
2024/05/03 17:57:16 - mmengine - INFO - The best checkpoint with 0.1270 coco/bbox_mAP at 6 epoch is saved to best_coco_bbox_mAP_epoch_6.pth.
2024/05/03 18:20:10 - mmengine - INFO - Epoch(train)  [7][ 50/184]  base_lr: 1.0000e-02 lr: 9.5362e-03  eta: 1 day, 11:28:14  time: 27.4107  data_time: 12.1591  memory: 7997  loss: 3.3917  loss_cls: 2.1654  loss_bbox: 1.2264
2024/05/03 18:39:13 - mmengine - INFO - Epoch(train)  [7][100/184]  base_lr: 1.0000e-02 lr: 9.5362e-03  eta: 1 day, 11:07:01  time: 22.8724  data_time: 0.7850  memory: 7972  loss: 3.2828  loss_cls: 2.0980  loss_bbox: 1.1848
2024/05/03 18:56:49 - mmengine - INFO - Epoch(train)  [7][150/184]  base_lr: 1.0000e-02 lr: 9.5362e-03  eta: 1 day, 10:39:40  time: 21.1092  data_time: 0.0008  memory: 7997  loss: 3.2498  loss_cls: 2.1054  loss_bbox: 1.1444
2024/05/03 19:06:23 - mmengine - INFO - Exp name: yolov6_m_syncbn_fast_8xb32-300e_coco_20240503_102402
2024/05/03 19:06:23 - mmengine - INFO - Saving checkpoint at 7 epochs
2024/05/03 19:07:13 - mmengine - INFO - Epoch(val)  [7][ 50/552]    eta: 0:07:05  time: 0.8485  data_time: 0.8230  memory: 8009  
2024/05/03 19:07:53 - mmengine - INFO - Epoch(val)  [7][100/552]    eta: 0:06:13  time: 0.8049  data_time: 0.7801  memory: 799  
2024/05/03 19:08:13 - mmengine - INFO - Epoch(val)  [7][150/552]    eta: 0:04:33  time: 0.3912  data_time: 0.3668  memory: 799  
2024/05/03 19:08:32 - mmengine - INFO - Epoch(val)  [7][200/552]    eta: 0:03:33  time: 0.3780  data_time: 0.3536  memory: 787  
2024/05/03 19:08:50 - mmengine - INFO - Epoch(val)  [7][250/552]    eta: 0:02:48  time: 0.3697  data_time: 0.3443  memory: 787  
2024/05/03 19:09:08 - mmengine - INFO - Epoch(val)  [7][300/552]    eta: 0:02:12  time: 0.3521  data_time: 0.3275  memory: 787  
2024/05/03 19:09:26 - mmengine - INFO - Epoch(val)  [7][350/552]    eta: 0:01:41  time: 0.3574  data_time: 0.3324  memory: 787  
2024/05/03 19:09:43 - mmengine - INFO - Epoch(val)  [7][400/552]    eta: 0:01:12  time: 0.3322  data_time: 0.3078  memory: 783  
2024/05/03 19:09:59 - mmengine - INFO - Epoch(val)  [7][450/552]    eta: 0:00:47  time: 0.3370  data_time: 0.3126  memory: 783  
2024/05/03 19:10:17 - mmengine - INFO - Epoch(val)  [7][500/552]    eta: 0:00:23  time: 0.3504  data_time: 0.3268  memory: 783  
2024/05/03 19:10:34 - mmengine - INFO - Epoch(val)  [7][550/552]    eta: 0:00:00  time: 0.3419  data_time: 0.3180  memory: 783  
2024/05/03 19:10:44 - mmengine - INFO - Evaluating bbox...
2024/05/03 19:10:50 - mmengine - INFO - bbox_mAP_copypaste: 0.234 0.389 0.266 -1.000 -1.000 0.234
2024/05/03 19:10:50 - mmengine - INFO - Epoch(val) [7][552/552]    coco/bbox_mAP: 0.2340  coco/bbox_mAP_50: 0.3890  coco/bbox_mAP_75: 0.2660  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.2340  data_time: 0.4162  time: 0.4408
2024/05/03 19:10:50 - mmengine - INFO - The previous best checkpoint /media/iris/Dong/openmmlab/detection/coding/yolov6/yolov6_m_syncbn_fast_8xb32-300e_coco/best_coco_bbox_mAP_epoch_6.pth is removed
2024/05/03 19:10:52 - mmengine - INFO - The best checkpoint with 0.2340 coco/bbox_mAP at 7 epoch is saved to best_coco_bbox_mAP_epoch_7.pth.
2024/05/03 19:32:45 - mmengine - INFO - Epoch(train)  [8][ 50/184]  base_lr: 1.0000e-02 lr: 9.3368e-03  eta: 1 day, 10:02:43  time: 26.2011  data_time: 25.2531  memory: 8009  loss: 3.1560  loss_cls: 2.0676  loss_bbox: 1.0884
2024/05/03 19:52:18 - mmengine - INFO - Epoch(train)  [8][100/184]  base_lr: 1.0000e-02 lr: 9.3368e-03  eta: 1 day, 9:44:13  time: 23.4511  data_time: 23.0405  memory: 7997  loss: 3.2177  loss_cls: 2.1018  loss_bbox: 1.1159
2024/05/03 20:10:39 - mmengine - INFO - Epoch(train)  [8][150/184]  base_lr: 1.0000e-02 lr: 9.3368e-03  eta: 1 day, 9:21:22  time: 22.0210  data_time: 16.5986  memory: 7997  loss: 3.1358  loss_cls: 2.0880  loss_bbox: 1.0478
2024/05/03 20:20:36 - mmengine - INFO - Exp name: yolov6_m_syncbn_fast_8xb32-300e_coco_20240503_102402
2024/05/03 20:20:36 - mmengine - INFO - Saving checkpoint at 8 epochs
2024/05/03 20:21:27 - mmengine - INFO - Epoch(val)  [8][ 50/552]    eta: 0:07:12  time: 0.8622  data_time: 0.8367  memory: 7985  
2024/05/03 20:22:05 - mmengine - INFO - Epoch(val)  [8][100/552]    eta: 0:06:07  time: 0.7655  data_time: 0.7411  memory: 799  
2024/05/03 20:22:23 - mmengine - INFO - Epoch(val)  [8][150/552]    eta: 0:04:26  time: 0.3627  data_time: 0.3384  memory: 799  
2024/05/03 20:22:42 - mmengine - INFO - Epoch(val)  [8][200/552]    eta: 0:03:27  time: 0.3724  data_time: 0.3475  memory: 787  
2024/05/03 20:23:01 - mmengine - INFO - Epoch(val)  [8][250/552]    eta: 0:02:45  time: 0.3815  data_time: 0.3572  memory: 787  
2024/05/03 20:23:18 - mmengine - INFO - Epoch(val)  [8][300/552]    eta: 0:02:09  time: 0.3471  data_time: 0.3226  memory: 787  
2024/05/03 20:23:36 - mmengine - INFO - Epoch(val)  [8][350/552]    eta: 0:01:39  time: 0.3623  data_time: 0.3376  memory: 787  
2024/05/03 20:23:52 - mmengine - INFO - Epoch(val)  [8][400/552]    eta: 0:01:11  time: 0.3250  data_time: 0.3012  memory: 783  
2024/05/03 20:24:09 - mmengine - INFO - Epoch(val)  [8][450/552]    eta: 0:00:46  time: 0.3355  data_time: 0.3117  memory: 783  
2024/05/03 20:24:26 - mmengine - INFO - Epoch(val)  [8][500/552]    eta: 0:00:23  time: 0.3402  data_time: 0.3163  memory: 783  
2024/05/03 20:24:44 - mmengine - INFO - Epoch(val)  [8][550/552]    eta: 0:00:00  time: 0.3580  data_time: 0.3334  memory: 783  
2024/05/03 20:24:55 - mmengine - INFO - Evaluating bbox...
2024/05/03 20:25:00 - mmengine - INFO - bbox_mAP_copypaste: 0.273 0.413 0.306 -1.000 -1.000 0.273
2024/05/03 20:25:00 - mmengine - INFO - Epoch(val) [8][552/552]    coco/bbox_mAP: 0.2730  coco/bbox_mAP_50: 0.4130  coco/bbox_mAP_75: 0.3060  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.2730  data_time: 0.4124  time: 0.4368
2024/05/03 20:25:01 - mmengine - INFO - The previous best checkpoint /media/iris/Dong/openmmlab/detection/coding/yolov6/yolov6_m_syncbn_fast_8xb32-300e_coco/best_coco_bbox_mAP_epoch_7.pth is removed
2024/05/03 20:25:03 - mmengine - INFO - The best checkpoint with 0.2730 coco/bbox_mAP at 8 epoch is saved to best_coco_bbox_mAP_epoch_8.pth.
2024/05/03 20:48:17 - mmengine - INFO - Epoch(train)  [9][ 50/184]  base_lr: 1.0000e-02 lr: 9.1048e-03  eta: 1 day, 8:51:24  time: 27.8323  data_time: 17.6895  memory: 7972  loss: 3.1304  loss_cls: 2.0869  loss_bbox: 1.0435
2024/05/03 21:05:09 - mmengine - INFO - Epoch(train)  [9][100/184]  base_lr: 1.0000e-02 lr: 9.1048e-03  eta: 1 day, 8:24:11  time: 20.2360  data_time: 13.4835  memory: 7985  loss: 3.0654  loss_cls: 2.0532  loss_bbox: 1.0121
2024/05/03 21:23:22 - mmengine - INFO - Epoch(train)  [9][150/184]  base_lr: 1.0000e-02 lr: 9.1048e-03  eta: 1 day, 8:01:47  time: 21.8628  data_time: 19.7706  memory: 7985  loss: 3.0673  loss_cls: 2.0581  loss_bbox: 1.0092
2024/05/03 21:34:11 - mmengine - INFO - Exp name: yolov6_m_syncbn_fast_8xb32-300e_coco_20240503_102402
2024/05/03 21:34:11 - mmengine - INFO - Saving checkpoint at 9 epochs
2024/05/03 21:35:02 - mmengine - INFO - Epoch(val)  [9][ 50/552]    eta: 0:07:12  time: 0.8606  data_time: 0.8351  memory: 8009  
2024/05/03 21:35:41 - mmengine - INFO - Epoch(val)  [9][100/552]    eta: 0:06:12  time: 0.7891  data_time: 0.7643  memory: 799  
2024/05/03 21:36:00 - mmengine - INFO - Epoch(val)  [9][150/552]    eta: 0:04:32  time: 0.3804  data_time: 0.3554  memory: 799  
2024/05/03 21:36:19 - mmengine - INFO - Epoch(val)  [9][200/552]    eta: 0:03:31  time: 0.3768  data_time: 0.3517  memory: 787  
2024/05/03 21:36:39 - mmengine - INFO - Epoch(val)  [9][250/552]    eta: 0:02:49  time: 0.3928  data_time: 0.3687  memory: 787  
2024/05/03 21:36:57 - mmengine - INFO - Epoch(val)  [9][300/552]    eta: 0:02:12  time: 0.3561  data_time: 0.3313  memory: 787  
2024/05/03 21:37:15 - mmengine - INFO - Epoch(val)  [9][350/552]    eta: 0:01:41  time: 0.3693  data_time: 0.3458  memory: 787  
2024/05/03 21:37:32 - mmengine - INFO - Epoch(val)  [9][400/552]    eta: 0:01:13  time: 0.3443  data_time: 0.3208  memory: 783  
2024/05/03 21:37:48 - mmengine - INFO - Epoch(val)  [9][450/552]    eta: 0:00:47  time: 0.3117  data_time: 0.2880  memory: 783  
2024/05/03 21:38:05 - mmengine - INFO - Epoch(val)  [9][500/552]    eta: 0:00:23  time: 0.3402  data_time: 0.3159  memory: 783  
2024/05/03 21:38:21 - mmengine - INFO - Epoch(val)  [9][550/552]    eta: 0:00:00  time: 0.3279  data_time: 0.3027  memory: 783  
2024/05/03 21:38:33 - mmengine - INFO - Evaluating bbox...
2024/05/03 21:38:38 - mmengine - INFO - bbox_mAP_copypaste: 0.351 0.493 0.402 -1.000 -1.000 0.351
2024/05/03 21:38:38 - mmengine - INFO - Epoch(val) [9][552/552]    coco/bbox_mAP: 0.3510  coco/bbox_mAP_50: 0.4930  coco/bbox_mAP_75: 0.4020  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.3510  data_time: 0.4164  time: 0.4409
2024/05/03 21:38:38 - mmengine - INFO - The previous best checkpoint /media/iris/Dong/openmmlab/detection/coding/yolov6/yolov6_m_syncbn_fast_8xb32-300e_coco/best_coco_bbox_mAP_epoch_8.pth is removed
2024/05/03 21:38:40 - mmengine - INFO - The best checkpoint with 0.3510 coco/bbox_mAP at 9 epoch is saved to best_coco_bbox_mAP_epoch_9.pth.
2024/05/03 22:01:23 - mmengine - INFO - Epoch(train) [10][ 50/184]  base_lr: 1.0000e-02 lr: 8.8419e-03  eta: 1 day, 7:32:58  time: 27.1948  data_time: 13.4041  memory: 8021  loss: 3.0809  loss_cls: 2.0737  loss_bbox: 1.0071
2024/05/03 22:20:16 - mmengine - INFO - Epoch(train) [10][100/184]  base_lr: 1.0000e-02 lr: 8.8419e-03  eta: 1 day, 7:12:41  time: 22.6470  data_time: 12.3427  memory: 7985  loss: 3.0452  loss_cls: 2.0585  loss_bbox: 0.9867
2024/05/03 22:37:06 - mmengine - INFO - Epoch(train) [10][150/184]  base_lr: 1.0000e-02 lr: 8.8419e-03  eta: 1 day, 6:47:03  time: 20.2061  data_time: 10.3727  memory: 7997  loss: 3.0005  loss_cls: 2.0302  loss_bbox: 0.9703
2024/05/03 22:47:55 - mmengine - INFO - Exp name: yolov6_m_syncbn_fast_8xb32-300e_coco_20240503_102402
2024/05/03 22:47:55 - mmengine - INFO - Saving checkpoint at 10 epochs
2024/05/03 22:48:46 - mmengine - INFO - Epoch(val) [10][ 50/552]    eta: 0:07:11  time: 0.8603  data_time: 0.8354  memory: 7972  
2024/05/03 22:49:23 - mmengine - INFO - Epoch(val) [10][100/552]    eta: 0:06:04  time: 0.7513  data_time: 0.7273  memory: 799  
2024/05/03 22:49:41 - mmengine - INFO - Epoch(val) [10][150/552]    eta: 0:04:23  time: 0.3570  data_time: 0.3330  memory: 799  
2024/05/03 22:50:00 - mmengine - INFO - Epoch(val) [10][200/552]    eta: 0:03:25  time: 0.3668  data_time: 0.3429  memory: 787  
2024/05/03 22:50:18 - mmengine - INFO - Epoch(val) [10][250/552]    eta: 0:02:43  time: 0.3762  data_time: 0.3514  memory: 787  
2024/05/03 22:50:36 - mmengine - INFO - Epoch(val) [10][300/552]    eta: 0:02:08  time: 0.3501  data_time: 0.3253  memory: 787  
2024/05/03 22:50:54 - mmengine - INFO - Epoch(val) [10][350/552]    eta: 0:01:38  time: 0.3643  data_time: 0.3396  memory: 787  
2024/05/03 22:51:11 - mmengine - INFO - Epoch(val) [10][400/552]    eta: 0:01:11  time: 0.3395  data_time: 0.3161  memory: 783  
2024/05/03 22:51:28 - mmengine - INFO - Epoch(val) [10][450/552]    eta: 0:00:46  time: 0.3444  data_time: 0.3201  memory: 783  
2024/05/03 22:51:46 - mmengine - INFO - Epoch(val) [10][500/552]    eta: 0:00:23  time: 0.3582  data_time: 0.3339  memory: 783  
2024/05/03 22:52:04 - mmengine - INFO - Epoch(val) [10][550/552]    eta: 0:00:00  time: 0.3607  data_time: 0.3374  memory: 783  
2024/05/03 22:52:14 - mmengine - INFO - Evaluating bbox...
2024/05/03 22:52:20 - mmengine - INFO - bbox_mAP_copypaste: 0.276 0.410 0.321 -1.000 -1.000 0.276
2024/05/03 22:52:20 - mmengine - INFO - Epoch(val) [10][552/552]    coco/bbox_mAP: 0.2760  coco/bbox_mAP_50: 0.4100  coco/bbox_mAP_75: 0.3210  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.2760  data_time: 0.4133  time: 0.4375
2024/05/03 23:14:10 - mmengine - INFO - Epoch(train) [11][ 50/184]  base_lr: 1.0000e-02 lr: 8.5502e-03  eta: 1 day, 6:15:56  time: 26.1917  data_time: 21.5231  memory: 7972  loss: 2.9856  loss_cls: 2.0382  loss_bbox: 0.9474
2024/05/03 23:32:51 - mmengine - INFO - Epoch(train) [11][100/184]  base_lr: 1.0000e-02 lr: 8.5502e-03  eta: 1 day, 5:55:33  time: 22.4173  data_time: 17.6936  memory: 7972  loss: 2.9609  loss_cls: 2.0033  loss_bbox: 0.9576
2024/05/03 23:52:13 - mmengine - INFO - Epoch(train) [11][150/184]  base_lr: 1.0000e-02 lr: 8.5502e-03  eta: 1 day, 5:36:51  time: 23.2383  data_time: 18.1067  memory: 7997  loss: 2.9898  loss_cls: 2.0329  loss_bbox: 0.9569
2024/05/03 23:55:21 - mmengine - INFO - Exp name: yolov6_m_syncbn_fast_8xb32-300e_coco_20240503_102402
2024/05/04 00:01:21 - mmengine - INFO - Exp name: yolov6_m_syncbn_fast_8xb32-300e_coco_20240503_102402
2024/05/04 00:01:21 - mmengine - INFO - Saving checkpoint at 11 epochs
2024/05/04 00:02:11 - mmengine - INFO - Epoch(val) [11][ 50/552]    eta: 0:07:15  time: 0.8666  data_time: 0.8413  memory: 7972  
2024/05/04 00:02:51 - mmengine - INFO - Epoch(val) [11][100/552]    eta: 0:06:18  time: 0.8083  data_time: 0.7824  memory: 799  
2024/05/04 00:03:10 - mmengine - INFO - Epoch(val) [11][150/552]    eta: 0:04:35  time: 0.3800  data_time: 0.3554  memory: 799  
2024/05/04 00:03:29 - mmengine - INFO - Epoch(val) [11][200/552]    eta: 0:03:33  time: 0.3753  data_time: 0.3506  memory: 787  
2024/05/04 00:03:47 - mmengine - INFO - Epoch(val) [11][250/552]    eta: 0:02:48  time: 0.3621  data_time: 0.3366  memory: 787  
2024/05/04 00:04:05 - mmengine - INFO - Epoch(val) [11][300/552]    eta: 0:02:12  time: 0.3680  data_time: 0.3424  memory: 787  
2024/05/04 00:04:23 - mmengine - INFO - Epoch(val) [11][350/552]    eta: 0:01:41  time: 0.3540  data_time: 0.3295  memory: 787  
2024/05/04 00:04:40 - mmengine - INFO - Epoch(val) [11][400/552]    eta: 0:01:13  time: 0.3314  data_time: 0.3076  memory: 783  
2024/05/04 00:04:56 - mmengine - INFO - Epoch(val) [11][450/552]    eta: 0:00:47  time: 0.3370  data_time: 0.3134  memory: 783  
2024/05/04 00:05:13 - mmengine - INFO - Epoch(val) [11][500/552]    eta: 0:00:23  time: 0.3372  data_time: 0.3129  memory: 783  
2024/05/04 00:05:32 - mmengine - INFO - Epoch(val) [11][550/552]    eta: 0:00:00  time: 0.3643  data_time: 0.3400  memory: 783  
2024/05/04 00:05:45 - mmengine - INFO - Evaluating bbox...
2024/05/04 00:05:50 - mmengine - INFO - bbox_mAP_copypaste: 0.257 0.388 0.296 -1.000 -1.000 0.257
2024/05/04 00:05:50 - mmengine - INFO - Epoch(val) [11][552/552]    coco/bbox_mAP: 0.2570  coco/bbox_mAP_50: 0.3880  coco/bbox_mAP_75: 0.2960  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.2570  data_time: 0.4183  time: 0.4431
2024/05/04 00:28:01 - mmengine - INFO - Epoch(train) [12][ 50/184]  base_lr: 1.0000e-02 lr: 8.2318e-03  eta: 1 day, 5:02:42  time: 26.6235  data_time: 22.5885  memory: 8009  loss: 2.9440  loss_cls: 2.0131  loss_bbox: 0.9309
2024/05/04 00:46:22 - mmengine - INFO - Epoch(train) [12][100/184]  base_lr: 1.0000e-02 lr: 8.2318e-03  eta: 1 day, 4:41:51  time: 22.0175  data_time: 10.1864  memory: 7985  loss: 2.9448  loss_cls: 2.0253  loss_bbox: 0.9194
2024/05/04 01:05:37 - mmengine - INFO - Epoch(train) [12][150/184]  base_lr: 1.0000e-02 lr: 8.2318e-03  eta: 1 day, 4:22:57  time: 23.0957  data_time: 15.6443  memory: 8034  loss: 2.9193  loss_cls: 2.0093  loss_bbox: 0.9101
2024/05/04 01:15:24 - mmengine - INFO - Exp name: yolov6_m_syncbn_fast_8xb32-300e_coco_20240503_102402
2024/05/04 01:15:24 - mmengine - INFO - Saving checkpoint at 12 epochs
2024/05/04 01:16:16 - mmengine - INFO - Epoch(val) [12][ 50/552]    eta: 0:07:09  time: 0.8551  data_time: 0.8311  memory: 7972  
2024/05/04 01:16:55 - mmengine - INFO - Epoch(val) [12][100/552]    eta: 0:06:12  time: 0.7922  data_time: 0.7669  memory: 799  
2024/05/04 01:17:14 - mmengine - INFO - Epoch(val) [12][150/552]    eta: 0:04:31  time: 0.3769  data_time: 0.3523  memory: 799  
2024/05/04 01:17:32 - mmengine - INFO - Epoch(val) [12][200/552]    eta: 0:03:30  time: 0.3656  data_time: 0.3406  memory: 787  
2024/05/04 01:17:51 - mmengine - INFO - Epoch(val) [12][250/552]    eta: 0:02:47  time: 0.3801  data_time: 0.3559  memory: 787  
2024/05/04 01:18:10 - mmengine - INFO - Epoch(val) [12][300/552]    eta: 0:02:11  time: 0.3654  data_time: 0.3404  memory: 787  
2024/05/04 01:18:28 - mmengine - INFO - Epoch(val) [12][350/552]    eta: 0:01:41  time: 0.3715  data_time: 0.3476  memory: 787  
2024/05/04 01:18:45 - mmengine - INFO - Epoch(val) [12][400/552]    eta: 0:01:12  time: 0.3313  data_time: 0.3068  memory: 783  
2024/05/04 01:19:02 - mmengine - INFO - Epoch(val) [12][450/552]    eta: 0:00:47  time: 0.3503  data_time: 0.3265  memory: 783  
2024/05/04 01:19:20 - mmengine - INFO - Epoch(val) [12][500/552]    eta: 0:00:23  time: 0.3474  data_time: 0.3235  memory: 783  
2024/05/04 01:19:36 - mmengine - INFO - Epoch(val) [12][550/552]    eta: 0:00:00  time: 0.3281  data_time: 0.3040  memory: 783  
2024/05/04 01:19:46 - mmengine - INFO - Evaluating bbox...
2024/05/04 01:19:52 - mmengine - INFO - bbox_mAP_copypaste: 0.381 0.520 0.442 -1.000 -1.000 0.381
2024/05/04 01:19:52 - mmengine - INFO - Epoch(val) [12][552/552]    coco/bbox_mAP: 0.3810  coco/bbox_mAP_50: 0.5200  coco/bbox_mAP_75: 0.4420  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.3810  data_time: 0.4169  time: 0.4413
2024/05/04 01:19:52 - mmengine - INFO - The previous best checkpoint /media/iris/Dong/openmmlab/detection/coding/yolov6/yolov6_m_syncbn_fast_8xb32-300e_coco/best_coco_bbox_mAP_epoch_9.pth is removed
2024/05/04 01:19:54 - mmengine - INFO - The best checkpoint with 0.3810 coco/bbox_mAP at 12 epoch is saved to best_coco_bbox_mAP_epoch_12.pth.
2024/05/04 01:41:38 - mmengine - INFO - Epoch(train) [13][ 50/184]  base_lr: 1.0000e-02 lr: 7.8892e-03  eta: 1 day, 3:49:30  time: 26.0147  data_time: 22.6245  memory: 7997  loss: 2.9040  loss_cls: 2.0096  loss_bbox: 0.8944
2024/05/04 02:01:20 - mmengine - INFO - Epoch(train) [13][100/184]  base_lr: 1.0000e-02 lr: 7.8892e-03  eta: 1 day, 3:31:28  time: 23.6443  data_time: 11.9445  memory: 8021  loss: 2.8935  loss_cls: 1.9909  loss_bbox: 0.9026
2024/05/04 02:19:13 - mmengine - INFO - Epoch(train) [13][150/184]  base_lr: 1.0000e-02 lr: 7.8892e-03  eta: 1 day, 3:10:04  time: 21.4544  data_time: 0.5835  memory: 7985  loss: 2.8562  loss_cls: 1.9832  loss_bbox: 0.8731
2024/05/04 02:28:51 - mmengine - INFO - Exp name: yolov6_m_syncbn_fast_8xb32-300e_coco_20240503_102402
2024/05/04 02:28:51 - mmengine - INFO - Saving checkpoint at 13 epochs
2024/05/04 02:29:42 - mmengine - INFO - Epoch(val) [13][ 50/552]    eta: 0:07:13  time: 0.8634  data_time: 0.8384  memory: 7997  
2024/05/04 02:30:20 - mmengine - INFO - Epoch(val) [13][100/552]    eta: 0:06:05  time: 0.7548  data_time: 0.7293  memory: 799  
2024/05/04 02:30:39 - mmengine - INFO - Epoch(val) [13][150/552]    eta: 0:04:27  time: 0.3795  data_time: 0.3558  memory: 799  
2024/05/04 02:30:58 - mmengine - INFO - Epoch(val) [13][200/552]    eta: 0:03:28  time: 0.3764  data_time: 0.3522  memory: 787  
2024/05/04 02:31:17 - mmengine - INFO - Epoch(val) [13][250/552]    eta: 0:02:46  time: 0.3844  data_time: 0.3596  memory: 787  
2024/05/04 02:31:35 - mmengine - INFO - Epoch(val) [13][300/552]    eta: 0:02:10  time: 0.3604  data_time: 0.3362  memory: 787  
2024/05/04 02:31:53 - mmengine - INFO - Epoch(val) [13][350/552]    eta: 0:01:40  time: 0.3637  data_time: 0.3391  memory: 787  
2024/05/04 02:32:10 - mmengine - INFO - Epoch(val) [13][400/552]    eta: 0:01:12  time: 0.3355  data_time: 0.3115  memory: 783  
2024/05/04 02:32:27 - mmengine - INFO - Epoch(val) [13][450/552]    eta: 0:00:47  time: 0.3399  data_time: 0.3161  memory: 783  
2024/05/04 02:32:44 - mmengine - INFO - Epoch(val) [13][500/552]    eta: 0:00:23  time: 0.3367  data_time: 0.3124  memory: 783  
2024/05/04 02:33:01 - mmengine - INFO - Epoch(val) [13][550/552]    eta: 0:00:00  time: 0.3442  data_time: 0.3193  memory: 783  
2024/05/04 02:33:14 - mmengine - INFO - Evaluating bbox...
2024/05/04 02:33:20 - mmengine - INFO - bbox_mAP_copypaste: 0.319 0.450 0.367 -1.000 -1.000 0.319
2024/05/04 02:33:20 - mmengine - INFO - Epoch(val) [13][552/552]    coco/bbox_mAP: 0.3190  coco/bbox_mAP_50: 0.4500  coco/bbox_mAP_75: 0.3670  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.3190  data_time: 0.4152  time: 0.4396
2024/05/04 02:55:44 - mmengine - INFO - Epoch(train) [14][ 50/184]  base_lr: 1.0000e-02 lr: 7.5250e-03  eta: 1 day, 2:37:51  time: 26.8795  data_time: 23.6665  memory: 8034  loss: 2.8478  loss_cls: 1.9987  loss_bbox: 0.8491
2024/05/04 03:14:46 - mmengine - INFO - Epoch(train) [14][100/184]  base_lr: 1.0000e-02 lr: 7.5250e-03  eta: 1 day, 2:18:38  time: 22.8402  data_time: 14.7041  memory: 7985  loss: 2.8466  loss_cls: 1.9859  loss_bbox: 0.8607
2024/05/04 03:33:41 - mmengine - INFO - Epoch(train) [14][150/184]  base_lr: 1.0000e-02 lr: 7.5250e-03  eta: 1 day, 1:59:14  time: 22.6960  data_time: 10.4580  memory: 7972  loss: 2.8538  loss_cls: 1.9955  loss_bbox: 0.8583
2024/05/04 03:42:15 - mmengine - INFO - Exp name: yolov6_m_syncbn_fast_8xb32-300e_coco_20240503_102402
2024/05/04 03:42:15 - mmengine - INFO - Saving checkpoint at 14 epochs
2024/05/04 03:43:06 - mmengine - INFO - Epoch(val) [14][ 50/552]    eta: 0:07:15  time: 0.8677  data_time: 0.8424  memory: 7960  
2024/05/04 03:43:43 - mmengine - INFO - Epoch(val) [14][100/552]    eta: 0:06:06  time: 0.7550  data_time: 0.7311  memory: 799  
2024/05/04 03:44:03 - mmengine - INFO - Epoch(val) [14][150/552]    eta: 0:04:29  time: 0.3877  data_time: 0.3633  memory: 799  
2024/05/04 03:44:22 - mmengine - INFO - Epoch(val) [14][200/552]    eta: 0:03:29  time: 0.3749  data_time: 0.3495  memory: 787  
2024/05/04 03:44:41 - mmengine - INFO - Epoch(val) [14][250/552]    eta: 0:02:47  time: 0.3931  data_time: 0.3689  memory: 787  
2024/05/04 03:44:59 - mmengine - INFO - Epoch(val) [14][300/552]    eta: 0:02:11  time: 0.3493  data_time: 0.3253  memory: 787  
2024/05/04 03:45:16 - mmengine - INFO - Epoch(val) [14][350/552]    eta: 0:01:40  time: 0.3521  data_time: 0.3279  memory: 787  
2024/05/04 03:45:32 - mmengine - INFO - Epoch(val) [14][400/552]    eta: 0:01:11  time: 0.3083  data_time: 0.2842  memory: 783  
2024/05/04 03:45:50 - mmengine - INFO - Epoch(val) [14][450/552]    eta: 0:00:47  time: 0.3624  data_time: 0.3383  memory: 783  
2024/05/04 03:46:06 - mmengine - INFO - Epoch(val) [14][500/552]    eta: 0:00:23  time: 0.3303  data_time: 0.3062  memory: 783  
2024/05/04 03:46:25 - mmengine - INFO - Epoch(val) [14][550/552]    eta: 0:00:00  time: 0.3659  data_time: 0.3428  memory: 783  
2024/05/04 03:46:36 - mmengine - INFO - Evaluating bbox...
2024/05/04 03:46:42 - mmengine - INFO - bbox_mAP_copypaste: 0.315 0.426 0.363 -1.000 -1.000 0.315
2024/05/04 03:46:42 - mmengine - INFO - Epoch(val) [14][552/552]    coco/bbox_mAP: 0.3150  coco/bbox_mAP_50: 0.4260  coco/bbox_mAP_75: 0.3630  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.3150  data_time: 0.4150  time: 0.4393
2024/05/04 04:09:00 - mmengine - INFO - Epoch(train) [15][ 50/184]  base_lr: 1.0000e-02 lr: 7.1420e-03  eta: 1 day, 1:25:16  time: 26.7502  data_time: 24.1556  memory: 8009  loss: 2.7951  loss_cls: 1.9397  loss_bbox: 0.8554
2024/05/04 04:26:42 - mmengine - INFO - Epoch(train) [15][100/184]  base_lr: 1.0000e-02 lr: 7.1420e-03  eta: 1 day, 1:04:09  time: 21.2375  data_time: 10.1913  memory: 7960  loss: 2.7971  loss_cls: 1.9601  loss_bbox: 0.8370
2024/05/04 04:46:33 - mmengine - INFO - Epoch(train) [15][150/184]  base_lr: 1.0000e-02 lr: 7.1420e-03  eta: 1 day, 0:46:15  time: 23.8231  data_time: 9.4615  memory: 7985  loss: 2.7760  loss_cls: 1.9519  loss_bbox: 0.8241
2024/05/04 04:56:45 - mmengine - INFO - Exp name: yolov6_m_syncbn_fast_8xb32-300e_coco_20240503_102402
2024/05/04 04:56:45 - mmengine - INFO - Saving checkpoint at 15 epochs
2024/05/04 04:57:36 - mmengine - INFO - Epoch(val) [15][ 50/552]    eta: 0:07:29  time: 0.8954  data_time: 0.8707  memory: 7997  
2024/05/04 04:58:16 - mmengine - INFO - Epoch(val) [15][100/552]    eta: 0:06:20  time: 0.7871  data_time: 0.7629  memory: 799  
2024/05/04 04:58:35 - mmengine - INFO - Epoch(val) [15][150/552]    eta: 0:04:37  time: 0.3889  data_time: 0.3652  memory: 799  
2024/05/04 04:58:55 - mmengine - INFO - Epoch(val) [15][200/552]    eta: 0:03:37  time: 0.3989  data_time: 0.3748  memory: 787  
2024/05/04 04:59:14 - mmengine - INFO - Epoch(val) [15][250/552]    eta: 0:02:51  time: 0.3712  data_time: 0.3459  memory: 787  
2024/05/04 04:59:31 - mmengine - INFO - Epoch(val) [15][300/552]    eta: 0:02:13  time: 0.3467  data_time: 0.3222  memory: 787  
2024/05/04 04:59:50 - mmengine - INFO - Epoch(val) [15][350/552]    eta: 0:01:42  time: 0.3761  data_time: 0.3525  memory: 787  
2024/05/04 05:00:07 - mmengine - INFO - Epoch(val) [15][400/552]    eta: 0:01:14  time: 0.3478  data_time: 0.3236  memory: 783  
2024/05/04 05:00:23 - mmengine - INFO - Epoch(val) [15][450/552]    eta: 0:00:47  time: 0.3150  data_time: 0.2904  memory: 783  
2024/05/04 05:00:41 - mmengine - INFO - Epoch(val) [15][500/552]    eta: 0:00:23  time: 0.3575  data_time: 0.3338  memory: 783  
2024/05/04 05:00:59 - mmengine - INFO - Epoch(val) [15][550/552]    eta: 0:00:00  time: 0.3530  data_time: 0.3299  memory: 783  
2024/05/04 05:01:10 - mmengine - INFO - Evaluating bbox...
2024/05/04 05:01:16 - mmengine - INFO - bbox_mAP_copypaste: 0.399 0.537 0.452 -1.000 -1.000 0.399
2024/05/04 05:01:16 - mmengine - INFO - Epoch(val) [15][552/552]    coco/bbox_mAP: 0.3990  coco/bbox_mAP_50: 0.5370  coco/bbox_mAP_75: 0.4520  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.3990  data_time: 0.4241  time: 0.4483
2024/05/04 05:01:16 - mmengine - INFO - The previous best checkpoint /media/iris/Dong/openmmlab/detection/coding/yolov6/yolov6_m_syncbn_fast_8xb32-300e_coco/best_coco_bbox_mAP_epoch_12.pth is removed
2024/05/04 05:01:18 - mmengine - INFO - The best checkpoint with 0.3990 coco/bbox_mAP at 15 epoch is saved to best_coco_bbox_mAP_epoch_15.pth.
2024/05/04 05:23:40 - mmengine - INFO - Epoch(train) [16][ 50/184]  base_lr: 1.0000e-02 lr: 6.7430e-03  eta: 1 day, 0:14:52  time: 26.7539  data_time: 19.7306  memory: 7985  loss: 2.7788  loss_cls: 1.9524  loss_bbox: 0.8264
2024/05/04 05:42:45 - mmengine - INFO - Epoch(train) [16][100/184]  base_lr: 1.0000e-02 lr: 6.7430e-03  eta: 23:55:48  time: 22.9024  data_time: 12.6460  memory: 7972  loss: 2.8069  loss_cls: 1.9502  loss_bbox: 0.8568
2024/05/04 06:01:29 - mmengine - INFO - Epoch(train) [16][150/184]  base_lr: 1.0000e-02 lr: 6.7430e-03  eta: 23:36:18  time: 22.4736  data_time: 13.0630  memory: 7985  loss: 2.7455  loss_cls: 1.9277  loss_bbox: 0.8178
2024/05/04 06:11:59 - mmengine - INFO - Exp name: yolov6_m_syncbn_fast_8xb32-300e_coco_20240503_102402
2024/05/04 06:11:59 - mmengine - INFO - Saving checkpoint at 16 epochs
2024/05/04 06:12:52 - mmengine - INFO - Epoch(val) [16][ 50/552]    eta: 0:07:25  time: 0.8880  data_time: 0.8634  memory: 7972  
2024/05/04 06:13:30 - mmengine - INFO - Epoch(val) [16][100/552]    eta: 0:06:15  time: 0.7721  data_time: 0.7475  memory: 799  
2024/05/04 06:13:50 - mmengine - INFO - Epoch(val) [16][150/552]    eta: 0:04:35  time: 0.3968  data_time: 0.3729  memory: 799  
2024/05/04 06:14:09 - mmengine - INFO - Epoch(val) [16][200/552]    eta: 0:03:33  time: 0.3706  data_time: 0.3466  memory: 787  
2024/05/04 06:14:27 - mmengine - INFO - Epoch(val) [16][250/552]    eta: 0:02:48  time: 0.3687  data_time: 0.3439  memory: 787  
2024/05/04 06:14:44 - mmengine - INFO - Epoch(val) [16][300/552]    eta: 0:02:11  time: 0.3407  data_time: 0.3159  memory: 787  
2024/05/04 06:15:02 - mmengine - INFO - Epoch(val) [16][350/552]    eta: 0:01:40  time: 0.3619  data_time: 0.3376  memory: 787  
2024/05/04 06:15:18 - mmengine - INFO - Epoch(val) [16][400/552]    eta: 0:01:12  time: 0.3188  data_time: 0.2949  memory: 783  
2024/05/04 06:15:35 - mmengine - INFO - Epoch(val) [16][450/552]    eta: 0:00:47  time: 0.3373  data_time: 0.3132  memory: 783  
2024/05/04 06:15:53 - mmengine - INFO - Epoch(val) [16][500/552]    eta: 0:00:23  time: 0.3596  data_time: 0.3353  memory: 783  
2024/05/04 06:16:10 - mmengine - INFO - Epoch(val) [16][550/552]    eta: 0:00:00  time: 0.3431  data_time: 0.3193  memory: 783  
2024/05/04 06:16:21 - mmengine - INFO - Evaluating bbox...
2024/05/04 06:16:27 - mmengine - INFO - bbox_mAP_copypaste: 0.388 0.516 0.456 -1.000 -1.000 0.388
2024/05/04 06:16:27 - mmengine - INFO - Epoch(val) [16][552/552]    coco/bbox_mAP: 0.3880  coco/bbox_mAP_50: 0.5160  coco/bbox_mAP_75: 0.4560  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.3880  data_time: 0.4161  time: 0.4404
2024/05/04 06:38:58 - mmengine - INFO - Epoch(train) [17][ 50/184]  base_lr: 1.0000e-02 lr: 6.3312e-03  eta: 23:05:27  time: 27.0163  data_time: 22.8356  memory: 7985  loss: 2.8176  loss_cls: 1.9798  loss_bbox: 0.8379
2024/05/04 06:40:48 - mmengine - INFO - Exp name: yolov6_m_syncbn_fast_8xb32-300e_coco_20240503_102402
2024/05/04 06:58:04 - mmengine - INFO - Epoch(train) [17][100/184]  base_lr: 1.0000e-02 lr: 6.3312e-03  eta: 22:46:23  time: 22.9230  data_time: 21.2797  memory: 7985  loss: 2.7817  loss_cls: 1.9660  loss_bbox: 0.8156
2024/05/04 07:17:09 - mmengine - INFO - Epoch(train) [17][150/184]  base_lr: 1.0000e-02 lr: 6.3312e-03  eta: 22:27:18  time: 22.8943  data_time: 17.8799  memory: 7997  loss: 2.7486  loss_cls: 1.9466  loss_bbox: 0.8020
2024/05/04 07:26:41 - mmengine - INFO - Exp name: yolov6_m_syncbn_fast_8xb32-300e_coco_20240503_102402
2024/05/04 07:26:41 - mmengine - INFO - Saving checkpoint at 17 epochs
2024/05/04 07:27:33 - mmengine - INFO - Epoch(val) [17][ 50/552]    eta: 0:07:20  time: 0.8771  data_time: 0.8516  memory: 7985  
2024/05/04 07:28:10 - mmengine - INFO - Epoch(val) [17][100/552]    eta: 0:06:07  time: 0.7476  data_time: 0.7229  memory: 799  
2024/05/04 07:28:29 - mmengine - INFO - Epoch(val) [17][150/552]    eta: 0:04:27  time: 0.3748  data_time: 0.3495  memory: 799  
2024/05/04 07:28:46 - mmengine - INFO - Epoch(val) [17][200/552]    eta: 0:03:26  time: 0.3487  data_time: 0.3245  memory: 787  
2024/05/04 07:29:05 - mmengine - INFO - Epoch(val) [17][250/552]    eta: 0:02:44  time: 0.3689  data_time: 0.3436  memory: 787  
2024/05/04 07:29:21 - mmengine - INFO - Epoch(val) [17][300/552]    eta: 0:02:07  time: 0.3215  data_time: 0.2972  memory: 787  
2024/05/04 07:29:39 - mmengine - INFO - Epoch(val) [17][350/552]    eta: 0:01:38  time: 0.3641  data_time: 0.3396  memory: 787  
2024/05/04 07:29:55 - mmengine - INFO - Epoch(val) [17][400/552]    eta: 0:01:10  time: 0.3271  data_time: 0.3025  memory: 783  
2024/05/04 07:30:13 - mmengine - INFO - Epoch(val) [17][450/552]    eta: 0:00:46  time: 0.3526  data_time: 0.3289  memory: 783  
2024/05/04 07:30:30 - mmengine - INFO - Epoch(val) [17][500/552]    eta: 0:00:23  time: 0.3453  data_time: 0.3212  memory: 783  
2024/05/04 07:30:47 - mmengine - INFO - Epoch(val) [17][550/552]    eta: 0:00:00  time: 0.3323  data_time: 0.3084  memory: 783  
2024/05/04 07:31:00 - mmengine - INFO - Evaluating bbox...
2024/05/04 07:31:06 - mmengine - INFO - bbox_mAP_copypaste: 0.465 0.591 0.529 -1.000 -1.000 0.465
2024/05/04 07:31:07 - mmengine - INFO - Epoch(val) [17][552/552]    coco/bbox_mAP: 0.4650  coco/bbox_mAP_50: 0.5910  coco/bbox_mAP_75: 0.5290  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.4650  data_time: 0.4078  time: 0.4324
2024/05/04 07:31:07 - mmengine - INFO - The previous best checkpoint /media/iris/Dong/openmmlab/detection/coding/yolov6/yolov6_m_syncbn_fast_8xb32-300e_coco/best_coco_bbox_mAP_epoch_15.pth is removed
2024/05/04 07:31:09 - mmengine - INFO - The best checkpoint with 0.4650 coco/bbox_mAP at 17 epoch is saved to best_coco_bbox_mAP_epoch_17.pth.
2024/05/04 07:53:41 - mmengine - INFO - Epoch(train) [18][ 50/184]  base_lr: 1.0000e-02 lr: 5.9096e-03  eta: 21:55:11  time: 26.9701  data_time: 18.4985  memory: 8009  loss: 2.6805  loss_cls: 1.8915  loss_bbox: 0.7890
2024/05/04 08:13:38 - mmengine - INFO - Epoch(train) [18][100/184]  base_lr: 1.0000e-02 lr: 5.9096e-03  eta: 21:37:01  time: 23.9449  data_time: 17.0326  memory: 7985  loss: 2.7516  loss_cls: 1.9396  loss_bbox: 0.8120
2024/05/04 08:31:51 - mmengine - INFO - Epoch(train) [18][150/184]  base_lr: 1.0000e-02 lr: 5.9096e-03  eta: 21:17:01  time: 21.8580  data_time: 19.5897  memory: 7960  loss: 2.7219  loss_cls: 1.9229  loss_bbox: 0.7990
2024/05/04 08:42:12 - mmengine - INFO - Exp name: yolov6_m_syncbn_fast_8xb32-300e_coco_20240503_102402
2024/05/04 08:42:12 - mmengine - INFO - Saving checkpoint at 18 epochs
2024/05/04 08:43:04 - mmengine - INFO - Epoch(val) [18][ 50/552]    eta: 0:07:22  time: 0.8820  data_time: 0.8554  memory: 7997  
2024/05/04 08:43:43 - mmengine - INFO - Epoch(val) [18][100/552]    eta: 0:06:12  time: 0.7677  data_time: 0.7434  memory: 799  
2024/05/04 08:44:02 - mmengine - INFO - Epoch(val) [18][150/552]    eta: 0:04:32  time: 0.3811  data_time: 0.3564  memory: 799  
2024/05/04 08:44:21 - mmengine - INFO - Epoch(val) [18][200/552]    eta: 0:03:32  time: 0.3859  data_time: 0.3608  memory: 787  
2024/05/04 08:44:40 - mmengine - INFO - Epoch(val) [18][250/552]    eta: 0:02:48  time: 0.3758  data_time: 0.3505  memory: 787  
2024/05/04 08:44:56 - mmengine - INFO - Epoch(val) [18][300/552]    eta: 0:02:11  time: 0.3298  data_time: 0.3056  memory: 787  
2024/05/04 08:45:13 - mmengine - INFO - Epoch(val) [18][350/552]    eta: 0:01:39  time: 0.3363  data_time: 0.3119  memory: 787  
2024/05/04 08:45:29 - mmengine - INFO - Epoch(val) [18][400/552]    eta: 0:01:11  time: 0.3251  data_time: 0.3013  memory: 783  
2024/05/04 08:45:47 - mmengine - INFO - Epoch(val) [18][450/552]    eta: 0:00:46  time: 0.3424  data_time: 0.3189  memory: 783  
2024/05/04 08:46:04 - mmengine - INFO - Epoch(val) [18][500/552]    eta: 0:00:23  time: 0.3512  data_time: 0.3276  memory: 783  
2024/05/04 08:46:21 - mmengine - INFO - Epoch(val) [18][550/552]    eta: 0:00:00  time: 0.3341  data_time: 0.3096  memory: 783  
2024/05/04 08:46:32 - mmengine - INFO - Evaluating bbox...
2024/05/04 08:46:38 - mmengine - INFO - bbox_mAP_copypaste: 0.467 0.596 0.529 -1.000 -1.000 0.467
2024/05/04 08:46:38 - mmengine - INFO - Epoch(val) [18][552/552]    coco/bbox_mAP: 0.4670  coco/bbox_mAP_50: 0.5960  coco/bbox_mAP_75: 0.5290  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.4670  data_time: 0.4116  time: 0.4361
2024/05/04 08:46:38 - mmengine - INFO - The previous best checkpoint /media/iris/Dong/openmmlab/detection/coding/yolov6/yolov6_m_syncbn_fast_8xb32-300e_coco/best_coco_bbox_mAP_epoch_17.pth is removed
2024/05/04 08:46:40 - mmengine - INFO - The best checkpoint with 0.4670 coco/bbox_mAP at 18 epoch is saved to best_coco_bbox_mAP_epoch_18.pth.
2024/05/04 09:09:06 - mmengine - INFO - Epoch(train) [19][ 50/184]  base_lr: 1.0000e-02 lr: 5.4814e-03  eta: 20:45:36  time: 26.8451  data_time: 13.2830  memory: 7985  loss: 2.6737  loss_cls: 1.8898  loss_bbox: 0.7839
2024/05/04 09:27:52 - mmengine - INFO - Epoch(train) [19][100/184]  base_lr: 1.0000e-02 lr: 5.4814e-03  eta: 20:26:12  time: 22.5153  data_time: 1.2107  memory: 7985  loss: 2.6973  loss_cls: 1.9182  loss_bbox: 0.7792
2024/05/04 09:45:38 - mmengine - INFO - Epoch(train) [19][150/184]  base_lr: 1.0000e-02 lr: 5.4814e-03  eta: 20:05:54  time: 21.3132  data_time: 5.9556  memory: 7960  loss: 2.7126  loss_cls: 1.9272  loss_bbox: 0.7854
2024/05/04 09:56:36 - mmengine - INFO - Exp name: yolov6_m_syncbn_fast_8xb32-300e_coco_20240503_102402
2024/05/04 09:56:36 - mmengine - INFO - Saving checkpoint at 19 epochs
2024/05/04 09:57:28 - mmengine - INFO - Epoch(val) [19][ 50/552]    eta: 0:07:17  time: 0.8724  data_time: 0.8472  memory: 7997  
2024/05/04 09:58:06 - mmengine - INFO - Epoch(val) [19][100/552]    eta: 0:06:09  time: 0.7612  data_time: 0.7369  memory: 799  
2024/05/04 09:58:24 - mmengine - INFO - Epoch(val) [19][150/552]    eta: 0:04:26  time: 0.3546  data_time: 0.3303  memory: 799  
2024/05/04 09:58:44 - mmengine - INFO - Epoch(val) [19][200/552]    eta: 0:03:29  time: 0.3941  data_time: 0.3696  memory: 787  
2024/05/04 09:59:03 - mmengine - INFO - Epoch(val) [19][250/552]    eta: 0:02:47  time: 0.3877  data_time: 0.3631  memory: 787  
2024/05/04 09:59:20 - mmengine - INFO - Epoch(val) [19][300/552]    eta: 0:02:10  time: 0.3405  data_time: 0.3162  memory: 787  
2024/05/04 09:59:39 - mmengine - INFO - Epoch(val) [19][350/552]    eta: 0:01:40  time: 0.3683  data_time: 0.3441  memory: 787  
2024/05/04 09:59:55 - mmengine - INFO - Epoch(val) [19][400/552]    eta: 0:01:12  time: 0.3317  data_time: 0.3077  memory: 783  
2024/05/04 10:00:11 - mmengine - INFO - Epoch(val) [19][450/552]    eta: 0:00:46  time: 0.3185  data_time: 0.2946  memory: 783  
2024/05/04 10:00:29 - mmengine - INFO - Epoch(val) [19][500/552]    eta: 0:00:23  time: 0.3466  data_time: 0.3233  memory: 783  
2024/05/04 10:00:46 - mmengine - INFO - Epoch(val) [19][550/552]    eta: 0:00:00  time: 0.3468  data_time: 0.3227  memory: 783  
2024/05/04 10:00:57 - mmengine - INFO - Evaluating bbox...
2024/05/04 10:01:03 - mmengine - INFO - bbox_mAP_copypaste: 0.451 0.568 0.507 -1.000 -1.000 0.451
2024/05/04 10:01:03 - mmengine - INFO - Epoch(val) [19][552/552]    coco/bbox_mAP: 0.4510  coco/bbox_mAP_50: 0.5680  coco/bbox_mAP_75: 0.5070  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.4510  data_time: 0.4142  time: 0.4385
2024/05/04 10:22:59 - mmengine - INFO - Epoch(train) [20][ 50/184]  base_lr: 1.0000e-02 lr: 5.0500e-03  eta: 19:34:37  time: 26.3234  data_time: 18.3365  memory: 7985  loss: 2.7182  loss_cls: 1.9548  loss_bbox: 0.7634
2024/05/04 10:41:22 - mmengine - INFO - Epoch(train) [20][100/184]  base_lr: 1.0000e-02 lr: 5.0500e-03  eta: 19:14:57  time: 22.0593  data_time: 8.9832  memory: 7985  loss: 2.6339  loss_cls: 1.8854  loss_bbox: 0.7486
2024/05/04 10:59:43 - mmengine - INFO - Epoch(train) [20][150/184]  base_lr: 1.0000e-02 lr: 5.0500e-03  eta: 18:55:17  time: 22.0279  data_time: 8.4497  memory: 8009  loss: 2.6281  loss_cls: 1.8642  loss_bbox: 0.7639
2024/05/04 11:09:45 - mmengine - INFO - Exp name: yolov6_m_syncbn_fast_8xb32-300e_coco_20240503_102402
2024/05/04 11:09:45 - mmengine - INFO - Saving checkpoint at 20 epochs
2024/05/04 11:10:33 - mmengine - INFO - Epoch(val) [20][ 50/552]    eta: 0:07:02  time: 0.8421  data_time: 0.8161  memory: 8021  
2024/05/04 11:11:13 - mmengine - INFO - Epoch(val) [20][100/552]    eta: 0:06:07  time: 0.7825  data_time: 0.7584  memory: 799  
2024/05/04 11:11:32 - mmengine - INFO - Epoch(val) [20][150/552]    eta: 0:04:29  time: 0.3895  data_time: 0.3653  memory: 799  
2024/05/04 11:11:52 - mmengine - INFO - Epoch(val) [20][200/552]    eta: 0:03:31  time: 0.3917  data_time: 0.3673  memory: 787  
2024/05/04 11:12:11 - mmengine - INFO - Epoch(val) [20][250/552]    eta: 0:02:48  time: 0.3804  data_time: 0.3551  memory: 787  
2024/05/04 11:12:28 - mmengine - INFO - Epoch(val) [20][300/552]    eta: 0:02:11  time: 0.3510  data_time: 0.3256  memory: 787  
2024/05/04 11:12:46 - mmengine - INFO - Epoch(val) [20][350/552]    eta: 0:01:40  time: 0.3483  data_time: 0.3237  memory: 787  
2024/05/04 11:13:03 - mmengine - INFO - Epoch(val) [20][400/552]    eta: 0:01:12  time: 0.3501  data_time: 0.3258  memory: 783  
2024/05/04 11:13:21 - mmengine - INFO - Epoch(val) [20][450/552]    eta: 0:00:47  time: 0.3485  data_time: 0.3246  memory: 783  
2024/05/04 11:13:37 - mmengine - INFO - Epoch(val) [20][500/552]    eta: 0:00:23  time: 0.3365  data_time: 0.3126  memory: 783  
2024/05/04 11:13:55 - mmengine - INFO - Epoch(val) [20][550/552]    eta: 0:00:00  time: 0.3603  data_time: 0.3362  memory: 783  
2024/05/04 11:14:09 - mmengine - INFO - Evaluating bbox...
2024/05/04 11:14:15 - mmengine - INFO - bbox_mAP_copypaste: 0.475 0.601 0.536 -1.000 -1.000 0.475
2024/05/04 11:14:15 - mmengine - INFO - Epoch(val) [20][552/552]    coco/bbox_mAP: 0.4750  coco/bbox_mAP_50: 0.6010  coco/bbox_mAP_75: 0.5360  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.4750  data_time: 0.4179  time: 0.4425
2024/05/04 11:14:15 - mmengine - INFO - The previous best checkpoint /media/iris/Dong/openmmlab/detection/coding/yolov6/yolov6_m_syncbn_fast_8xb32-300e_coco/best_coco_bbox_mAP_epoch_18.pth is removed
2024/05/04 11:14:17 - mmengine - INFO - The best checkpoint with 0.4750 coco/bbox_mAP at 20 epoch is saved to best_coco_bbox_mAP_epoch_20.pth.
2024/05/04 11:36:55 - mmengine - INFO - Epoch(train) [21][ 50/184]  base_lr: 1.0000e-02 lr: 4.6186e-03  eta: 18:23:43  time: 27.0935  data_time: 25.8375  memory: 8083  loss: 2.7014  loss_cls: 1.9128  loss_bbox: 0.7886
2024/05/04 11:55:12 - mmengine - INFO - Epoch(train) [21][100/184]  base_lr: 1.0000e-02 lr: 4.6186e-03  eta: 18:04:03  time: 21.9261  data_time: 16.2039  memory: 7973  loss: 2.6234  loss_cls: 1.8898  loss_bbox: 0.7336
2024/05/04 12:13:51 - mmengine - INFO - Epoch(train) [21][150/184]  base_lr: 1.0000e-02 lr: 4.6186e-03  eta: 17:44:41  time: 22.3825  data_time: 2.8287  memory: 7985  loss: 2.6259  loss_cls: 1.8869  loss_bbox: 0.7391
2024/05/04 12:23:47 - mmengine - INFO - Exp name: yolov6_m_syncbn_fast_8xb32-300e_coco_20240503_102402
2024/05/04 12:23:47 - mmengine - INFO - Saving checkpoint at 21 epochs
2024/05/04 12:24:42 - mmengine - INFO - Epoch(val) [21][ 50/552]    eta: 0:07:33  time: 0.9042  data_time: 0.8792  memory: 8009  
2024/05/04 12:25:19 - mmengine - INFO - Epoch(val) [21][100/552]    eta: 0:06:13  time: 0.7503  data_time: 0.7257  memory: 799  
2024/05/04 12:25:37 - mmengine - INFO - Epoch(val) [21][150/552]    eta: 0:04:30  time: 0.3636  data_time: 0.3393  memory: 799  
2024/05/04 12:25:56 - mmengine - INFO - Epoch(val) [21][200/552]    eta: 0:03:30  time: 0.3754  data_time: 0.3508  memory: 787  
2024/05/04 12:26:14 - mmengine - INFO - Epoch(val) [21][250/552]    eta: 0:02:45  time: 0.3530  data_time: 0.3286  memory: 787  
2024/05/04 12:26:32 - mmengine - INFO - Epoch(val) [21][300/552]    eta: 0:02:10  time: 0.3668  data_time: 0.3426  memory: 787  
2024/05/04 12:26:50 - mmengine - INFO - Epoch(val) [21][350/552]    eta: 0:01:39  time: 0.3494  data_time: 0.3259  memory: 787  
2024/05/04 12:27:05 - mmengine - INFO - Epoch(val) [21][400/552]    eta: 0:01:11  time: 0.3068  data_time: 0.2834  memory: 783  
2024/05/04 12:27:21 - mmengine - INFO - Epoch(val) [21][450/552]    eta: 0:00:46  time: 0.3209  data_time: 0.2956  memory: 783  
2024/05/04 12:27:39 - mmengine - INFO - Epoch(val) [21][500/552]    eta: 0:00:23  time: 0.3607  data_time: 0.3369  memory: 783  
2024/05/04 12:27:57 - mmengine - INFO - Epoch(val) [21][550/552]    eta: 0:00:00  time: 0.3569  data_time: 0.3338  memory: 783  
2024/05/04 12:28:08 - mmengine - INFO - Evaluating bbox...
2024/05/04 12:28:13 - mmengine - INFO - bbox_mAP_copypaste: 0.449 0.561 0.507 -1.000 -1.000 0.449
2024/05/04 12:28:14 - mmengine - INFO - Epoch(val) [21][552/552]    coco/bbox_mAP: 0.4490  coco/bbox_mAP_50: 0.5610  coco/bbox_mAP_75: 0.5070  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.4490  data_time: 0.4109  time: 0.4351
2024/05/04 12:28:14 - mmengine - INFO - Switch pipeline now!
2024/05/04 12:34:25 - mmengine - INFO - Epoch(train) [22][ 50/184]  base_lr: 1.0000e-02 lr: 4.1904e-03  eta: 17:01:41  time: 7.4214  data_time: 7.0165  memory: 7898  loss: 2.4942  loss_cls: 1.8189  loss_bbox: 0.6752
2024/05/04 12:39:45 - mmengine - INFO - Epoch(train) [22][100/184]  base_lr: 1.0000e-02 lr: 4.1904e-03  eta: 16:33:46  time: 6.4011  data_time: 3.8990  memory: 7911  loss: 2.4755  loss_cls: 1.7936  loss_bbox: 0.6819
2024/05/04 12:43:10 - mmengine - INFO - Exp name: yolov6_m_syncbn_fast_8xb32-300e_coco_20240503_102402
2024/05/04 12:45:12 - mmengine - INFO - Epoch(train) [22][150/184]  base_lr: 1.0000e-02 lr: 4.1904e-03  eta: 16:06:29  time: 6.5375  data_time: 4.5019  memory: 7886  loss: 2.4559  loss_cls: 1.7805  loss_bbox: 0.6754
2024/05/04 12:48:16 - mmengine - INFO - Exp name: yolov6_m_syncbn_fast_8xb32-300e_coco_20240503_102402
2024/05/04 12:48:16 - mmengine - INFO - Saving checkpoint at 22 epochs
2024/05/04 12:48:59 - mmengine - INFO - Epoch(val) [22][ 50/552]    eta: 0:06:36  time: 0.7893  data_time: 0.7651  memory: 7898  
2024/05/04 12:49:35 - mmengine - INFO - Epoch(val) [22][100/552]    eta: 0:05:44  time: 0.7353  data_time: 0.7113  memory: 799  
2024/05/04 12:49:54 - mmengine - INFO - Epoch(val) [22][150/552]    eta: 0:04:13  time: 0.3679  data_time: 0.3439  memory: 799  
2024/05/04 12:50:12 - mmengine - INFO - Epoch(val) [22][200/552]    eta: 0:03:18  time: 0.3604  data_time: 0.3369  memory: 787  
2024/05/04 12:50:30 - mmengine - INFO - Epoch(val) [22][250/552]    eta: 0:02:38  time: 0.3647  data_time: 0.3401  memory: 787  
2024/05/04 12:50:46 - mmengine - INFO - Epoch(val) [22][300/552]    eta: 0:02:03  time: 0.3187  data_time: 0.2945  memory: 787  
2024/05/04 12:51:02 - mmengine - INFO - Epoch(val) [22][350/552]    eta: 0:01:34  time: 0.3274  data_time: 0.3036  memory: 787  
2024/05/04 12:51:18 - mmengine - INFO - Epoch(val) [22][400/552]    eta: 0:01:07  time: 0.3054  data_time: 0.2821  memory: 783  
2024/05/04 12:51:34 - mmengine - INFO - Epoch(val) [22][450/552]    eta: 0:00:44  time: 0.3209  data_time: 0.2970  memory: 783  
2024/05/04 12:51:50 - mmengine - INFO - Epoch(val) [22][500/552]    eta: 0:00:21  time: 0.3184  data_time: 0.2947  memory: 783  
2024/05/04 12:52:06 - mmengine - INFO - Epoch(val) [22][550/552]    eta: 0:00:00  time: 0.3296  data_time: 0.3061  memory: 783  
2024/05/04 12:52:18 - mmengine - INFO - Evaluating bbox...
2024/05/04 12:52:23 - mmengine - INFO - bbox_mAP_copypaste: 0.468 0.608 0.529 -1.000 -1.000 0.468
2024/05/04 12:52:24 - mmengine - INFO - Epoch(val) [22][552/552]    coco/bbox_mAP: 0.4680  coco/bbox_mAP_50: 0.6080  coco/bbox_mAP_75: 0.5290  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.4680  data_time: 0.3879  time: 0.4118
2024/05/04 12:59:19 - mmengine - INFO - Epoch(train) [23][ 50/184]  base_lr: 1.0000e-02 lr: 3.7688e-03  eta: 15:22:22  time: 8.3041  data_time: 7.8982  memory: 7898  loss: 2.3841  loss_cls: 1.7226  loss_bbox: 0.6615
2024/05/04 13:03:57 - mmengine - INFO - Epoch(train) [23][100/184]  base_lr: 1.0000e-02 lr: 3.7688e-03  eta: 14:55:59  time: 5.5668  data_time: 4.5744  memory: 7911  loss: 2.3995  loss_cls: 1.7402  loss_bbox: 0.6593
2024/05/04 13:09:39 - mmengine - INFO - Epoch(train) [23][150/184]  base_lr: 1.0000e-02 lr: 3.7688e-03  eta: 14:30:43  time: 6.8450  data_time: 2.9143  memory: 7935  loss: 2.3472  loss_cls: 1.7141  loss_bbox: 0.6330
2024/05/04 13:12:16 - mmengine - INFO - Exp name: yolov6_m_syncbn_fast_8xb32-300e_coco_20240503_102402
2024/05/04 13:12:16 - mmengine - INFO - Saving checkpoint at 23 epochs
2024/05/04 13:12:58 - mmengine - INFO - Epoch(val) [23][ 50/552]    eta: 0:06:33  time: 0.7834  data_time: 0.7583  memory: 7886  
2024/05/04 13:13:36 - mmengine - INFO - Epoch(val) [23][100/552]    eta: 0:05:49  time: 0.7631  data_time: 0.7391  memory: 799  
2024/05/04 13:13:53 - mmengine - INFO - Epoch(val) [23][150/552]    eta: 0:04:12  time: 0.3393  data_time: 0.3157  memory: 799  
2024/05/04 13:14:11 - mmengine - INFO - Epoch(val) [23][200/552]    eta: 0:03:17  time: 0.3590  data_time: 0.3335  memory: 787  
2024/05/04 13:14:30 - mmengine - INFO - Epoch(val) [23][250/552]    eta: 0:02:38  time: 0.3757  data_time: 0.3505  memory: 787  
2024/05/04 13:14:46 - mmengine - INFO - Epoch(val) [23][300/552]    eta: 0:02:03  time: 0.3240  data_time: 0.2990  memory: 787  
2024/05/04 13:15:03 - mmengine - INFO - Epoch(val) [23][350/552]    eta: 0:01:34  time: 0.3346  data_time: 0.3097  memory: 787  
2024/05/04 13:15:18 - mmengine - INFO - Epoch(val) [23][400/552]    eta: 0:01:08  time: 0.3017  data_time: 0.2788  memory: 783  
2024/05/04 13:15:34 - mmengine - INFO - Epoch(val) [23][450/552]    eta: 0:00:44  time: 0.3172  data_time: 0.2935  memory: 783  
2024/05/04 13:15:49 - mmengine - INFO - Epoch(val) [23][500/552]    eta: 0:00:21  time: 0.3174  data_time: 0.2942  memory: 783  
2024/05/04 13:16:06 - mmengine - INFO - Epoch(val) [23][550/552]    eta: 0:00:00  time: 0.3251  data_time: 0.3015  memory: 783  
2024/05/04 13:16:18 - mmengine - INFO - Evaluating bbox...
2024/05/04 13:16:23 - mmengine - INFO - bbox_mAP_copypaste: 0.505 0.641 0.557 -1.000 -1.000 0.505
2024/05/04 13:16:24 - mmengine - INFO - Epoch(val) [23][552/552]    coco/bbox_mAP: 0.5050  coco/bbox_mAP_50: 0.6410  coco/bbox_mAP_75: 0.5570  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.5050  data_time: 0.3866  time: 0.4109
2024/05/04 13:16:24 - mmengine - INFO - The previous best checkpoint /media/iris/Dong/openmmlab/detection/coding/yolov6/yolov6_m_syncbn_fast_8xb32-300e_coco/best_coco_bbox_mAP_epoch_20.pth is removed
2024/05/04 13:16:26 - mmengine - INFO - The best checkpoint with 0.5050 coco/bbox_mAP at 23 epoch is saved to best_coco_bbox_mAP_epoch_23.pth.
2024/05/04 13:22:31 - mmengine - INFO - Epoch(train) [24][ 50/184]  base_lr: 1.0000e-02 lr: 3.3570e-03  eta: 13:48:48  time: 7.2350  data_time: 4.7654  memory: 7898  loss: 2.2491  loss_cls: 1.6242  loss_bbox: 0.6248
2024/05/04 13:27:48 - mmengine - INFO - Epoch(train) [24][100/184]  base_lr: 1.0000e-02 lr: 3.3570e-03  eta: 13:24:33  time: 6.3466  data_time: 2.6106  memory: 7911  loss: 2.3892  loss_cls: 1.7366  loss_bbox: 0.6526
2024/05/04 13:32:57 - mmengine - INFO - Epoch(train) [24][150/184]  base_lr: 1.0000e-02 lr: 3.3570e-03  eta: 13:00:39  time: 6.1803  data_time: 3.2991  memory: 7886  loss: 2.3519  loss_cls: 1.7071  loss_bbox: 0.6448
2024/05/04 13:36:06 - mmengine - INFO - Exp name: yolov6_m_syncbn_fast_8xb32-300e_coco_20240503_102402
2024/05/04 13:36:06 - mmengine - INFO - Saving checkpoint at 24 epochs
2024/05/04 13:36:48 - mmengine - INFO - Epoch(val) [24][ 50/552]    eta: 0:06:36  time: 0.7900  data_time: 0.7648  memory: 7898  
2024/05/04 13:37:26 - mmengine - INFO - Epoch(val) [24][100/552]    eta: 0:05:47  time: 0.7485  data_time: 0.7252  memory: 799  
2024/05/04 13:37:44 - mmengine - INFO - Epoch(val) [24][150/552]    eta: 0:04:15  time: 0.3688  data_time: 0.3455  memory: 799  
2024/05/04 13:38:02 - mmengine - INFO - Epoch(val) [24][200/552]    eta: 0:03:18  time: 0.3534  data_time: 0.3295  memory: 787  
2024/05/04 13:38:20 - mmengine - INFO - Epoch(val) [24][250/552]    eta: 0:02:37  time: 0.3500  data_time: 0.3261  memory: 787  
2024/05/04 13:38:36 - mmengine - INFO - Epoch(val) [24][300/552]    eta: 0:02:03  time: 0.3277  data_time: 0.3016  memory: 787  
2024/05/04 13:38:53 - mmengine - INFO - Epoch(val) [24][350/552]    eta: 0:01:34  time: 0.3349  data_time: 0.3111  memory: 787  
2024/05/04 13:39:07 - mmengine - INFO - Epoch(val) [24][400/552]    eta: 0:01:07  time: 0.2873  data_time: 0.2642  memory: 783  
2024/05/04 13:39:23 - mmengine - INFO - Epoch(val) [24][450/552]    eta: 0:00:44  time: 0.3218  data_time: 0.2977  memory: 783  
2024/05/04 13:39:37 - mmengine - INFO - Epoch(val) [24][500/552]    eta: 0:00:21  time: 0.2816  data_time: 0.2583  memory: 783  
2024/05/04 13:39:53 - mmengine - INFO - Epoch(val) [24][550/552]    eta: 0:00:00  time: 0.3239  data_time: 0.3007  memory: 783  
2024/05/04 13:40:07 - mmengine - INFO - Evaluating bbox...
2024/05/04 13:40:13 - mmengine - INFO - bbox_mAP_copypaste: 0.493 0.626 0.547 -1.000 -1.000 0.493
2024/05/04 13:40:13 - mmengine - INFO - Epoch(val) [24][552/552]    coco/bbox_mAP: 0.4930  coco/bbox_mAP_50: 0.6260  coco/bbox_mAP_75: 0.5470  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.4930  data_time: 0.3824  time: 0.4063
2024/05/04 13:46:51 - mmengine - INFO - Epoch(train) [25][ 50/184]  base_lr: 1.0000e-02 lr: 2.9580e-03  eta: 12:22:00  time: 7.9617  data_time: 7.4195  memory: 7886  loss: 2.2055  loss_cls: 1.6137  loss_bbox: 0.5918
2024/05/04 13:52:17 - mmengine - INFO - Epoch(train) [25][100/184]  base_lr: 1.0000e-02 lr: 2.9580e-03  eta: 11:59:19  time: 6.5227  data_time: 6.1176  memory: 7898  loss: 2.2752  loss_cls: 1.6530  loss_bbox: 0.6222
2024/05/04 13:57:37 - mmengine - INFO - Epoch(train) [25][150/184]  base_lr: 1.0000e-02 lr: 2.9580e-03  eta: 11:36:58  time: 6.3992  data_time: 5.9513  memory: 7886  loss: 2.1826  loss_cls: 1.5833  loss_bbox: 0.5992
2024/05/04 14:00:24 - mmengine - INFO - Exp name: yolov6_m_syncbn_fast_8xb32-300e_coco_20240503_102402
2024/05/04 14:00:24 - mmengine - INFO - Saving checkpoint at 25 epochs
2024/05/04 14:01:06 - mmengine - INFO - Epoch(val) [25][ 50/552]    eta: 0:06:31  time: 0.7792  data_time: 0.7540  memory: 7898  
2024/05/04 14:01:45 - mmengine - INFO - Epoch(val) [25][100/552]    eta: 0:05:52  time: 0.7820  data_time: 0.7585  memory: 799  
2024/05/04 14:02:04 - mmengine - INFO - Epoch(val) [25][150/552]    eta: 0:04:20  time: 0.3817  data_time: 0.3579  memory: 799  
2024/05/04 14:02:22 - mmengine - INFO - Epoch(val) [25][200/552]    eta: 0:03:23  time: 0.3678  data_time: 0.3443  memory: 787  
2024/05/04 14:02:40 - mmengine - INFO - Epoch(val) [25][250/552]    eta: 0:02:40  time: 0.3546  data_time: 0.3312  memory: 787  
2024/05/04 14:02:58 - mmengine - INFO - Epoch(val) [25][300/552]    eta: 0:02:06  time: 0.3565  data_time: 0.3326  memory: 787  
2024/05/04 14:03:15 - mmengine - INFO - Epoch(val) [25][350/552]    eta: 0:01:37  time: 0.3459  data_time: 0.3221  memory: 787  
2024/05/04 14:03:30 - mmengine - INFO - Epoch(val) [25][400/552]    eta: 0:01:09  time: 0.3038  data_time: 0.2799  memory: 783  
2024/05/04 14:03:47 - mmengine - INFO - Epoch(val) [25][450/552]    eta: 0:00:45  time: 0.3264  data_time: 0.3028  memory: 783  
2024/05/04 14:04:02 - mmengine - INFO - Epoch(val) [25][500/552]    eta: 0:00:22  time: 0.3040  data_time: 0.2810  memory: 783  
2024/05/04 14:04:19 - mmengine - INFO - Epoch(val) [25][550/552]    eta: 0:00:00  time: 0.3303  data_time: 0.3075  memory: 783  
2024/05/04 14:04:34 - mmengine - INFO - Evaluating bbox...
2024/05/04 14:04:39 - mmengine - INFO - bbox_mAP_copypaste: 0.504 0.641 0.562 -1.000 -1.000 0.504
2024/05/04 14:04:39 - mmengine - INFO - Epoch(val) [25][552/552]    coco/bbox_mAP: 0.5040  coco/bbox_mAP_50: 0.6410  coco/bbox_mAP_75: 0.5620  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.5040  data_time: 0.3958  time: 0.4194
2024/05/04 14:11:18 - mmengine - INFO - Epoch(train) [26][ 50/184]  base_lr: 1.0000e-02 lr: 2.5750e-03  eta: 11:00:26  time: 7.9656  data_time: 6.9218  memory: 7898  loss: 2.1640  loss_cls: 1.5890  loss_bbox: 0.5750
2024/05/04 14:17:01 - mmengine - INFO - Epoch(train) [26][100/184]  base_lr: 1.0000e-02 lr: 2.5750e-03  eta: 10:39:12  time: 6.8722  data_time: 5.2454  memory: 7898  loss: 2.1060  loss_cls: 1.5352  loss_bbox: 0.5708
2024/05/04 14:22:24 - mmengine - INFO - Epoch(train) [26][150/184]  base_lr: 1.0000e-02 lr: 2.5750e-03  eta: 10:18:10  time: 6.4587  data_time: 0.8205  memory: 7911  loss: 2.1560  loss_cls: 1.5841  loss_bbox: 0.5719
2024/05/04 14:25:15 - mmengine - INFO - Exp name: yolov6_m_syncbn_fast_8xb32-300e_coco_20240503_102402
2024/05/04 14:25:15 - mmengine - INFO - Saving checkpoint at 26 epochs
2024/05/04 14:25:59 - mmengine - INFO - Epoch(val) [26][ 50/552]    eta: 0:06:57  time: 0.8315  data_time: 0.8059  memory: 7898  
2024/05/04 14:26:36 - mmengine - INFO - Epoch(val) [26][100/552]    eta: 0:05:53  time: 0.7330  data_time: 0.7082  memory: 799  
2024/05/04 14:26:53 - mmengine - INFO - Epoch(val) [26][150/552]    eta: 0:04:15  time: 0.3399  data_time: 0.3147  memory: 799  
2024/05/04 14:27:12 - mmengine - INFO - Epoch(val) [26][200/552]    eta: 0:03:20  time: 0.3779  data_time: 0.3541  memory: 787  
2024/05/04 14:27:30 - mmengine - INFO - Epoch(val) [26][250/552]    eta: 0:02:39  time: 0.3541  data_time: 0.3306  memory: 787  
2024/05/04 14:27:47 - mmengine - INFO - Epoch(val) [26][300/552]    eta: 0:02:05  time: 0.3508  data_time: 0.3266  memory: 787  
2024/05/04 14:28:03 - mmengine - INFO - Epoch(val) [26][350/552]    eta: 0:01:35  time: 0.3244  data_time: 0.3012  memory: 787  
2024/05/04 14:28:18 - mmengine - INFO - Epoch(val) [26][400/552]    eta: 0:01:08  time: 0.2865  data_time: 0.2629  memory: 783  
2024/05/04 14:28:33 - mmengine - INFO - Epoch(val) [26][450/552]    eta: 0:00:44  time: 0.3116  data_time: 0.2886  memory: 783  
2024/05/04 14:28:48 - mmengine - INFO - Epoch(val) [26][500/552]    eta: 0:00:21  time: 0.2980  data_time: 0.2740  memory: 783  
2024/05/04 14:29:04 - mmengine - INFO - Epoch(val) [26][550/552]    eta: 0:00:00  time: 0.3197  data_time: 0.2956  memory: 783  
2024/05/04 14:29:21 - mmengine - INFO - Evaluating bbox...
2024/05/04 14:29:27 - mmengine - INFO - bbox_mAP_copypaste: 0.537 0.674 0.589 -1.000 -1.000 0.537
2024/05/04 14:29:27 - mmengine - INFO - Epoch(val) [26][552/552]    coco/bbox_mAP: 0.5370  coco/bbox_mAP_50: 0.6740  coco/bbox_mAP_75: 0.5890  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.5370  data_time: 0.3865  time: 0.4105
2024/05/04 14:29:27 - mmengine - INFO - The previous best checkpoint /media/iris/Dong/openmmlab/detection/coding/yolov6/yolov6_m_syncbn_fast_8xb32-300e_coco/best_coco_bbox_mAP_epoch_23.pth is removed
2024/05/04 14:29:30 - mmengine - INFO - The best checkpoint with 0.5370 coco/bbox_mAP at 26 epoch is saved to best_coco_bbox_mAP_epoch_26.pth.
2024/05/04 14:35:53 - mmengine - INFO - Epoch(train) [27][ 50/184]  base_lr: 1.0000e-02 lr: 2.2108e-03  eta: 9:43:35  time: 7.5957  data_time: 5.3285  memory: 7898  loss: 2.1715  loss_cls: 1.5768  loss_bbox: 0.5947
2024/05/04 14:42:02 - mmengine - INFO - Epoch(train) [27][100/184]  base_lr: 1.0000e-02 lr: 2.2108e-03  eta: 9:23:40  time: 7.3887  data_time: 1.9289  memory: 7935  loss: 2.0917  loss_cls: 1.5230  loss_bbox: 0.5687
2024/05/04 14:47:32 - mmengine - INFO - Epoch(train) [27][150/184]  base_lr: 1.0000e-02 lr: 2.2108e-03  eta: 9:03:49  time: 6.6033  data_time: 1.4627  memory: 7886  loss: 2.1373  loss_cls: 1.5854  loss_bbox: 0.5519
2024/05/04 14:50:35 - mmengine - INFO - Exp name: yolov6_m_syncbn_fast_8xb32-300e_coco_20240503_102402
2024/05/04 14:50:35 - mmengine - INFO - Saving checkpoint at 27 epochs
2024/05/04 14:51:19 - mmengine - INFO - Epoch(val) [27][ 50/552]    eta: 0:06:57  time: 0.8309  data_time: 0.8054  memory: 7898  
2024/05/04 14:51:57 - mmengine - INFO - Epoch(val) [27][100/552]    eta: 0:05:57  time: 0.7516  data_time: 0.7274  memory: 799  
2024/05/04 14:52:16 - mmengine - INFO - Epoch(val) [27][150/552]    eta: 0:04:23  time: 0.3825  data_time: 0.3591  memory: 799  
2024/05/04 14:52:36 - mmengine - INFO - Epoch(val) [27][200/552]    eta: 0:03:27  time: 0.3899  data_time: 0.3652  memory: 787  
2024/05/04 14:52:53 - mmengine - INFO - Epoch(val) [27][250/552]    eta: 0:02:43  time: 0.3495  data_time: 0.3248  memory: 787  
2024/05/04 14:53:10 - mmengine - INFO - Epoch(val) [27][300/552]    eta: 0:02:07  time: 0.3326  data_time: 0.3077  memory: 787  
2024/05/04 14:53:27 - mmengine - INFO - Epoch(val) [27][350/552]    eta: 0:01:37  time: 0.3429  data_time: 0.3188  memory: 787  
2024/05/04 14:53:42 - mmengine - INFO - Epoch(val) [27][400/552]    eta: 0:01:09  time: 0.3010  data_time: 0.2767  memory: 783  
2024/05/04 14:53:57 - mmengine - INFO - Epoch(val) [27][450/552]    eta: 0:00:45  time: 0.3034  data_time: 0.2800  memory: 783  
2024/05/04 14:54:12 - mmengine - INFO - Epoch(val) [27][500/552]    eta: 0:00:22  time: 0.2996  data_time: 0.2766  memory: 783  
2024/05/04 14:54:28 - mmengine - INFO - Epoch(val) [27][550/552]    eta: 0:00:00  time: 0.3280  data_time: 0.3044  memory: 783  
2024/05/04 14:54:44 - mmengine - INFO - Evaluating bbox...
2024/05/04 14:54:49 - mmengine - INFO - bbox_mAP_copypaste: 0.584 0.731 0.651 -1.000 -1.000 0.584
2024/05/04 14:54:49 - mmengine - INFO - Epoch(val) [27][552/552]    coco/bbox_mAP: 0.5840  coco/bbox_mAP_50: 0.7310  coco/bbox_mAP_75: 0.6510  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.5840  data_time: 0.3937  time: 0.4179
2024/05/04 14:54:49 - mmengine - INFO - The previous best checkpoint /media/iris/Dong/openmmlab/detection/coding/yolov6/yolov6_m_syncbn_fast_8xb32-300e_coco/best_coco_bbox_mAP_epoch_26.pth is removed
2024/05/04 14:54:52 - mmengine - INFO - The best checkpoint with 0.5840 coco/bbox_mAP at 27 epoch is saved to best_coco_bbox_mAP_epoch_27.pth.
2024/05/04 14:59:08 - mmengine - INFO - Exp name: yolov6_m_syncbn_fast_8xb32-300e_coco_20240503_102402
2024/05/04 15:01:31 - mmengine - INFO - Epoch(train) [28][ 50/184]  base_lr: 1.0000e-02 lr: 1.8682e-03  eta: 8:31:13  time: 7.9345  data_time: 6.1502  memory: 7898  loss: 2.0697  loss_cls: 1.5156  loss_bbox: 0.5541
2024/05/04 15:06:53 - mmengine - INFO - Epoch(train) [28][100/184]  base_lr: 1.0000e-02 lr: 1.8682e-03  eta: 8:12:04  time: 6.4393  data_time: 3.9222  memory: 7898  loss: 2.1055  loss_cls: 1.5324  loss_bbox: 0.5731
2024/05/04 15:12:47 - mmengine - INFO - Epoch(train) [28][150/184]  base_lr: 1.0000e-02 lr: 1.8682e-03  eta: 7:53:20  time: 7.0714  data_time: 2.8555  memory: 7898  loss: 2.0676  loss_cls: 1.5331  loss_bbox: 0.5345
2024/05/04 15:16:13 - mmengine - INFO - Exp name: yolov6_m_syncbn_fast_8xb32-300e_coco_20240503_102402
2024/05/04 15:16:13 - mmengine - INFO - Saving checkpoint at 28 epochs
2024/05/04 15:16:58 - mmengine - INFO - Epoch(val) [28][ 50/552]    eta: 0:07:01  time: 0.8400  data_time: 0.8148  memory: 7898  
2024/05/04 15:17:37 - mmengine - INFO - Epoch(val) [28][100/552]    eta: 0:06:07  time: 0.7878  data_time: 0.7641  memory: 799  
2024/05/04 15:17:55 - mmengine - INFO - Epoch(val) [28][150/552]    eta: 0:04:24  time: 0.3465  data_time: 0.3218  memory: 799  
2024/05/04 15:18:14 - mmengine - INFO - Epoch(val) [28][200/552]    eta: 0:03:27  time: 0.3836  data_time: 0.3587  memory: 787  
2024/05/04 15:18:31 - mmengine - INFO - Epoch(val) [28][250/552]    eta: 0:02:43  time: 0.3493  data_time: 0.3242  memory: 787  
2024/05/04 15:18:49 - mmengine - INFO - Epoch(val) [28][300/552]    eta: 0:02:08  time: 0.3500  data_time: 0.3245  memory: 787  
2024/05/04 15:19:06 - mmengine - INFO - Epoch(val) [28][350/552]    eta: 0:01:37  time: 0.3311  data_time: 0.3076  memory: 787  
2024/05/04 15:19:20 - mmengine - INFO - Epoch(val) [28][400/552]    eta: 0:01:10  time: 0.2976  data_time: 0.2747  memory: 783  
2024/05/04 15:19:37 - mmengine - INFO - Epoch(val) [28][450/552]    eta: 0:00:45  time: 0.3415  data_time: 0.3180  memory: 783  
2024/05/04 15:19:52 - mmengine - INFO - Epoch(val) [28][500/552]    eta: 0:00:22  time: 0.2918  data_time: 0.2683  memory: 783  
2024/05/04 15:20:09 - mmengine - INFO - Epoch(val) [28][550/552]    eta: 0:00:00  time: 0.3444  data_time: 0.3205  memory: 783  
2024/05/04 15:20:24 - mmengine - INFO - Evaluating bbox...
2024/05/04 15:20:29 - mmengine - INFO - bbox_mAP_copypaste: 0.580 0.719 0.640 -1.000 -1.000 0.580
2024/05/04 15:20:29 - mmengine - INFO - Epoch(val) [28][552/552]    coco/bbox_mAP: 0.5800  coco/bbox_mAP_50: 0.7190  coco/bbox_mAP_75: 0.6400  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.5800  data_time: 0.3980  time: 0.4222
2024/05/04 15:27:27 - mmengine - INFO - Epoch(train) [29][ 50/184]  base_lr: 1.0000e-02 lr: 1.5498e-03  eta: 7:22:33  time: 8.3470  data_time: 7.4548  memory: 7886  loss: 2.0118  loss_cls: 1.4704  loss_bbox: 0.5413
2024/05/04 15:33:17 - mmengine - INFO - Epoch(train) [29][100/184]  base_lr: 1.0000e-02 lr: 1.5498e-03  eta: 7:04:27  time: 6.9949  data_time: 5.7396  memory: 7898  loss: 2.0698  loss_cls: 1.5182  loss_bbox: 0.5516
2024/05/04 15:38:47 - mmengine - INFO - Epoch(train) [29][150/184]  base_lr: 1.0000e-02 lr: 1.5498e-03  eta: 6:46:30  time: 6.6113  data_time: 4.8032  memory: 7935  loss: 2.0946  loss_cls: 1.5371  loss_bbox: 0.5574
2024/05/04 15:41:55 - mmengine - INFO - Exp name: yolov6_m_syncbn_fast_8xb32-300e_coco_20240503_102402
2024/05/04 15:41:55 - mmengine - INFO - Saving checkpoint at 29 epochs
2024/05/04 15:42:41 - mmengine - INFO - Epoch(val) [29][ 50/552]    eta: 0:07:06  time: 0.8486  data_time: 0.8243  memory: 7911  
2024/05/04 15:43:21 - mmengine - INFO - Epoch(val) [29][100/552]    eta: 0:06:11  time: 0.7944  data_time: 0.7704  memory: 799  
2024/05/04 15:43:40 - mmengine - INFO - Epoch(val) [29][150/552]    eta: 0:04:31  time: 0.3838  data_time: 0.3589  memory: 799  
2024/05/04 15:43:59 - mmengine - INFO - Epoch(val) [29][200/552]    eta: 0:03:32  time: 0.3880  data_time: 0.3645  memory: 787  
2024/05/04 15:44:17 - mmengine - INFO - Epoch(val) [29][250/552]    eta: 0:02:47  time: 0.3572  data_time: 0.3336  memory: 787  
2024/05/04 15:44:35 - mmengine - INFO - Epoch(val) [29][300/552]    eta: 0:02:11  time: 0.3535  data_time: 0.3291  memory: 787  
2024/05/04 15:44:52 - mmengine - INFO - Epoch(val) [29][350/552]    eta: 0:01:40  time: 0.3475  data_time: 0.3229  memory: 787  
2024/05/04 15:45:07 - mmengine - INFO - Epoch(val) [29][400/552]    eta: 0:01:11  time: 0.2914  data_time: 0.2649  memory: 783  
2024/05/04 15:45:24 - mmengine - INFO - Epoch(val) [29][450/552]    eta: 0:00:46  time: 0.3453  data_time: 0.3218  memory: 783  
2024/05/04 15:45:40 - mmengine - INFO - Epoch(val) [29][500/552]    eta: 0:00:22  time: 0.3059  data_time: 0.2827  memory: 783  
2024/05/04 15:45:56 - mmengine - INFO - Epoch(val) [29][550/552]    eta: 0:00:00  time: 0.3381  data_time: 0.3142  memory: 783  
2024/05/04 15:46:08 - mmengine - INFO - Evaluating bbox...
2024/05/04 15:46:14 - mmengine - INFO - bbox_mAP_copypaste: 0.611 0.752 0.679 -1.000 -1.000 0.611
2024/05/04 15:46:14 - mmengine - INFO - Epoch(val) [29][552/552]    coco/bbox_mAP: 0.6110  coco/bbox_mAP_50: 0.7520  coco/bbox_mAP_75: 0.6790  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.6110  data_time: 0.4059  time: 0.4301
2024/05/04 15:46:14 - mmengine - INFO - The previous best checkpoint /media/iris/Dong/openmmlab/detection/coding/yolov6/yolov6_m_syncbn_fast_8xb32-300e_coco/best_coco_bbox_mAP_epoch_27.pth is removed
2024/05/04 15:46:16 - mmengine - INFO - The best checkpoint with 0.6110 coco/bbox_mAP at 29 epoch is saved to best_coco_bbox_mAP_epoch_29.pth.
2024/05/04 15:53:39 - mmengine - INFO - Epoch(train) [30][ 50/184]  base_lr: 1.0000e-02 lr: 1.2581e-03  eta: 6:17:08  time: 8.7853  data_time: 8.3085  memory: 7935  loss: 1.9179  loss_cls: 1.4300  loss_bbox: 0.4879
2024/05/04 15:58:56 - mmengine - INFO - Epoch(train) [30][100/184]  base_lr: 1.0000e-02 lr: 1.2581e-03  eta: 5:59:44  time: 6.3504  data_time: 4.7034  memory: 7886  loss: 1.9550  loss_cls: 1.4409  loss_bbox: 0.5141
2024/05/04 16:04:32 - mmengine - INFO - Epoch(train) [30][150/184]  base_lr: 1.0000e-02 lr: 1.2581e-03  eta: 5:42:37  time: 6.7222  data_time: 2.4535  memory: 7886  loss: 2.0355  loss_cls: 1.5111  loss_bbox: 0.5243
2024/05/04 16:07:46 - mmengine - INFO - Exp name: yolov6_m_syncbn_fast_8xb32-300e_coco_20240503_102402
2024/05/04 16:07:46 - mmengine - INFO - Saving checkpoint at 30 epochs
2024/05/04 16:08:33 - mmengine - INFO - Epoch(val) [30][ 50/552]    eta: 0:07:17  time: 0.8712  data_time: 0.8477  memory: 7911  
2024/05/04 16:09:14 - mmengine - INFO - Epoch(val) [30][100/552]    eta: 0:06:20  time: 0.8125  data_time: 0.7890  memory: 799  
2024/05/04 16:09:31 - mmengine - INFO - Epoch(val) [30][150/552]    eta: 0:04:33  time: 0.3543  data_time: 0.3309  memory: 799  
2024/05/04 16:09:50 - mmengine - INFO - Epoch(val) [30][200/552]    eta: 0:03:32  time: 0.3818  data_time: 0.3579  memory: 787  
2024/05/04 16:10:09 - mmengine - INFO - Epoch(val) [30][250/552]    eta: 0:02:48  time: 0.3654  data_time: 0.3414  memory: 787  
2024/05/04 16:10:25 - mmengine - INFO - Epoch(val) [30][300/552]    eta: 0:02:11  time: 0.3345  data_time: 0.3104  memory: 787  
2024/05/04 16:10:43 - mmengine - INFO - Epoch(val) [30][350/552]    eta: 0:01:39  time: 0.3415  data_time: 0.3166  memory: 787  
2024/05/04 16:10:58 - mmengine - INFO - Epoch(val) [30][400/552]    eta: 0:01:11  time: 0.3195  data_time: 0.2962  memory: 783  
2024/05/04 16:11:14 - mmengine - INFO - Epoch(val) [30][450/552]    eta: 0:00:46  time: 0.3180  data_time: 0.2947  memory: 783  
2024/05/04 16:11:30 - mmengine - INFO - Epoch(val) [30][500/552]    eta: 0:00:22  time: 0.3122  data_time: 0.2894  memory: 783  
2024/05/04 16:11:46 - mmengine - INFO - Epoch(val) [30][550/552]    eta: 0:00:00  time: 0.3154  data_time: 0.2915  memory: 783  
2024/05/04 16:11:57 - mmengine - INFO - Evaluating bbox...
2024/05/04 16:12:02 - mmengine - INFO - bbox_mAP_copypaste: 0.514 0.647 0.565 -1.000 -1.000 0.514
2024/05/04 16:12:02 - mmengine - INFO - Epoch(val) [30][552/552]    coco/bbox_mAP: 0.5140  coco/bbox_mAP_50: 0.6470  coco/bbox_mAP_75: 0.5650  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.5140  data_time: 0.4043  time: 0.4280
2024/05/04 16:19:17 - mmengine - INFO - Epoch(train) [31][ 50/184]  base_lr: 1.0000e-02 lr: 9.9520e-04  eta: 5:14:31  time: 8.6959  data_time: 8.2905  memory: 7898  loss: 1.9465  loss_cls: 1.4398  loss_bbox: 0.5067
2024/05/04 16:24:55 - mmengine - INFO - Epoch(train) [31][100/184]  base_lr: 1.0000e-02 lr: 9.9520e-04  eta: 4:57:56  time: 6.7586  data_time: 5.3411  memory: 7911  loss: 1.9615  loss_cls: 1.4443  loss_bbox: 0.5172
2024/05/04 16:30:49 - mmengine - INFO - Epoch(train) [31][150/184]  base_lr: 1.0000e-02 lr: 9.9520e-04  eta: 4:41:36  time: 7.0684  data_time: 1.1908  memory: 7886  loss: 1.9859  loss_cls: 1.4726  loss_bbox: 0.5133
2024/05/04 16:33:54 - mmengine - INFO - Exp name: yolov6_m_syncbn_fast_8xb32-300e_coco_20240503_102402
2024/05/04 16:33:54 - mmengine - INFO - Saving checkpoint at 31 epochs
2024/05/04 16:34:38 - mmengine - INFO - Epoch(val) [31][ 50/552]    eta: 0:06:58  time: 0.8341  data_time: 0.8098  memory: 7935  
2024/05/04 16:35:19 - mmengine - INFO - Epoch(val) [31][100/552]    eta: 0:06:12  time: 0.8124  data_time: 0.7884  memory: 799  
2024/05/04 16:35:37 - mmengine - INFO - Epoch(val) [31][150/552]    eta: 0:04:29  time: 0.3662  data_time: 0.3423  memory: 799  
2024/05/04 16:35:57 - mmengine - INFO - Epoch(val) [31][200/552]    eta: 0:03:31  time: 0.3896  data_time: 0.3653  memory: 787  
2024/05/04 16:36:13 - mmengine - INFO - Epoch(val) [31][250/552]    eta: 0:02:45  time: 0.3360  data_time: 0.3114  memory: 787  
2024/05/04 16:36:31 - mmengine - INFO - Epoch(val) [31][300/552]    eta: 0:02:09  time: 0.3553  data_time: 0.3321  memory: 787  
2024/05/04 16:36:47 - mmengine - INFO - Epoch(val) [31][350/552]    eta: 0:01:38  time: 0.3259  data_time: 0.3020  memory: 787  
2024/05/04 16:37:03 - mmengine - INFO - Epoch(val) [31][400/552]    eta: 0:01:10  time: 0.3134  data_time: 0.2907  memory: 783  
2024/05/04 16:37:19 - mmengine - INFO - Epoch(val) [31][450/552]    eta: 0:00:45  time: 0.3119  data_time: 0.2877  memory: 783  
2024/05/04 16:37:35 - mmengine - INFO - Epoch(val) [31][500/552]    eta: 0:00:22  time: 0.3284  data_time: 0.3037  memory: 783  
2024/05/04 16:37:51 - mmengine - INFO - Epoch(val) [31][550/552]    eta: 0:00:00  time: 0.3261  data_time: 0.3024  memory: 783  
2024/05/04 16:38:05 - mmengine - INFO - Evaluating bbox...
2024/05/04 16:38:11 - mmengine - INFO - bbox_mAP_copypaste: 0.619 0.754 0.677 -1.000 -1.000 0.619
2024/05/04 16:38:11 - mmengine - INFO - Epoch(val) [31][552/552]    coco/bbox_mAP: 0.6190  coco/bbox_mAP_50: 0.7540  coco/bbox_mAP_75: 0.6770  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.6190  data_time: 0.4019  time: 0.4258
2024/05/04 16:38:11 - mmengine - INFO - The previous best checkpoint /media/iris/Dong/openmmlab/detection/coding/yolov6/yolov6_m_syncbn_fast_8xb32-300e_coco/best_coco_bbox_mAP_epoch_29.pth is removed
2024/05/04 16:38:13 - mmengine - INFO - The best checkpoint with 0.6190 coco/bbox_mAP at 31 epoch is saved to best_coco_bbox_mAP_epoch_31.pth.
2024/05/04 16:45:15 - mmengine - INFO - Epoch(train) [32][ 50/184]  base_lr: 1.0000e-02 lr: 7.6317e-04  eta: 4:14:35  time: 8.3737  data_time: 7.9683  memory: 7898  loss: 1.9261  loss_cls: 1.4273  loss_bbox: 0.4988
2024/05/04 16:51:07 - mmengine - INFO - Epoch(train) [32][100/184]  base_lr: 1.0000e-02 lr: 7.6317e-04  eta: 3:58:42  time: 7.0502  data_time: 6.5569  memory: 7886  loss: 1.9511  loss_cls: 1.4476  loss_bbox: 0.5035
2024/05/04 16:56:56 - mmengine - INFO - Epoch(train) [32][150/184]  base_lr: 1.0000e-02 lr: 7.6317e-04  eta: 3:43:00  time: 6.9735  data_time: 6.5273  memory: 7935  loss: 1.9468  loss_cls: 1.4274  loss_bbox: 0.5193
2024/05/04 17:00:19 - mmengine - INFO - Exp name: yolov6_m_syncbn_fast_8xb32-300e_coco_20240503_102402
2024/05/04 17:00:19 - mmengine - INFO - Saving checkpoint at 32 epochs
2024/05/04 17:01:03 - mmengine - INFO - Epoch(val) [32][ 50/552]    eta: 0:06:54  time: 0.8263  data_time: 0.8013  memory: 7886  
2024/05/04 17:01:42 - mmengine - INFO - Epoch(val) [32][100/552]    eta: 0:06:02  time: 0.7756  data_time: 0.7511  memory: 799  
2024/05/04 17:01:59 - mmengine - INFO - Epoch(val) [32][150/552]    eta: 0:04:20  time: 0.3455  data_time: 0.3221  memory: 799  
2024/05/04 17:02:18 - mmengine - INFO - Epoch(val) [32][200/552]    eta: 0:03:23  time: 0.3700  data_time: 0.3458  memory: 787  
2024/05/04 17:02:37 - mmengine - INFO - Epoch(val) [32][250/552]    eta: 0:02:42  time: 0.3800  data_time: 0.3561  memory: 787  
2024/05/04 17:02:55 - mmengine - INFO - Epoch(val) [32][300/552]    eta: 0:02:08  time: 0.3597  data_time: 0.3348  memory: 787  
2024/05/04 17:03:11 - mmengine - INFO - Epoch(val) [32][350/552]    eta: 0:01:37  time: 0.3305  data_time: 0.3061  memory: 787  
2024/05/04 17:03:26 - mmengine - INFO - Epoch(val) [32][400/552]    eta: 0:01:09  time: 0.2911  data_time: 0.2662  memory: 783  
2024/05/04 17:03:42 - mmengine - INFO - Epoch(val) [32][450/552]    eta: 0:00:45  time: 0.3187  data_time: 0.2953  memory: 783  
2024/05/04 17:03:58 - mmengine - INFO - Epoch(val) [32][500/552]    eta: 0:00:22  time: 0.3144  data_time: 0.2918  memory: 783  
2024/05/04 17:04:14 - mmengine - INFO - Epoch(val) [32][550/552]    eta: 0:00:00  time: 0.3337  data_time: 0.3109  memory: 783  
2024/05/04 17:04:30 - mmengine - INFO - Evaluating bbox...
2024/05/04 17:04:35 - mmengine - INFO - bbox_mAP_copypaste: 0.639 0.777 0.699 -1.000 -1.000 0.639
2024/05/04 17:04:35 - mmengine - INFO - Epoch(val) [32][552/552]    coco/bbox_mAP: 0.6390  coco/bbox_mAP_50: 0.7770  coco/bbox_mAP_75: 0.6990  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.6390  data_time: 0.3966  time: 0.4206
2024/05/04 17:04:35 - mmengine - INFO - The previous best checkpoint /media/iris/Dong/openmmlab/detection/coding/yolov6/yolov6_m_syncbn_fast_8xb32-300e_coco/best_coco_bbox_mAP_epoch_31.pth is removed
2024/05/04 17:04:37 - mmengine - INFO - The best checkpoint with 0.6390 coco/bbox_mAP at 32 epoch is saved to best_coco_bbox_mAP_epoch_32.pth.
2024/05/04 17:11:50 - mmengine - INFO - Epoch(train) [33][ 50/184]  base_lr: 1.0000e-02 lr: 5.6378e-04  eta: 3:17:05  time: 8.6010  data_time: 7.1273  memory: 7898  loss: 1.8750  loss_cls: 1.3905  loss_bbox: 0.4846
2024/05/04 17:17:30 - mmengine - INFO - Epoch(train) [33][100/184]  base_lr: 1.0000e-02 lr: 5.6378e-04  eta: 3:01:47  time: 6.7827  data_time: 2.6905  memory: 7935  loss: 1.9145  loss_cls: 1.4195  loss_bbox: 0.4950
2024/05/04 17:18:26 - mmengine - INFO - Exp name: yolov6_m_syncbn_fast_8xb32-300e_coco_20240503_102402
2024/05/04 17:23:25 - mmengine - INFO - Epoch(train) [33][150/184]  base_lr: 1.0000e-02 lr: 5.6378e-04  eta: 2:46:41  time: 7.1043  data_time: 5.3550  memory: 7898  loss: 1.8857  loss_cls: 1.3976  loss_bbox: 0.4881
2024/05/04 17:26:38 - mmengine - INFO - Exp name: yolov6_m_syncbn_fast_8xb32-300e_coco_20240503_102402
2024/05/04 17:26:38 - mmengine - INFO - Saving checkpoint at 33 epochs
2024/05/04 17:27:22 - mmengine - INFO - Epoch(val) [33][ 50/552]    eta: 0:06:47  time: 0.8115  data_time: 0.7877  memory: 7886  
2024/05/04 17:28:01 - mmengine - INFO - Epoch(val) [33][100/552]    eta: 0:05:59  time: 0.7783  data_time: 0.7549  memory: 799  
2024/05/04 17:28:20 - mmengine - INFO - Epoch(val) [33][150/552]    eta: 0:04:23  time: 0.3797  data_time: 0.3560  memory: 799  
2024/05/04 17:28:39 - mmengine - INFO - Epoch(val) [33][200/552]    eta: 0:03:27  time: 0.3877  data_time: 0.3640  memory: 787  
2024/05/04 17:28:57 - mmengine - INFO - Epoch(val) [33][250/552]    eta: 0:02:44  time: 0.3653  data_time: 0.3408  memory: 787  
2024/05/04 17:29:15 - mmengine - INFO - Epoch(val) [33][300/552]    eta: 0:02:09  time: 0.3554  data_time: 0.3313  memory: 787  
2024/05/04 17:29:32 - mmengine - INFO - Epoch(val) [33][350/552]    eta: 0:01:38  time: 0.3356  data_time: 0.3115  memory: 787  
2024/05/04 17:29:48 - mmengine - INFO - Epoch(val) [33][400/552]    eta: 0:01:11  time: 0.3300  data_time: 0.3068  memory: 783  
2024/05/04 17:30:05 - mmengine - INFO - Epoch(val) [33][450/552]    eta: 0:00:46  time: 0.3280  data_time: 0.3042  memory: 783  
2024/05/04 17:30:20 - mmengine - INFO - Epoch(val) [33][500/552]    eta: 0:00:22  time: 0.3050  data_time: 0.2813  memory: 783  
2024/05/04 17:30:36 - mmengine - INFO - Epoch(val) [33][550/552]    eta: 0:00:00  time: 0.3113  data_time: 0.2876  memory: 783  
2024/05/04 17:30:49 - mmengine - INFO - Evaluating bbox...
2024/05/04 17:30:55 - mmengine - INFO - bbox_mAP_copypaste: 0.635 0.773 0.693 -1.000 -1.000 0.635
2024/05/04 17:30:55 - mmengine - INFO - Epoch(val) [33][552/552]    coco/bbox_mAP: 0.6350  coco/bbox_mAP_50: 0.7730  coco/bbox_mAP_75: 0.6930  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.6350  data_time: 0.4015  time: 0.4253
2024/05/04 17:37:30 - mmengine - INFO - Epoch(train) [34][ 50/184]  base_lr: 1.0000e-02 lr: 3.9852e-04  eta: 2:21:38  time: 7.9055  data_time: 4.6821  memory: 7898  loss: 1.8750  loss_cls: 1.3975  loss_bbox: 0.4775
2024/05/04 17:43:41 - mmengine - INFO - Epoch(train) [34][100/184]  base_lr: 1.0000e-02 lr: 3.9852e-04  eta: 2:06:57  time: 7.4183  data_time: 3.0297  memory: 7886  loss: 1.8567  loss_cls: 1.3789  loss_bbox: 0.4779
2024/05/04 17:49:45 - mmengine - INFO - Epoch(train) [34][150/184]  base_lr: 1.0000e-02 lr: 3.9852e-04  eta: 1:52:23  time: 7.2804  data_time: 4.8317  memory: 7935  loss: 1.8605  loss_cls: 1.3814  loss_bbox: 0.4791
2024/05/04 17:53:07 - mmengine - INFO - Exp name: yolov6_m_syncbn_fast_8xb32-300e_coco_20240503_102402
2024/05/04 17:53:07 - mmengine - INFO - Saving checkpoint at 34 epochs
2024/05/04 17:53:53 - mmengine - INFO - Epoch(val) [34][ 50/552]    eta: 0:07:08  time: 0.8533  data_time: 0.8294  memory: 7886  
2024/05/04 17:54:29 - mmengine - INFO - Epoch(val) [34][100/552]    eta: 0:05:56  time: 0.7257  data_time: 0.7020  memory: 799  
2024/05/04 17:54:47 - mmengine - INFO - Epoch(val) [34][150/552]    eta: 0:04:20  time: 0.3677  data_time: 0.3426  memory: 799  
2024/05/04 17:55:06 - mmengine - INFO - Epoch(val) [34][200/552]    eta: 0:03:24  time: 0.3764  data_time: 0.3524  memory: 787  
2024/05/04 17:55:24 - mmengine - INFO - Epoch(val) [34][250/552]    eta: 0:02:41  time: 0.3583  data_time: 0.3346  memory: 787  
2024/05/04 17:55:42 - mmengine - INFO - Epoch(val) [34][300/552]    eta: 0:02:07  time: 0.3484  data_time: 0.3250  memory: 787  
2024/05/04 17:55:59 - mmengine - INFO - Epoch(val) [34][350/552]    eta: 0:01:37  time: 0.3431  data_time: 0.3199  memory: 787  
2024/05/04 17:56:14 - mmengine - INFO - Epoch(val) [34][400/552]    eta: 0:01:10  time: 0.3125  data_time: 0.2893  memory: 783  
2024/05/04 17:56:31 - mmengine - INFO - Epoch(val) [34][450/552]    eta: 0:00:45  time: 0.3316  data_time: 0.3079  memory: 783  
2024/05/04 17:56:45 - mmengine - INFO - Epoch(val) [34][500/552]    eta: 0:00:22  time: 0.2849  data_time: 0.2585  memory: 783  
2024/05/04 17:57:02 - mmengine - INFO - Epoch(val) [34][550/552]    eta: 0:00:00  time: 0.3300  data_time: 0.3058  memory: 783  
2024/05/04 17:57:17 - mmengine - INFO - Evaluating bbox...
2024/05/04 17:57:23 - mmengine - INFO - bbox_mAP_copypaste: 0.636 0.775 0.697 -1.000 -1.000 0.636
2024/05/04 17:57:23 - mmengine - INFO - Epoch(val) [34][552/552]    coco/bbox_mAP: 0.6360  coco/bbox_mAP_50: 0.7750  coco/bbox_mAP_75: 0.6970  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.6360  data_time: 0.3971  time: 0.4212
2024/05/04 18:04:35 - mmengine - INFO - Epoch(train) [35][ 50/184]  base_lr: 1.0000e-02 lr: 2.6867e-04  eta: 1:28:15  time: 8.6334  data_time: 3.1186  memory: 7898  loss: 1.9022  loss_cls: 1.4263  loss_bbox: 0.4759
2024/05/04 18:10:54 - mmengine - INFO - Epoch(train) [35][100/184]  base_lr: 1.0000e-02 lr: 2.6867e-04  eta: 1:14:03  time: 7.5835  data_time: 4.4538  memory: 7898  loss: 1.8604  loss_cls: 1.3894  loss_bbox: 0.4710
2024/05/04 18:16:39 - mmengine - INFO - Epoch(train) [35][150/184]  base_lr: 1.0000e-02 lr: 2.6867e-04  eta: 0:59:58  time: 6.9151  data_time: 6.5102  memory: 7886  loss: 1.8409  loss_cls: 1.3737  loss_bbox: 0.4673
2024/05/04 18:19:41 - mmengine - INFO - Exp name: yolov6_m_syncbn_fast_8xb32-300e_coco_20240503_102402
2024/05/04 18:19:41 - mmengine - INFO - Saving checkpoint at 35 epochs
2024/05/04 18:20:26 - mmengine - INFO - Epoch(val) [35][ 50/552]    eta: 0:07:02  time: 0.8425  data_time: 0.8187  memory: 7935  
2024/05/04 18:21:07 - mmengine - INFO - Epoch(val) [35][100/552]    eta: 0:06:15  time: 0.8184  data_time: 0.7951  memory: 799  
2024/05/04 18:21:26 - mmengine - INFO - Epoch(val) [35][150/552]    eta: 0:04:32  time: 0.3755  data_time: 0.3521  memory: 799  
2024/05/04 18:21:45 - mmengine - INFO - Epoch(val) [35][200/552]    eta: 0:03:33  time: 0.3851  data_time: 0.3615  memory: 787  
2024/05/04 18:22:03 - mmengine - INFO - Epoch(val) [35][250/552]    eta: 0:02:47  time: 0.3527  data_time: 0.3288  memory: 787  
2024/05/04 18:22:20 - mmengine - INFO - Epoch(val) [35][300/552]    eta: 0:02:11  time: 0.3490  data_time: 0.3247  memory: 787  
2024/05/04 18:22:38 - mmengine - INFO - Epoch(val) [35][350/552]    eta: 0:01:40  time: 0.3597  data_time: 0.3357  memory: 787  
2024/05/04 18:22:53 - mmengine - INFO - Epoch(val) [35][400/552]    eta: 0:01:11  time: 0.3051  data_time: 0.2813  memory: 783  
2024/05/04 18:23:09 - mmengine - INFO - Epoch(val) [35][450/552]    eta: 0:00:46  time: 0.3071  data_time: 0.2829  memory: 783  
2024/05/04 18:23:24 - mmengine - INFO - Epoch(val) [35][500/552]    eta: 0:00:22  time: 0.2989  data_time: 0.2760  memory: 783  
2024/05/04 18:23:40 - mmengine - INFO - Epoch(val) [35][550/552]    eta: 0:00:00  time: 0.3356  data_time: 0.3121  memory: 783  
2024/05/04 18:23:52 - mmengine - INFO - Evaluating bbox...
2024/05/04 18:23:57 - mmengine - INFO - bbox_mAP_copypaste: 0.645 0.781 0.705 -1.000 -1.000 0.645
2024/05/04 18:23:57 - mmengine - INFO - Epoch(val) [35][552/552]    coco/bbox_mAP: 0.6450  coco/bbox_mAP_50: 0.7810  coco/bbox_mAP_75: 0.7050  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.6450  data_time: 0.4043  time: 0.4280
2024/05/04 18:23:57 - mmengine - INFO - The previous best checkpoint /media/iris/Dong/openmmlab/detection/coding/yolov6/yolov6_m_syncbn_fast_8xb32-300e_coco/best_coco_bbox_mAP_epoch_32.pth is removed
2024/05/04 18:23:59 - mmengine - INFO - The best checkpoint with 0.6450 coco/bbox_mAP at 35 epoch is saved to best_coco_bbox_mAP_epoch_35.pth.
2024/05/04 18:30:56 - mmengine - INFO - Epoch(train) [36][ 50/184]  base_lr: 1.0000e-02 lr: 1.7520e-04  eta: 0:36:35  time: 8.2697  data_time: 6.2608  memory: 7911  loss: 1.8825  loss_cls: 1.3924  loss_bbox: 0.4902
2024/05/04 18:37:16 - mmengine - INFO - Epoch(train) [36][100/184]  base_lr: 1.0000e-02 lr: 1.7520e-04  eta: 0:22:50  time: 7.5956  data_time: 6.8704  memory: 7886  loss: 1.8329  loss_cls: 1.3779  loss_bbox: 0.4550
2024/05/04 18:43:30 - mmengine - INFO - Epoch(train) [36][150/184]  base_lr: 1.0000e-02 lr: 1.7520e-04  eta: 0:09:12  time: 7.4769  data_time: 6.9356  memory: 7898  loss: 1.8602  loss_cls: 1.3903  loss_bbox: 0.4699
2024/05/04 18:46:18 - mmengine - INFO - Exp name: yolov6_m_syncbn_fast_8xb32-300e_coco_20240503_102402
2024/05/04 18:46:18 - mmengine - INFO - Saving checkpoint at 36 epochs
2024/05/04 18:47:03 - mmengine - INFO - Epoch(val) [36][ 50/552]    eta: 0:07:01  time: 0.8401  data_time: 0.8155  memory: 7886  
2024/05/04 18:47:41 - mmengine - INFO - Epoch(val) [36][100/552]    eta: 0:05:58  time: 0.7463  data_time: 0.7217  memory: 799  
2024/05/04 18:48:00 - mmengine - INFO - Epoch(val) [36][150/552]    eta: 0:04:24  time: 0.3876  data_time: 0.3633  memory: 799  
2024/05/04 18:48:19 - mmengine - INFO - Epoch(val) [36][200/552]    eta: 0:03:26  time: 0.3696  data_time: 0.3446  memory: 787  
2024/05/04 18:48:37 - mmengine - INFO - Epoch(val) [36][250/552]    eta: 0:02:43  time: 0.3642  data_time: 0.3394  memory: 787  
2024/05/04 18:48:55 - mmengine - INFO - Epoch(val) [36][300/552]    eta: 0:02:09  time: 0.3720  data_time: 0.3476  memory: 787  
2024/05/04 18:49:12 - mmengine - INFO - Epoch(val) [36][350/552]    eta: 0:01:38  time: 0.3288  data_time: 0.3043  memory: 787  
2024/05/04 18:49:27 - mmengine - INFO - Epoch(val) [36][400/552]    eta: 0:01:10  time: 0.2945  data_time: 0.2704  memory: 783  
2024/05/04 18:49:42 - mmengine - INFO - Epoch(val) [36][450/552]    eta: 0:00:45  time: 0.3123  data_time: 0.2882  memory: 783  
2024/05/04 18:49:57 - mmengine - INFO - Epoch(val) [36][500/552]    eta: 0:00:22  time: 0.3000  data_time: 0.2777  memory: 783  
2024/05/04 18:50:13 - mmengine - INFO - Epoch(val) [36][550/552]    eta: 0:00:00  time: 0.3073  data_time: 0.2835  memory: 783  
2024/05/04 18:50:28 - mmengine - INFO - Evaluating bbox...
2024/05/04 18:50:34 - mmengine - INFO - bbox_mAP_copypaste: 0.646 0.782 0.705 -1.000 -1.000 0.646
2024/05/04 18:50:34 - mmengine - INFO - Epoch(val) [36][552/552]    coco/bbox_mAP: 0.6460  coco/bbox_mAP_50: 0.7820  coco/bbox_mAP_75: 0.7050  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.6460  data_time: 0.3955  time: 0.4197
2024/05/04 18:50:34 - mmengine - INFO - The previous best checkpoint /media/iris/Dong/openmmlab/detection/coding/yolov6/yolov6_m_syncbn_fast_8xb32-300e_coco/best_coco_bbox_mAP_epoch_35.pth is removed
2024/05/04 18:50:36 - mmengine - INFO - The best checkpoint with 0.6460 coco/bbox_mAP at 36 epoch is saved to best_coco_bbox_mAP_epoch_36.pth.
